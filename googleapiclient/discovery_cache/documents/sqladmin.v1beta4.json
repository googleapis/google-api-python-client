{
  "fullyEncodeReservedExpansion": true,
  "version": "v1beta4",
  "servicePath": "",
  "ownerName": "Google",
  "rootUrl": "https://sqladmin.googleapis.com/",
  "protocol": "rest",
  "description": "API for Cloud SQL database instance management",
  "resources": {
    "operations": {
      "methods": {
        "list": {
          "parameters": {
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "type": "string",
              "location": "query"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "maxResults": {
              "format": "uint32",
              "description": "Maximum number of operations per response.",
              "location": "query",
              "type": "integer"
            },
            "instance": {
              "location": "query",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/operations",
          "response": {
            "$ref": "OperationsListResponse"
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "project"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/operations",
          "description": "Lists all instance operations that have been performed on the given Cloud SQL instance in the reverse chronological order of the start time.",
          "id": "sql.operations.list"
        },
        "get": {
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "sql/v1beta4/projects/{project}/operations/{operation}",
          "parameters": {
            "operation": {
              "description": "Instance operation ID.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "id": "sql.operations.get",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "operation"
          ],
          "description": "Retrieves an instance operation that has been performed on an instance.",
          "httpMethod": "GET",
          "path": "sql/v1beta4/projects/{project}/operations/{operation}"
        }
      }
    },
    "instances": {
      "methods": {
        "list": {
          "parameterOrder": [
            "project"
          ],
          "description": "Lists instances under a given project.",
          "flatPath": "sql/v1beta4/projects/{project}/instances",
          "response": {
            "$ref": "InstancesListResponse"
          },
          "id": "sql.instances.list",
          "path": "sql/v1beta4/projects/{project}/instances",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "filter": {
              "description": "A filter expression that filters resources listed in the response. The expression is in the form of field:value. For example, 'instanceType:CLOUD_SQL_INSTANCE'. Fields can be nested as needed as per their JSON representation, such as 'settings.userLabels.auto_start:true'. Multiple filter queries are space-separated. For example. 'state:RUNNABLE instanceType:CLOUD_SQL_INSTANCE'. By default, each expression is an AND expression. However, you can include AND and OR expressions explicitly.",
              "type": "string",
              "location": "query"
            },
            "pageToken": {
              "description": "A previously-returned page token representing part of the larger set of results to view.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "type": "integer",
              "description": "The maximum number of results to return per response.",
              "format": "uint32",
              "location": "query"
            },
            "project": {
              "description": "Project ID of the project for which to list Cloud SQL instances.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "httpMethod": "GET"
        },
        "patch": {
          "httpMethod": "PATCH",
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path",
              "type": "string"
            },
            "project": {
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            }
          },
          "request": {
            "$ref": "DatabaseInstance"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Updates settings of a Cloud SQL instance. This method supports patch semantics.",
          "id": "sql.instances.patch",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}"
        },
        "update": {
          "request": {
            "$ref": "DatabaseInstance"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "id": "sql.instances.update",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string",
              "required": true
            },
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "location": "path"
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "description": "Updates settings of a Cloud SQL instance. Using this operation might cause your instance to restart.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "httpMethod": "PUT"
        },
        "insert": {
          "path": "sql/v1beta4/projects/{project}/instances",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.insert",
          "parameterOrder": [
            "project"
          ],
          "httpMethod": "POST",
          "parameters": {
            "project": {
              "required": true,
              "description": "Project ID of the project to which the newly created Cloud SQL instances should belong.",
              "type": "string",
              "location": "path"
            }
          },
          "description": "Creates a new Cloud SQL instance.",
          "request": {
            "$ref": "DatabaseInstance"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances",
          "response": {
            "$ref": "Operation"
          }
        },
        "stopReplica": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/stopReplica",
          "parameters": {
            "instance": {
              "type": "string",
              "required": true,
              "description": "Cloud SQL read replica instance name.",
              "location": "path"
            },
            "project": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "ID of the project that contains the read replica."
            }
          },
          "description": "Stops the replication in the read replica instance.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/stopReplica",
          "id": "sql.instances.stopReplica",
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "get": {
          "parameters": {
            "instance": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Database instance ID. This does not include the project ID."
            },
            "project": {
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Retrieves a resource containing information about a Cloud SQL instance.",
          "response": {
            "$ref": "DatabaseInstance"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.get",
          "httpMethod": "GET"
        },
        "export": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/export",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/export",
          "id": "sql.instances.export",
          "description": "Exports data from a Cloud SQL instance to a Cloud Storage bucket as a SQL dump or CSV file.",
          "parameters": {
            "instance": {
              "type": "string",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            },
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance to be exported."
            }
          },
          "request": {
            "$ref": "InstancesExportRequest"
          },
          "httpMethod": "POST",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "clone": {
          "description": "Creates a Cloud SQL instance as a clone of the source instance. Using this operation might cause your instance to restart.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/clone",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "request": {
            "$ref": "InstancesCloneRequest"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/clone",
          "httpMethod": "POST",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.instances.clone",
          "parameters": {
            "instance": {
              "required": true,
              "description": "The ID of the Cloud SQL instance to be cloned (source). This does not include the project ID.",
              "location": "path",
              "type": "string"
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the source as well as the clone Cloud SQL instance."
            }
          }
        },
        "failover": {
          "httpMethod": "POST",
          "request": {
            "$ref": "InstancesFailoverRequest"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "description": "Failover the instance to its failover replica instance. Using this operation might cause your instance to restart.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.failover",
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "ID of the project that contains the read replica."
            },
            "instance": {
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "required": true
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/failover",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/failover"
        },
        "delete": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.delete",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}",
          "description": "Deletes a Cloud SQL instance.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}",
          "parameters": {
            "instance": {
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "required": true
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance to be deleted.",
              "required": true,
              "location": "path"
            }
          },
          "httpMethod": "DELETE"
        },
        "truncateLog": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/truncateLog",
          "parameters": {
            "project": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Project ID of the Cloud SQL project."
            },
            "instance": {
              "type": "string",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path"
            }
          },
          "httpMethod": "POST",
          "description": "Truncate MySQL general and slow query log tables",
          "id": "sql.instances.truncateLog",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/truncateLog",
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "InstancesTruncateLogRequest"
          }
        },
        "promoteReplica": {
          "description": "Promotes the read replica instance to be a stand-alone Cloud SQL instance. Using this operation might cause your instance to restart.",
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/promoteReplica",
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.promoteReplica",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/promoteReplica",
          "parameters": {
            "instance": {
              "location": "path",
              "required": true,
              "description": "Cloud SQL read replica instance name.",
              "type": "string"
            },
            "project": {
              "description": "ID of the project that contains the read replica.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "resetSslConfig": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/resetSslConfig",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "POST",
          "description": "Deletes all client certificates and generates a new server SSL certificate for the instance.",
          "id": "sql.instances.resetSslConfig",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/resetSslConfig",
          "parameterOrder": [
            "project",
            "instance"
          ]
        },
        "restart": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/restart",
          "httpMethod": "POST",
          "description": "Restarts a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/restart",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "type": "string",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true
            },
            "project": {
              "description": "Project ID of the project that contains the instance to be restarted.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.restart"
        },
        "addServerCa": {
          "httpMethod": "POST",
          "id": "sql.instances.addServerCa",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/addServerCa",
          "parameters": {
            "instance": {
              "location": "path",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/addServerCa",
          "description": "Add a new trusted Certificate Authority (CA) version for the specified instance. Required to prepare for a certificate rotation. If a CA version was previously added but never used in a certificate rotation, this operation replaces that version. There cannot be more than one CA version waiting to be rotated in.",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "startReplica": {
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/startReplica",
          "parameters": {
            "project": {
              "description": "ID of the project that contains the read replica.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "instance": {
              "description": "Cloud SQL read replica instance name.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "id": "sql.instances.startReplica",
          "httpMethod": "POST",
          "description": "Starts the replication in the read replica instance.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/startReplica",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          }
        },
        "demoteMaster": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/demoteMaster",
          "parameters": {
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "ID of the project that contains the instance."
            },
            "instance": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Cloud SQL instance name."
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/demoteMaster",
          "request": {
            "$ref": "InstancesDemoteMasterRequest"
          },
          "response": {
            "$ref": "Operation"
          },
          "id": "sql.instances.demoteMaster",
          "httpMethod": "POST"
        },
        "import": {
          "id": "sql.instances.import",
          "parameters": {
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/import",
          "request": {
            "$ref": "InstancesImportRequest"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "POST",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/import",
          "description": "Imports data into a Cloud SQL instance from a SQL dump or CSV file in Cloud Storage.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform"
          ]
        },
        "listServerCas": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "InstancesListServerCasResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.instances.listServerCas",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/listServerCas",
          "httpMethod": "GET",
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            }
          },
          "description": "Lists all of the trusted Certificate Authorities (CAs) for the specified instance. There can be up to three CAs listed: the CA that was used to sign the certificate that is currently in use, a CA that has been added but not yet used to sign a certificate, and a CA used to sign a certificate that has previously rotated out.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/listServerCas"
        },
        "rotateServerCa": {
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "id": "sql.instances.rotateServerCa",
          "httpMethod": "POST",
          "response": {
            "$ref": "Operation"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/rotateServerCa",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Rotates the server certificate to one signed by the Certificate Authority (CA) version previously added with the addServerCA method.",
          "request": {
            "$ref": "InstancesRotateServerCaRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/rotateServerCa"
        },
        "restoreBackup": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/restoreBackup",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "instance": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "type": "string",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "location": "path"
            }
          },
          "id": "sql.instances.restoreBackup",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/restoreBackup",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "POST",
          "description": "Restores a backup of a Cloud SQL instance. Using this operation might cause your instance to restart.",
          "request": {
            "$ref": "InstancesRestoreBackupRequest"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    },
    "databases": {
      "methods": {
        "get": {
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "httpMethod": "GET",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "parameters": {
            "instance": {
              "location": "path",
              "description": "Database instance ID. This does not include the project ID.",
              "type": "string",
              "required": true
            },
            "database": {
              "required": true,
              "description": "Name of the database in the instance.",
              "location": "path",
              "type": "string"
            },
            "project": {
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "Database"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "id": "sql.databases.get",
          "description": "Retrieves a resource containing information about a database inside a Cloud SQL instance."
        },
        "delete": {
          "httpMethod": "DELETE",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Deletes a database from a Cloud SQL instance.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "id": "sql.databases.delete",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "database": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Name of the database to be deleted in the instance."
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            }
          },
          "response": {
            "$ref": "Operation"
          },
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ]
        },
        "list": {
          "httpMethod": "GET",
          "id": "sql.databases.list",
          "response": {
            "$ref": "DatabasesListResponse"
          },
          "parameters": {
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "project": {
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "required": true
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "description": "Lists databases in the specified Cloud SQL instance.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases"
        },
        "insert": {
          "description": "Inserts a resource containing information about a database inside a Cloud SQL instance.",
          "response": {
            "$ref": "Operation"
          },
          "request": {
            "$ref": "Database"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "instance": {
              "type": "string",
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases",
          "httpMethod": "POST",
          "id": "sql.databases.insert"
        },
        "patch": {
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "request": {
            "$ref": "Database"
          },
          "description": "Partially updates a resource containing information about a database inside a Cloud SQL instance. This method supports patch semantics.",
          "id": "sql.databases.patch",
          "parameters": {
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Database instance ID. This does not include the project ID."
            },
            "database": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Name of the database to be updated in the instance."
            },
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "httpMethod": "PATCH",
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ]
        },
        "update": {
          "request": {
            "$ref": "Database"
          },
          "description": "Updates a resource containing information about a database inside a Cloud SQL instance.",
          "id": "sql.databases.update",
          "response": {
            "$ref": "Operation"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/databases/{database}",
          "httpMethod": "PUT",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance",
            "database"
          ],
          "parameters": {
            "instance": {
              "required": true,
              "location": "path",
              "description": "Database instance ID. This does not include the project ID.",
              "type": "string"
            },
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string"
            },
            "database": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Name of the database to be updated in the instance."
            }
          }
        }
      }
    },
    "users": {
      "methods": {
        "update": {
          "description": "Updates an existing user in a Cloud SQL instance.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "id": "sql.users.update",
          "httpMethod": "PUT",
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "host": {
              "type": "string",
              "location": "query",
              "description": "Optional. Host of the user in the instance."
            },
            "name": {
              "description": "Name of the user in the instance.",
              "type": "string",
              "location": "query"
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameterOrder": [
            "project",
            "instance"
          ],
          "request": {
            "$ref": "User"
          }
        },
        "list": {
          "response": {
            "$ref": "UsersListResponse"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "parameters": {
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string",
              "location": "path"
            },
            "instance": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Database instance ID. This does not include the project ID."
            }
          },
          "httpMethod": "GET",
          "id": "sql.users.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "description": "Lists users in the specified Cloud SQL instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        },
        "insert": {
          "description": "Creates a new user in a Cloud SQL instance.",
          "response": {
            "$ref": "Operation"
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "parameters": {
            "instance": {
              "description": "Database instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path",
              "required": true
            },
            "project": {
              "description": "Project ID of the project that contains the instance.",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "httpMethod": "POST",
          "request": {
            "$ref": "User"
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "id": "sql.users.insert"
        },
        "delete": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "id": "sql.users.delete",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Deletes a user from a Cloud SQL instance.",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/users",
          "parameters": {
            "instance": {
              "type": "string",
              "description": "Database instance ID. This does not include the project ID.",
              "location": "path",
              "required": true
            },
            "name": {
              "location": "query",
              "type": "string",
              "description": "Name of the user in the instance."
            },
            "host": {
              "description": "Host of the user in the instance.",
              "type": "string",
              "location": "query"
            },
            "project": {
              "location": "path",
              "description": "Project ID of the project that contains the instance.",
              "required": true,
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "httpMethod": "DELETE"
        }
      }
    },
    "flags": {
      "methods": {
        "list": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "sql/v1beta4/flags",
          "parameters": {
            "databaseVersion": {
              "location": "query",
              "type": "string",
              "description": "Database type and version you want to retrieve flags for. By default, this method returns flags for all database types and versions."
            }
          },
          "response": {
            "$ref": "FlagsListResponse"
          },
          "httpMethod": "GET",
          "flatPath": "sql/v1beta4/flags",
          "id": "sql.flags.list",
          "parameterOrder": [],
          "description": "List all available database flags for Cloud SQL instances."
        }
      }
    },
    "backupRuns": {
      "methods": {
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "BackupRun"
          },
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "id": "sql.backupRuns.get",
          "httpMethod": "GET",
          "description": "Retrieves a resource containing information about a backup run.",
          "parameters": {
            "instance": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "project": {
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "type": "string"
            },
            "id": {
              "type": "string",
              "format": "int64",
              "required": true,
              "description": "The ID of this Backup Run.",
              "location": "path"
            }
          }
        },
        "insert": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "httpMethod": "POST",
          "request": {
            "$ref": "BackupRun"
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "description": "Creates a new backup run on demand. This method is applicable only to Second Generation instances.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "id": "sql.backupRuns.insert",
          "response": {
            "$ref": "Operation"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "type": "string",
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true
            },
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            }
          }
        },
        "list": {
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "instance": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "pageToken": {
              "location": "query",
              "type": "string",
              "description": "A previously-returned page token representing part of the larger set of results to view."
            },
            "project": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            },
            "maxResults": {
              "location": "query",
              "format": "int32",
              "description": "Maximum number of backup runs per response.",
              "type": "integer"
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns",
          "description": "Lists all backup runs associated with a given instance and configuration in the reverse chronological order of the backup initiation time.",
          "httpMethod": "GET",
          "id": "sql.backupRuns.list",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "response": {
            "$ref": "BackupRunsListResponse"
          }
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "response": {
            "$ref": "Operation"
          },
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID."
            },
            "id": {
              "description": "The ID of the Backup Run to delete. To find a Backup Run ID, use the list method.",
              "required": true,
              "type": "string",
              "location": "path",
              "format": "int64"
            }
          },
          "id": "sql.backupRuns.delete",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "description": "Deletes the backup taken by a backup run.",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/backupRuns/{id}",
          "parameterOrder": [
            "project",
            "instance",
            "id"
          ],
          "httpMethod": "DELETE"
        }
      }
    },
    "projects": {
      "resources": {
        "instances": {
          "methods": {
            "rescheduleMaintenance": {
              "parameterOrder": [
                "project",
                "instance"
              ],
              "parameters": {
                "project": {
                  "location": "path",
                  "required": true,
                  "description": "ID of the project that contains the instance.",
                  "type": "string"
                },
                "instance": {
                  "type": "string",
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "required": true,
                  "location": "path"
                }
              },
              "response": {
                "$ref": "Operation"
              },
              "id": "sql.projects.instances.rescheduleMaintenance",
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/rescheduleMaintenance",
              "description": "Reschedules the maintenance on the given instance.",
              "httpMethod": "POST",
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/rescheduleMaintenance",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "request": {
                "$ref": "SqlInstancesRescheduleMaintenanceRequestBody"
              }
            },
            "startExternalSync": {
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/startExternalSync",
              "response": {
                "$ref": "Operation"
              },
              "parameters": {
                "project": {
                  "type": "string",
                  "location": "path",
                  "description": "ID of the project that contains the instance.",
                  "required": true
                },
                "syncMode": {
                  "enumDescriptions": [
                    "Unknown external sync mode, will be defaulted to ONLINE mode",
                    "Online external sync will set up replication after initial data external sync",
                    "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
                  ],
                  "description": "External sync mode.",
                  "type": "string",
                  "location": "query",
                  "enum": [
                    "EXTERNAL_SYNC_MODE_UNSPECIFIED",
                    "ONLINE",
                    "OFFLINE"
                  ]
                },
                "skipVerification": {
                  "type": "boolean",
                  "description": "Whether to skip the verification step (VESS).",
                  "location": "query"
                },
                "instance": {
                  "type": "string",
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "description": "Start External primary instance migration.",
              "httpMethod": "POST",
              "id": "sql.projects.instances.startExternalSync",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/startExternalSync"
            },
            "verifyExternalSyncSettings": {
              "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "path": "sql/v1beta4/projects/{project}/instances/{instance}/verifyExternalSyncSettings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/sqlservice.admin"
              ],
              "response": {
                "$ref": "SqlInstancesVerifyExternalSyncSettingsResponse"
              },
              "id": "sql.projects.instances.verifyExternalSyncSettings",
              "description": "Verify External primary instance external sync settings.",
              "httpMethod": "POST",
              "parameterOrder": [
                "project",
                "instance"
              ],
              "parameters": {
                "syncMode": {
                  "enumDescriptions": [
                    "Unknown external sync mode, will be defaulted to ONLINE mode",
                    "Online external sync will set up replication after initial data external sync",
                    "Offline external sync only dumps and loads a one-time snapshot of the primary instance's data"
                  ],
                  "description": "External sync mode",
                  "enum": [
                    "EXTERNAL_SYNC_MODE_UNSPECIFIED",
                    "ONLINE",
                    "OFFLINE"
                  ],
                  "location": "query",
                  "type": "string"
                },
                "verifyConnectionOnly": {
                  "type": "boolean",
                  "description": "Flag to enable verifying connection only",
                  "location": "query"
                },
                "project": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Project ID of the project that contains the instance."
                },
                "instance": {
                  "required": true,
                  "location": "path",
                  "description": "Cloud SQL instance ID. This does not include the project ID.",
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "tiers": {
      "methods": {
        "list": {
          "response": {
            "$ref": "TiersListResponse"
          },
          "id": "sql.tiers.list",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "parameters": {
            "project": {
              "required": true,
              "description": "Project ID of the project for which to list tiers.",
              "location": "path",
              "type": "string"
            }
          },
          "flatPath": "sql/v1beta4/projects/{project}/tiers",
          "parameterOrder": [
            "project"
          ],
          "description": "Lists all available machine types (tiers) for Cloud SQL, for example, db-n1-standard-1. For related information, see Pricing.",
          "path": "sql/v1beta4/projects/{project}/tiers",
          "httpMethod": "GET"
        }
      }
    },
    "sslCerts": {
      "methods": {
        "insert": {
          "parameterOrder": [
            "project",
            "instance"
          ],
          "parameters": {
            "project": {
              "location": "path",
              "required": true,
              "type": "string",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "required": true,
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "location": "path",
              "type": "string"
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "description": "Creates an SSL certificate and returns it along with the private key and server certificate authority. The new certificate will not be usable until the instance is restarted.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "request": {
            "$ref": "SslCertsInsertRequest"
          },
          "id": "sql.sslCerts.insert",
          "httpMethod": "POST",
          "response": {
            "$ref": "SslCertsInsertResponse"
          }
        },
        "list": {
          "response": {
            "$ref": "SslCertsListResponse"
          },
          "httpMethod": "GET",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts",
          "id": "sql.sslCerts.list",
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "required": true,
              "type": "string",
              "location": "path"
            }
          },
          "parameterOrder": [
            "project",
            "instance"
          ],
          "description": "Lists all of the current SSL certificates for the instance.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts"
        },
        "get": {
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "description": "Retrieves a particular SSL certificate. Does not include the private key (required for usage). The private key must be saved from the response to initial creation.",
          "httpMethod": "GET",
          "parameters": {
            "project": {
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance.",
              "location": "path"
            },
            "sha1Fingerprint": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Sha1 FingerPrint."
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "response": {
            "$ref": "SslCert"
          },
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "id": "sql.sslCerts.get"
        },
        "delete": {
          "parameters": {
            "sha1Fingerprint": {
              "type": "string",
              "description": "Sha1 FingerPrint.",
              "required": true,
              "location": "path"
            },
            "project": {
              "location": "path",
              "type": "string",
              "required": true,
              "description": "Project ID of the project that contains the instance."
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "location": "path",
              "required": true
            }
          },
          "id": "sql.sslCerts.delete",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/sslCerts/{sha1Fingerprint}",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ],
          "httpMethod": "DELETE",
          "parameterOrder": [
            "project",
            "instance",
            "sha1Fingerprint"
          ],
          "description": "Deletes the SSL certificate. For First Generation instances, the certificate remains valid until the instance is restarted.",
          "response": {
            "$ref": "Operation"
          }
        },
        "createEphemeral": {
          "httpMethod": "POST",
          "path": "sql/v1beta4/projects/{project}/instances/{instance}/createEphemeral",
          "response": {
            "$ref": "SslCert"
          },
          "parameters": {
            "project": {
              "required": true,
              "type": "string",
              "description": "Project ID of the Cloud SQL project.",
              "location": "path"
            },
            "instance": {
              "description": "Cloud SQL instance ID. This does not include the project ID.",
              "type": "string",
              "required": true,
              "location": "path"
            }
          },
          "id": "sql.sslCerts.createEphemeral",
          "flatPath": "sql/v1beta4/projects/{project}/instances/{instance}/createEphemeral",
          "request": {
            "$ref": "SslCertsCreateEphemeralRequest"
          },
          "description": "Generates a short-lived X509 certificate containing the provided public key and signed by a private key specific to the target instance. Users may use the certificate to authenticate as themselves when connecting to the database.",
          "parameterOrder": [
            "project",
            "instance"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/sqlservice.admin"
          ]
        }
      }
    }
  },
  "revision": "20210119",
  "basePath": "",
  "baseUrl": "https://sqladmin.googleapis.com/",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "prettyPrint": {
      "default": "true",
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks."
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "alt": {
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "default": "json"
    },
    "fields": {
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "key": {
      "location": "query",
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "quotaUser": {
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    }
  },
  "discoveryVersion": "v1",
  "schemas": {
    "InstancesListServerCasResponse": {
      "id": "InstancesListServerCasResponse",
      "properties": {
        "activeVersion": {
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#instancesListServerCas*.",
          "type": "string"
        },
        "certs": {
          "description": "List of server CA certificates for the instance.",
          "items": {
            "$ref": "SslCert"
          },
          "type": "array"
        }
      },
      "description": "Instances ListServerCas response.",
      "type": "object"
    },
    "SqlServerUserDetails": {
      "id": "SqlServerUserDetails",
      "properties": {
        "disabled": {
          "description": "If the user has been disabled",
          "type": "boolean"
        },
        "serverRoles": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The server roles for this user"
        }
      },
      "description": "Represents a Sql Server user on the Cloud SQL instance.",
      "type": "object"
    },
    "AclEntry": {
      "description": "An entry for an Access Control list.",
      "id": "AclEntry",
      "properties": {
        "kind": {
          "description": "This is always *sql#aclEntry*.",
          "type": "string"
        },
        "value": {
          "description": "The allowlisted value for the access control list.",
          "type": "string"
        },
        "expirationTime": {
          "format": "google-datetime",
          "description": "The time when this access control entry expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Optional. A label to identify this entry."
        }
      },
      "type": "object"
    },
    "DemoteMasterMySqlReplicaConfiguration": {
      "properties": {
        "kind": {
          "description": "This is always *sql#demoteMasterMysqlReplicaConfiguration*.",
          "type": "string"
        },
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "PEM representation of the replica's x509 certificate.",
          "type": "string"
        },
        "username": {
          "type": "string",
          "description": "The username for the replication connection."
        },
        "password": {
          "description": "The password for the replication connection.",
          "type": "string"
        },
        "clientKey": {
          "type": "string",
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate. The format of the replica's private key can be either PKCS #1 or PKCS #8."
        }
      },
      "id": "DemoteMasterMySqlReplicaConfiguration",
      "type": "object",
      "description": "Read-replica configuration specific to MySQL databases."
    },
    "SslCertsInsertResponse": {
      "id": "SslCertsInsertResponse",
      "description": "SslCert insert response.",
      "type": "object",
      "properties": {
        "serverCaCert": {
          "description": "The server Certificate Authority's certificate. If this is missing you can force a new one to be generated by calling resetSslConfig method on instances resource.",
          "$ref": "SslCert"
        },
        "clientCert": {
          "$ref": "SslCertDetail",
          "description": "The new client certificate and private key."
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#sslCertsInsert*."
        },
        "operation": {
          "$ref": "Operation",
          "description": "The operation to track the ssl certs insert request."
        }
      }
    },
    "SqlServerDatabaseDetails": {
      "properties": {
        "compatibilityLevel": {
          "format": "int32",
          "type": "integer",
          "description": "The version of SQL Server with which the database is to be made compatible"
        },
        "recoveryModel": {
          "type": "string",
          "description": "The recovery model of a SQL Server database"
        }
      },
      "description": "Represents a Sql Server database on the Cloud SQL instance.",
      "type": "object",
      "id": "SqlServerDatabaseDetails"
    },
    "InstancesFailoverRequest": {
      "type": "object",
      "properties": {
        "failoverContext": {
          "description": "Failover Context.",
          "$ref": "FailoverContext"
        }
      },
      "id": "InstancesFailoverRequest",
      "description": "Instance failover request."
    },
    "Operation": {
      "description": "An Operation resource. For successful operations that return an Operation resource, only the fields relevant to the operation are populated in the resource. Next field: 18",
      "id": "Operation",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation."
        },
        "importContext": {
          "description": "The context for import operation, if applicable.",
          "$ref": "ImportContext"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#operation*."
        },
        "exportContext": {
          "description": "The context for export operation, if applicable.",
          "$ref": "ExportContext"
        },
        "error": {
          "description": "If errors occurred during processing of this operation, this field will be populated.",
          "$ref": "OperationErrors"
        },
        "endTime": {
          "type": "string",
          "description": "The time this operation finished in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime"
        },
        "startTime": {
          "description": "The time this operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime",
          "type": "string"
        },
        "operationType": {
          "enum": [
            "SQL_OPERATION_TYPE_UNSPECIFIED",
            "IMPORT",
            "EXPORT",
            "CREATE",
            "UPDATE",
            "DELETE",
            "RESTART",
            "BACKUP",
            "SNAPSHOT",
            "BACKUP_VOLUME",
            "DELETE_VOLUME",
            "RESTORE_VOLUME",
            "INJECT_USER",
            "CLONE",
            "STOP_REPLICA",
            "START_REPLICA",
            "PROMOTE_REPLICA",
            "CREATE_REPLICA",
            "CREATE_USER",
            "DELETE_USER",
            "UPDATE_USER",
            "CREATE_DATABASE",
            "DELETE_DATABASE",
            "UPDATE_DATABASE",
            "FAILOVER",
            "DELETE_BACKUP",
            "RECREATE_REPLICA",
            "TRUNCATE_LOG",
            "DEMOTE_MASTER",
            "MAINTENANCE",
            "ENABLE_PRIVATE_IP",
            "DEFER_MAINTENANCE",
            "CREATE_CLONE",
            "RESCHEDULE_MAINTENANCE",
            "START_EXTERNAL_SYNC"
          ],
          "enumDescriptions": [
            "Unknown operation type.",
            "Imports data into a Cloud SQL instance.",
            "Exports data from a Cloud SQL instance to a Cloud Storage bucket.",
            "Creates a new Cloud SQL instance.",
            "Updates the settings of a Cloud SQL instance.",
            "Deletes a Cloud SQL instance.",
            "Restarts the Cloud SQL instance.",
            "",
            "",
            "Performs instance backup.",
            "Deletes an instance backup.",
            "Restores an instance backup.",
            "Injects a privileged user in mysql for MOB instances.",
            "Clones a Cloud SQL instance.",
            "Stops replication on a Cloud SQL read replica instance.",
            "Starts replication on a Cloud SQL read replica instance.",
            "Promotes a Cloud SQL replica instance.",
            "Creates a Cloud SQL replica instance.",
            "Creates a new user in a Cloud SQL instance.",
            "Deletes a user from a Cloud SQL instance.",
            "Updates an existing user in a Cloud SQL instance.",
            "Creates a database in the Cloud SQL instance.",
            "Deletes a database in the Cloud SQL instance.",
            "Updates a database in the Cloud SQL instance.",
            "Performs failover of an HA-enabled Cloud SQL failover replica.",
            "Deletes the backup taken by a backup run.",
            "",
            "Truncates a general or slow log table in MySQL.",
            "Demotes the stand-alone instance to be a Cloud SQL read replica for an external database server.",
            "Indicates that the instance is currently in maintenance. Maintenance typically causes the instance to be unavailable for 1-3 minutes.",
            "This field is deprecated, and will be removed in future version of API.",
            "",
            "Creates clone instance.",
            "Reschedule maintenance to another time.",
            "Starts external sync of a Cloud SQL EM replica to an external primary instance."
          ],
          "type": "string",
          "description": "The type of the operation. Valid values are: *CREATE* *DELETE* *UPDATE* *RESTART* *IMPORT* *EXPORT* *BACKUP_VOLUME* *RESTORE_VOLUME* *CREATE_USER* *DELETE_USER* *CREATE_DATABASE* *DELETE_DATABASE*"
        },
        "status": {
          "type": "string",
          "description": "The status of an operation. Valid values are: *PENDING* *RUNNING* *DONE* *SQL_OPERATION_STATUS_UNSPECIFIED*",
          "enumDescriptions": [
            "The state of the operation is unknown.",
            "The operation has been queued, but has not started yet.",
            "The operation is running.",
            "The operation completed."
          ],
          "enum": [
            "SQL_OPERATION_STATUS_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ]
        },
        "insertTime": {
          "description": "The time this operation was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime",
          "type": "string"
        },
        "targetId": {
          "description": "Name of the database instance related to this operation.",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "backupContext": {
          "$ref": "BackupContext",
          "description": "The context for backup operation, if applicable."
        },
        "targetLink": {
          "type": "string"
        },
        "targetProject": {
          "type": "string",
          "description": "The project ID of the target instance related to this operation."
        },
        "user": {
          "type": "string",
          "description": "The email address of the user who initiated this operation."
        }
      }
    },
    "SqlActiveDirectoryConfig": {
      "id": "SqlActiveDirectoryConfig",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always sql#activeDirectoryConfig."
        },
        "domain": {
          "type": "string",
          "description": "The name of the domain (e.g., mydomain.com)."
        }
      },
      "type": "object",
      "description": "Active Directory configuration, relevant only for Cloud SQL for SQL Server."
    },
    "SqlScheduledMaintenance": {
      "properties": {
        "startTime": {
          "description": "The start time of any upcoming scheduled maintenance for this instance.",
          "format": "google-datetime",
          "type": "string"
        },
        "canReschedule": {
          "description": "If the scheduled maintenance can be rescheduled.",
          "type": "boolean"
        },
        "canDefer": {
          "type": "boolean"
        }
      },
      "id": "SqlScheduledMaintenance",
      "type": "object",
      "description": "Any scheduled maintenancce for this instance."
    },
    "OperationsListResponse": {
      "type": "object",
      "id": "OperationsListResponse",
      "description": "Database instance list operations response.",
      "properties": {
        "items": {
          "type": "array",
          "description": "List of operation resources.",
          "items": {
            "$ref": "Operation"
          }
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#operationsList*.",
          "type": "string"
        }
      }
    },
    "SslCertDetail": {
      "properties": {
        "certPrivateKey": {
          "type": "string",
          "description": "The private key for the client cert, in pem format. Keep private in order to protect your security."
        },
        "certInfo": {
          "$ref": "SslCert",
          "description": "The public information about the cert."
        }
      },
      "description": "SslCertDetail.",
      "type": "object",
      "id": "SslCertDetail"
    },
    "BackupRun": {
      "id": "BackupRun",
      "description": "A BackupRun resource.",
      "type": "object",
      "properties": {
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "error": {
          "$ref": "OperationError",
          "description": "Information about why the backup operation failed. This is only present if the run has the FAILED status."
        },
        "backupKind": {
          "enum": [
            "SQL_BACKUP_KIND_UNSPECIFIED",
            "SNAPSHOT",
            "PHYSICAL"
          ],
          "type": "string",
          "description": "Specifies the kind of backup, PHYSICAL or DEFAULT_SNAPSHOT.",
          "enumDescriptions": [
            "This is an unknown BackupKind.",
            "The snapshot based backups",
            "Physical backups"
          ]
        },
        "endTime": {
          "format": "google-datetime",
          "description": "The time the backup operation completed in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "type": "string"
        },
        "location": {
          "description": "Location of the backups.",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "The identifier for this backup run. Unique only for a specific Cloud SQL instance.",
          "format": "int64"
        },
        "description": {
          "type": "string",
          "description": "The description of this run, only applicable to on-demand backups."
        },
        "enqueuedTime": {
          "type": "string",
          "description": "The time the run was enqueued in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime"
        },
        "diskEncryptionStatus": {
          "description": "Encryption status specific to a backup. Applies only to Second Generation instances.",
          "$ref": "DiskEncryptionStatus"
        },
        "status": {
          "enumDescriptions": [
            "The status of the run is unknown.",
            "The backup operation was enqueued.",
            "The backup is overdue across a given backup window. Indicates a problem. Example: Long-running operation in progress during the whole window.",
            "The backup is in progress.",
            "The backup failed.",
            "The backup was successful.",
            "The backup was skipped (without problems) for a given backup window. Example: Instance was idle.",
            "The backup is about to be deleted.",
            "The backup deletion failed.",
            "The backup has been deleted."
          ],
          "description": "The status of this run.",
          "enum": [
            "SQL_BACKUP_RUN_STATUS_UNSPECIFIED",
            "ENQUEUED",
            "OVERDUE",
            "RUNNING",
            "FAILED",
            "SUCCESSFUL",
            "SKIPPED",
            "DELETION_PENDING",
            "DELETION_FAILED",
            "DELETED"
          ],
          "type": "string"
        },
        "diskEncryptionConfiguration": {
          "$ref": "DiskEncryptionConfiguration",
          "description": "Encryption configuration specific to a backup. Applies only to Second Generation instances."
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "This is an unknown BackupRun type.",
            "The backup schedule automatically triggers a backup.",
            "The user manually triggers a backup."
          ],
          "description": "The type of this run; can be either \"AUTOMATED\" or \"ON_DEMAND\". This field defaults to \"ON_DEMAND\" and is ignored, when specified for insert requests.",
          "enum": [
            "SQL_BACKUP_RUN_TYPE_UNSPECIFIED",
            "AUTOMATED",
            "ON_DEMAND"
          ]
        },
        "kind": {
          "description": "This is always *sql#backupRun*.",
          "type": "string"
        },
        "startTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time the backup operation actually started in UTC timezone in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
        },
        "windowStartTime": {
          "description": "The start time of the backup window during which this the backup was attempted in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "BackupRetentionSettings": {
      "id": "BackupRetentionSettings",
      "properties": {
        "retainedBackups": {
          "type": "integer",
          "format": "int32",
          "description": "Depending on the value of retention_unit, this is used to determine if a backup needs to be deleted. If retention_unit is 'COUNT', we will retain this many backups."
        },
        "retentionUnit": {
          "description": "The unit that 'retained_backups' represents.",
          "enumDescriptions": [
            "Backup retention unit is unspecified, will be treated as COUNT.",
            "Retention will be by count, eg. \"retain the most recent 7 backups\"."
          ],
          "type": "string",
          "enum": [
            "RETENTION_UNIT_UNSPECIFIED",
            "COUNT"
          ]
        }
      },
      "type": "object",
      "description": "We currently only support backup retention by specifying the number of backups we will retain."
    },
    "RestoreBackupContext": {
      "type": "object",
      "id": "RestoreBackupContext",
      "description": "Database instance restore from backup context. Backup context contains source instance id and project id.",
      "properties": {
        "backupRunId": {
          "format": "int64",
          "type": "string",
          "description": "The ID of the backup run to restore from."
        },
        "instanceId": {
          "description": "The ID of the instance that the backup was taken from.",
          "type": "string"
        },
        "project": {
          "description": "The full project ID of the source instance.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#restoreBackupContext*."
        }
      }
    },
    "InstancesTruncateLogRequest": {
      "description": "Instance truncate log request.",
      "id": "InstancesTruncateLogRequest",
      "type": "object",
      "properties": {
        "truncateLogContext": {
          "description": "Contains details about the truncate log operation.",
          "$ref": "TruncateLogContext"
        }
      }
    },
    "InstancesCloneRequest": {
      "properties": {
        "cloneContext": {
          "description": "Contains details about the clone operation.",
          "$ref": "CloneContext"
        }
      },
      "id": "InstancesCloneRequest",
      "description": "Database instance clone request.",
      "type": "object"
    },
    "Flag": {
      "id": "Flag",
      "type": "object",
      "description": "A flag resource.",
      "properties": {
        "minValue": {
          "type": "string",
          "format": "int64",
          "description": "For *INTEGER* flags, the minimum allowed value."
        },
        "appliesTo": {
          "type": "array",
          "items": {
            "enumDescriptions": [
              "This is an unknown database version.",
              "The database version is MySQL 5.1.",
              "The database version is MySQL 5.5.",
              "The database version is MySQL 5.6.",
              "The database version is MySQL 5.7.",
              "The database version is PostgreSQL 9.6.",
              "The database version is PostgreSQL 11.",
              "The database version is SQL Server 2017 Standard.",
              "The database version is SQL Server 2017 Enterprise.",
              "The database version is SQL Server 2017 Express.",
              "The database version is SQL Server 2017 Web.",
              "The database version is PostgreSQL 10.",
              "The database version is PostgreSQL 12.",
              "The database version is MySQL 8.",
              "The database version is PostgreSQL 13."
            ],
            "enum": [
              "SQL_DATABASE_VERSION_UNSPECIFIED",
              "MYSQL_5_1",
              "MYSQL_5_5",
              "MYSQL_5_6",
              "MYSQL_5_7",
              "POSTGRES_9_6",
              "POSTGRES_11",
              "SQLSERVER_2017_STANDARD",
              "SQLSERVER_2017_ENTERPRISE",
              "SQLSERVER_2017_EXPRESS",
              "SQLSERVER_2017_WEB",
              "POSTGRES_10",
              "POSTGRES_12",
              "MYSQL_8_0",
              "POSTGRES_13"
            ],
            "type": "string"
          },
          "description": "The database version this flag applies to. Can be *MYSQL_8_0*, *MYSQL_5_6*, or *MYSQL_5_7*."
        },
        "allowedStringValues": {
          "description": "For *STRING* flags, a list of strings that the value can be set to.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "description": "This is the name of the flag. Flag names always use underscores, not hyphens, for example: *max_allowed_packet*",
          "type": "string"
        },
        "type": {
          "enum": [
            "SQL_FLAG_TYPE_UNSPECIFIED",
            "BOOLEAN",
            "STRING",
            "INTEGER",
            "NONE",
            "MYSQL_TIMEZONE_OFFSET",
            "FLOAT",
            "REPEATED_STRING"
          ],
          "enumDescriptions": [
            "This is an unknown flag type.",
            "Boolean type flag.",
            "String type flag.",
            "Integer type flag.",
            "Flag type used for a server startup option.",
            "Type introduced specically for MySQL TimeZone offset. Accept a string value with the format [-12:59, 13:00].",
            "Float type flag.",
            "Comma-separated list of the strings in a SqlFlagType enum."
          ],
          "description": "The type of the flag. Flags are typed to being *BOOLEAN*, *STRING*, *INTEGER* or *NONE*. *NONE* is used for flags which do not take a value, such as *skip_grant_tables*.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#flag*.",
          "type": "string"
        },
        "inBeta": {
          "type": "boolean",
          "description": "Whether or not the flag is considered in beta."
        },
        "maxValue": {
          "type": "string",
          "format": "int64",
          "description": "For *INTEGER* flags, the maximum allowed value."
        },
        "requiresRestart": {
          "description": "Indicates whether changing this flag will trigger a database restart. Only applicable to Second Generation instances.",
          "type": "boolean"
        },
        "allowedIntValues": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "Use this field if only certain integers are accepted. Can be combined with min_value and max_value to add additional values."
        }
      }
    },
    "DatabasesListResponse": {
      "type": "object",
      "description": "Database list response.",
      "properties": {
        "items": {
          "type": "array",
          "description": "List of database resources in the instance.",
          "items": {
            "$ref": "Database"
          }
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#databasesList*."
        }
      },
      "id": "DatabasesListResponse"
    },
    "MaintenanceWindow": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#maintenanceWindow*."
        },
        "updateTrack": {
          "type": "string",
          "enumDescriptions": [
            "This is an unknown maintenance timing preference.",
            "For instance update that requires a restart, this update track indicates your instance prefer to restart for new version early in maintenance window.",
            "For instance update that requires a restart, this update track indicates your instance prefer to let Cloud SQL choose the timing of restart (within its Maintenance window, if applicable)."
          ],
          "enum": [
            "SQL_UPDATE_TRACK_UNSPECIFIED",
            "canary",
            "stable"
          ],
          "description": "Maintenance timing setting: *canary* (Earlier) or *stable* (Later). Learn more."
        },
        "day": {
          "format": "int32",
          "description": "day of week (1-7), starting on Monday.",
          "type": "integer"
        },
        "hour": {
          "description": "hour of day - 0 to 23.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "MaintenanceWindow",
      "description": "Maintenance window. This specifies when a Cloud SQL instance is restarted for system maintenance purposes.",
      "type": "object"
    },
    "ReplicaConfiguration": {
      "id": "ReplicaConfiguration",
      "properties": {
        "kind": {
          "description": "This is always *sql#replicaConfiguration*.",
          "type": "string"
        },
        "mysqlReplicaConfiguration": {
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named *master.info* in the data directory.",
          "$ref": "MySqlReplicaConfiguration"
        },
        "failoverTarget": {
          "type": "boolean",
          "description": "Specifies if the replica is the failover target. If the field is set to *true* the replica will be designated as a failover replica. In case the primary instance fails, the replica instance will be promoted as the new primary instance. Only one replica can be specified as failover target, and the replica has to be in different zone with the primary instance."
        }
      },
      "type": "object",
      "description": "Read-replica configuration for connecting to the primary instance."
    },
    "ApiWarning": {
      "properties": {
        "message": {
          "description": "The warning message.",
          "type": "string"
        },
        "region": {
          "type": "string",
          "description": "The region name for REGION_UNREACHABLE warning."
        },
        "code": {
          "type": "string",
          "enumDescriptions": [
            "An unknown or unset warning type from Cloud SQL API.",
            "Warning when one or more regions are not reachable. The returned result set may be incomplete."
          ],
          "enum": [
            "SQL_API_WARNING_CODE_UNSPECIFIED",
            "REGION_UNREACHABLE"
          ],
          "description": "Code to uniquely identify the warning type."
        }
      },
      "description": "An Admin API warning message.",
      "type": "object",
      "id": "ApiWarning"
    },
    "DenyMaintenancePeriod": {
      "properties": {
        "endDate": {
          "type": "string",
          "description": "\"deny maintenance period\" end date. If the year of the end date is empty, the year of the start date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01"
        },
        "time": {
          "type": "string",
          "description": "Time in UTC when the \"deny maintenance period\" starts on start_date and ends on end_date. The time is in format: HH:mm:SS, i.e., 00:00:00"
        },
        "startDate": {
          "type": "string",
          "description": "\"deny maintenance period\" start date. If the year of the start date is empty, the year of the end date also must be empty. In this case, it means the deny maintenance period recurs every year. The date is in format yyyy-mm-dd i.e., 2020-11-01, or mm-dd, i.e., 11-01"
        }
      },
      "type": "object",
      "description": "Deny Maintenance Periods. This specifies a date range during when all CSA rollout will be denied.",
      "id": "DenyMaintenancePeriod"
    },
    "InsightsConfig": {
      "id": "InsightsConfig",
      "properties": {
        "queryStringLength": {
          "format": "int32",
          "description": "Maximum query length stored in bytes. Default value: 1024 bytes. Range: 256-4500 bytes. Query length more than this field value will be truncated to this value. When unset, query length will be the default value.",
          "type": "integer"
        },
        "recordClientAddress": {
          "type": "boolean",
          "description": "Whether Query Insights will record client address when enabled."
        },
        "recordApplicationTags": {
          "description": "Whether Query Insights will record application tags from query when enabled.",
          "type": "boolean"
        },
        "queryInsightsEnabled": {
          "description": "Whether Query Insights feature is enabled.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Insights configuration. This specifies when Cloud SQL Insights feature is enabled and optional configuration."
    },
    "SqlInstancesRescheduleMaintenanceRequestBody": {
      "id": "SqlInstancesRescheduleMaintenanceRequestBody",
      "description": "Reschedule options for maintenance windows.",
      "type": "object",
      "properties": {
        "reschedule": {
          "$ref": "Reschedule",
          "description": "Required. The type of the reschedule the user wants."
        }
      }
    },
    "SslCertsListResponse": {
      "description": "SslCerts list response.",
      "properties": {
        "items": {
          "description": "List of client certificates for the instance.",
          "type": "array",
          "items": {
            "$ref": "SslCert"
          }
        },
        "kind": {
          "description": "This is always *sql#sslCertsList*.",
          "type": "string"
        }
      },
      "id": "SslCertsListResponse",
      "type": "object"
    },
    "IpMapping": {
      "id": "IpMapping",
      "description": "Database instance IP Mapping.",
      "type": "object",
      "properties": {
        "ipAddress": {
          "description": "The IP address assigned.",
          "type": "string"
        },
        "timeToRetire": {
          "description": "The due time for this IP to be retired in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*. This field is only available when the IP is scheduled to be retired.",
          "format": "google-datetime",
          "type": "string"
        },
        "type": {
          "enum": [
            "SQL_IP_ADDRESS_TYPE_UNSPECIFIED",
            "PRIMARY",
            "OUTGOING",
            "PRIVATE",
            "MIGRATED_1ST_GEN"
          ],
          "description": "The type of this IP address. A *PRIMARY* address is a public address that can accept incoming connections. A *PRIVATE* address is a private address that can accept incoming connections. An *OUTGOING* address is the source address of connections originating from the instance, if supported.",
          "type": "string",
          "enumDescriptions": [
            "This is an unknown IP address type.",
            "IP address the customer is supposed to connect to. Usually this is the load balancer's IP address",
            "Source IP address of the connection a read replica establishes to its external primary instance. This IP address can be allowlisted by the customer in case it has a firewall that filters incoming connection to its on premises primary instance.",
            "Private IP used when using private IPs and network peering.",
            "V1 IP of a migrated instance. We want the user to decommission this IP as soon as the migration is complete. Note: V1 instances with V1 ip addresses will be counted as PRIMARY."
          ]
        }
      }
    },
    "InstancesImportRequest": {
      "description": "Database instance import request.",
      "id": "InstancesImportRequest",
      "type": "object",
      "properties": {
        "importContext": {
          "$ref": "ImportContext",
          "description": "Contains details about the import operation."
        }
      }
    },
    "BinLogCoordinates": {
      "description": "Binary log coordinates.",
      "type": "object",
      "properties": {
        "binLogPosition": {
          "description": "Position (offset) within the binary log file.",
          "format": "int64",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#binLogCoordinates*."
        },
        "binLogFileName": {
          "description": "Name of the binary log file for a Cloud SQL instance.",
          "type": "string"
        }
      },
      "id": "BinLogCoordinates"
    },
    "ImportContext": {
      "id": "ImportContext",
      "type": "object",
      "description": "Database instance import context.",
      "properties": {
        "database": {
          "type": "string",
          "description": "The target database for the import. If *fileType* is *SQL*, this field is required only if the import file does not specify a database, and is overridden by any database specification in the import file. If *fileType* is *CSV*, one database must be specified."
        },
        "csvImportOptions": {
          "properties": {
            "table": {
              "description": "The table to which CSV data is imported.",
              "type": "string"
            },
            "columns": {
              "description": "The columns to which CSV data is imported. If not specified, all columns of the database table are loaded with CSV data.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "description": "Options for importing data as CSV."
        },
        "uri": {
          "type": "string",
          "description": "Path to the import file in Cloud Storage, in the form *gs://bucketName/fileName*. Compressed gzip files (.gz) are supported when *fileType* is *SQL*. The instance must have write permissions to the bucket and read access to the file."
        },
        "fileType": {
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ],
          "type": "string",
          "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data."
        },
        "importUser": {
          "description": "The PostgreSQL user for this import operation. PostgreSQL instances only.",
          "type": "string"
        },
        "bakImportOptions": {
          "description": "Import parameters specific to SQL Server .BAK files",
          "properties": {
            "encryptionOptions": {
              "properties": {
                "pvkPath": {
                  "description": "Path to the Certificate Private Key (.pvk) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file.",
                  "type": "string"
                },
                "pvkPassword": {
                  "description": "Password that encrypts the private key",
                  "type": "string"
                },
                "certPath": {
                  "type": "string",
                  "description": "Path to the Certificate (.cer) in Cloud Storage, in the form *gs://bucketName/fileName*. The instance must have write permissions to the bucket and read access to the file."
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#importContext*."
        }
      }
    },
    "Tier": {
      "properties": {
        "kind": {
          "description": "This is always *sql#tier*.",
          "type": "string"
        },
        "tier": {
          "type": "string",
          "description": "An identifier for the machine type, for example, db-n1-standard-1. For related information, see Pricing."
        },
        "region": {
          "items": {
            "type": "string"
          },
          "description": "The applicable regions for this tier.",
          "type": "array"
        },
        "RAM": {
          "format": "int64",
          "description": "The maximum RAM usage of this tier in bytes.",
          "type": "string"
        },
        "DiskQuota": {
          "type": "string",
          "format": "int64",
          "description": "The maximum disk size of this tier in bytes."
        }
      },
      "description": "A Google Cloud SQL service tier resource.",
      "id": "Tier",
      "type": "object"
    },
    "BackupContext": {
      "id": "BackupContext",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#backupContext*."
        },
        "backupId": {
          "description": "The identifier of the backup.",
          "format": "int64",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Backup context."
    },
    "SslCertsCreateEphemeralRequest": {
      "type": "object",
      "description": "SslCerts create ephemeral certificate request.",
      "id": "SslCertsCreateEphemeralRequest",
      "properties": {
        "public_key": {
          "description": "PEM encoded public key to include in the signed certificate.",
          "type": "string"
        },
        "access_token": {
          "description": "Access token to include in the signed certificate.",
          "type": "string"
        }
      }
    },
    "DatabaseInstance": {
      "type": "object",
      "id": "DatabaseInstance",
      "description": "A Cloud SQL instance resource. Next field: 36",
      "properties": {
        "onPremisesConfiguration": {
          "description": "Configuration specific to on-premises instances.",
          "$ref": "OnPremisesConfiguration"
        },
        "settings": {
          "$ref": "Settings",
          "description": "The user settings."
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API. Use the *settings.settingsVersion* field instead.",
          "type": "string"
        },
        "maxDiskSize": {
          "format": "int64",
          "type": "string",
          "description": "The maximum disk size of the instance in bytes."
        },
        "satisfiesPzs": {
          "type": "boolean",
          "description": "The status indicating if instance satisfies physical zone separation. Reserved for future use."
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#instance*."
        },
        "ipAddresses": {
          "type": "array",
          "description": "The assigned IP addresses for the instance.",
          "items": {
            "$ref": "IpMapping"
          }
        },
        "rootPassword": {
          "type": "string",
          "description": "Initial root password. Use only on creation."
        },
        "replicaConfiguration": {
          "$ref": "ReplicaConfiguration",
          "description": "Configuration specific to failover replicas and read replicas."
        },
        "masterInstanceName": {
          "type": "string",
          "description": "The name of the instance which will act as primary in the replication setup."
        },
        "gceZone": {
          "type": "string",
          "description": "The Compute Engine zone that the instance is currently serving from. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary zone."
        },
        "selfLink": {
          "description": "The URI of this resource.",
          "type": "string"
        },
        "currentDiskSize": {
          "format": "int64",
          "type": "string",
          "description": "The current disk usage of the instance in bytes. This property has been deprecated. Use the \"cloudsql.googleapis.com/database/disk/bytes_used\" metric in Cloud Monitoring API instead. Please see this announcement for details."
        },
        "region": {
          "description": "The geographical region. Can be *us-central* (*FIRST_GEN* instances only) *us-central1* (*SECOND_GEN* instances only) *asia-east1* or *europe-west1*. Defaults to *us-central* or *us-central1* depending on the instance type. The region cannot be changed after instance creation.",
          "type": "string"
        },
        "databaseVersion": {
          "enum": [
            "SQL_DATABASE_VERSION_UNSPECIFIED",
            "MYSQL_5_1",
            "MYSQL_5_5",
            "MYSQL_5_6",
            "MYSQL_5_7",
            "POSTGRES_9_6",
            "POSTGRES_11",
            "SQLSERVER_2017_STANDARD",
            "SQLSERVER_2017_ENTERPRISE",
            "SQLSERVER_2017_EXPRESS",
            "SQLSERVER_2017_WEB",
            "POSTGRES_10",
            "POSTGRES_12",
            "MYSQL_8_0",
            "POSTGRES_13"
          ],
          "enumDescriptions": [
            "This is an unknown database version.",
            "The database version is MySQL 5.1.",
            "The database version is MySQL 5.5.",
            "The database version is MySQL 5.6.",
            "The database version is MySQL 5.7.",
            "The database version is PostgreSQL 9.6.",
            "The database version is PostgreSQL 11.",
            "The database version is SQL Server 2017 Standard.",
            "The database version is SQL Server 2017 Enterprise.",
            "The database version is SQL Server 2017 Express.",
            "The database version is SQL Server 2017 Web.",
            "The database version is PostgreSQL 10.",
            "The database version is PostgreSQL 12.",
            "The database version is MySQL 8.",
            "The database version is PostgreSQL 13."
          ],
          "description": "The database engine type and version. The *databaseVersion* field cannot be changed after instance creation. MySQL instances: *MYSQL_8_0*, *MYSQL_5_7* (default), or *MYSQL_5_6*. PostgreSQL instances: *POSTGRES_9_6*, *POSTGRES_10*, *POSTGRES_11* or *POSTGRES_12* (default). SQL Server instances: *SQLSERVER_2017_STANDARD* (default), *SQLSERVER_2017_ENTERPRISE*, *SQLSERVER_2017_EXPRESS*, or *SQLSERVER_2017_WEB*.",
          "type": "string"
        },
        "replicaNames": {
          "description": "The replicas of the instance.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "failoverReplica": {
          "type": "object",
          "properties": {
            "name": {
              "description": "The name of the failover replica. If specified at instance creation, a failover replica is created for the instance. The name doesn't include the project ID. This property is applicable only to Second Generation instances.",
              "type": "string"
            },
            "available": {
              "type": "boolean",
              "description": "The availability status of the failover replica. A false status indicates that the failover replica is out of sync. The primary instance can only failover to the failover replica when the status is true."
            }
          },
          "description": "The name and status of the failover replica. This property is applicable only to Second Generation instances."
        },
        "serverCaCert": {
          "description": "SSL configuration.",
          "$ref": "SslCert"
        },
        "suspensionReason": {
          "description": "If the instance state is SUSPENDED, the reason for the suspension.",
          "items": {
            "enum": [
              "SQL_SUSPENSION_REASON_UNSPECIFIED",
              "BILLING_ISSUE",
              "LEGAL_ISSUE",
              "OPERATIONAL_ISSUE",
              "KMS_KEY_ISSUE"
            ],
            "type": "string",
            "enumDescriptions": [
              "This is an unknown suspension reason.",
              "The instance is suspended due to billing issues (for example:, GCP account issue)",
              "The instance is suspended due to illegal content (for example:, child pornography, copyrighted material, etc.).",
              "The instance is causing operational issues (for example:, causing the database to crash).",
              "The KMS key used by the instance is either revoked or denied access to"
            ]
          },
          "type": "array"
        },
        "backendType": {
          "description": " *SECOND_GEN*: Cloud SQL database instance. *EXTERNAL*: A database server that is not managed by Google. This property is read-only; use the *tier* property in the *settings* object to determine the database type.",
          "type": "string",
          "enum": [
            "SQL_BACKEND_TYPE_UNSPECIFIED",
            "FIRST_GEN",
            "SECOND_GEN",
            "EXTERNAL"
          ],
          "enumDescriptions": [
            "This is an unknown backend type for instance.",
            "V1 speckle instance.",
            "V2 speckle instance.",
            "On premises instance."
          ]
        },
        "instanceType": {
          "enumDescriptions": [
            "This is an unknown Cloud SQL instance type.",
            "A regular Cloud SQL instance.",
            "An instance running on the customer's premises that is not managed by Cloud SQL.",
            "A Cloud SQL instance acting as a read-replica."
          ],
          "enum": [
            "SQL_INSTANCE_TYPE_UNSPECIFIED",
            "CLOUD_SQL_INSTANCE",
            "ON_PREMISES_INSTANCE",
            "READ_REPLICA_INSTANCE"
          ],
          "description": "The instance type. This can be one of the following. *CLOUD_SQL_INSTANCE*: A Cloud SQL instance that is not replicating from a primary instance. *ON_PREMISES_INSTANCE*: An instance running on the customer's premises. *READ_REPLICA_INSTANCE*: A Cloud SQL instance configured as a read-replica.",
          "type": "string"
        },
        "name": {
          "description": "Name of the Cloud SQL instance. This does not include the project ID.",
          "type": "string"
        },
        "diskEncryptionStatus": {
          "description": "Disk encryption status specific to an instance. Applies only to Second Generation instances.",
          "$ref": "DiskEncryptionStatus"
        },
        "ipv6Address": {
          "type": "string",
          "description": "The IPv6 address assigned to the instance. (Deprecated) This property was applicable only to First Generation instances."
        },
        "state": {
          "type": "string",
          "enum": [
            "SQL_INSTANCE_STATE_UNSPECIFIED",
            "RUNNABLE",
            "SUSPENDED",
            "PENDING_DELETE",
            "PENDING_CREATE",
            "MAINTENANCE",
            "FAILED"
          ],
          "enumDescriptions": [
            "The state of the instance is unknown.",
            "The instance is running, or has been stopped by owner.",
            "The instance is not available, for example due to problems with billing.",
            "The instance is being deleted.",
            "The instance is being created.",
            "The instance is down for maintenance.",
            "The creation of the instance failed or a fatal error occurred during maintenance."
          ],
          "description": "The current serving state of the Cloud SQL instance. This can be one of the following. *SQL_INSTANCE_STATE_UNSPECIFIED*: The state of the instance is unknown. *RUNNABLE*: The instance is running, or has been stopped by owner. *SUSPENDED*: The instance is not available, for example due to problems with billing. for example due to problems with billing. *PENDING_DELETE*: The instance is being deleted. *PENDING_CREATE*: The instance is being created. *MAINTENANCE*: The instance is down for maintenance. *FAILED*: The instance creation failed."
        },
        "diskEncryptionConfiguration": {
          "$ref": "DiskEncryptionConfiguration",
          "description": "Disk encryption configuration specific to an instance. Applies only to Second Generation instances."
        },
        "serviceAccountEmailAddress": {
          "description": "The service account email address assigned to the instance. This property is applicable only to Second Generation instances.",
          "type": "string"
        },
        "secondaryGceZone": {
          "type": "string",
          "description": "The Compute Engine zone that the failover instance is currently serving from for a regional instance. This value could be different from the zone that was specified when the instance was created if the instance has failed over to its secondary/failover zone. Reserved for future use."
        },
        "project": {
          "type": "string",
          "description": "The project ID of the project containing the Cloud SQL instance. The Google apps domain is prefixed if applicable."
        },
        "scheduledMaintenance": {
          "description": "The start time of any upcoming scheduled maintenance for this instance.",
          "$ref": "SqlScheduledMaintenance"
        },
        "connectionName": {
          "description": "Connection name of the Cloud SQL instance used in connection strings.",
          "type": "string"
        }
      }
    },
    "CloneContext": {
      "description": "Database instance clone context.",
      "type": "object",
      "properties": {
        "pitrTimestampMs": {
          "type": "string",
          "description": "Reserved for future use.",
          "format": "int64"
        },
        "destinationInstanceName": {
          "description": "Name of the Cloud SQL instance to be created as a clone.",
          "type": "string"
        },
        "pointInTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Reserved for future use."
        },
        "kind": {
          "description": "This is always *sql#cloneContext*.",
          "type": "string"
        },
        "binLogCoordinates": {
          "$ref": "BinLogCoordinates",
          "description": "Binary log coordinates, if specified, identify the position up to which the source instance is cloned. If not specified, the source instance is cloned up to the most recent binary log coordinates."
        }
      },
      "id": "CloneContext"
    },
    "TiersListResponse": {
      "description": "Tiers list response.",
      "properties": {
        "kind": {
          "description": "This is always *sql#tiersList*.",
          "type": "string"
        },
        "items": {
          "description": "List of tiers.",
          "type": "array",
          "items": {
            "$ref": "Tier"
          }
        }
      },
      "type": "object",
      "id": "TiersListResponse"
    },
    "DemoteMasterConfiguration": {
      "properties": {
        "mysqlReplicaConfiguration": {
          "description": "MySQL specific configuration when replicating from a MySQL on-premises primary instance. Replication configuration information such as the username, password, certificates, and keys are not stored in the instance metadata. The configuration information is used only to set up the replication connection and is stored by MySQL in a file named *master.info* in the data directory.",
          "$ref": "DemoteMasterMySqlReplicaConfiguration"
        },
        "kind": {
          "description": "This is always *sql#demoteMasterConfiguration*.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DemoteMasterConfiguration",
      "description": "Read-replica configuration for connecting to the on-premises primary instance."
    },
    "MySqlReplicaConfiguration": {
      "type": "object",
      "properties": {
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "username": {
          "description": "The username for the replication connection.",
          "type": "string"
        },
        "password": {
          "description": "The password for the replication connection.",
          "type": "string"
        },
        "masterHeartbeatPeriod": {
          "description": "Interval in milliseconds between replication heartbeats.",
          "format": "int64",
          "type": "string"
        },
        "clientCertificate": {
          "type": "string",
          "description": "PEM representation of the replica's x509 certificate."
        },
        "connectRetryInterval": {
          "description": "Seconds to wait between connect retries. MySQL's default is 60 seconds.",
          "format": "int32",
          "type": "integer"
        },
        "dumpFilePath": {
          "description": "Path to a SQL dump file in Google Cloud Storage from which the replica instance is to be created. The URI is in the form gs://bucketName/fileName. Compressed gzip files (.gz) are also supported. Dumps have the binlog co-ordinates from which replication begins. This can be accomplished by setting --master-data to 1 when using mysqldump.",
          "type": "string"
        },
        "sslCipher": {
          "description": "A list of permissible ciphers to use for SSL encryption.",
          "type": "string"
        },
        "verifyServerCertificate": {
          "type": "boolean",
          "description": "Whether or not to check the primary instance's Common Name value in the certificate that it sends during the SSL handshake."
        },
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#mysqlReplicaConfiguration*.",
          "type": "string"
        }
      },
      "description": "Read-replica configuration specific to MySQL databases.",
      "id": "MySqlReplicaConfiguration"
    },
    "DiskEncryptionConfiguration": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#diskEncryptionConfiguration*."
        },
        "kmsKeyName": {
          "type": "string",
          "description": "Resource name of KMS key for disk encryption"
        }
      },
      "id": "DiskEncryptionConfiguration",
      "description": "Disk encryption configuration for an instance.",
      "type": "object"
    },
    "FailoverContext": {
      "properties": {
        "kind": {
          "description": "This is always *sql#failoverContext*.",
          "type": "string"
        },
        "settingsVersion": {
          "type": "string",
          "format": "int64",
          "description": "The current settings version of this instance. Request will be rejected if this version doesn't match the current settings version."
        }
      },
      "description": "Database instance failover context.",
      "type": "object",
      "id": "FailoverContext"
    },
    "BackupRunsListResponse": {
      "description": "Backup run list results.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#backupRunsList*."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "BackupRun"
          },
          "description": "A list of backup runs in reverse chronological order of the enqueued time."
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        }
      },
      "id": "BackupRunsListResponse",
      "type": "object"
    },
    "SslCertsInsertRequest": {
      "id": "SslCertsInsertRequest",
      "type": "object",
      "properties": {
        "commonName": {
          "description": "User supplied name. Must be a distinct name from the other certificates for this instance.",
          "type": "string"
        }
      },
      "description": "SslCerts insert request."
    },
    "SqlExternalSyncSettingError": {
      "id": "SqlExternalSyncSettingError",
      "properties": {
        "detail": {
          "type": "string",
          "description": "Additional information about the error encountered."
        },
        "type": {
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "Unsupported migration type.",
            "No pglogical extension installed on databases, applicable for postgres.",
            "pglogical node already exists on databases, applicable for postgres.",
            "The value of parameter wal_level is not set to logical.",
            "The value of parameter shared_preload_libraries does not include pglogical.",
            "The value of parameter max_replication_slots is not sufficient.",
            "The value of parameter max_wal_senders is not sufficient.",
            "The value of parameter max_worker_processes is not sufficient.",
            "Extensions installed are either not supported or having unsupported versions",
            "The value of parameter rds.logical_replication is not set to 1.",
            "The primary instance logging setup doesn't allow EM sync.",
            "The primary instance database parameter setup doesn't allow EM sync.",
            "The gtid_mode is not supported, applicable for MySQL.",
            "SQL Server Agent is not running.",
            "The table definition is not support due to missing primary key or replica identity, applicable for postgres.",
            "The customer has a definer that will break EM setup."
          ],
          "enum": [
            "SQL_EXTERNAL_SYNC_SETTING_ERROR_TYPE_UNSPECIFIED",
            "CONNECTION_FAILURE",
            "BINLOG_NOT_ENABLED",
            "INCOMPATIBLE_DATABASE_VERSION",
            "REPLICA_ALREADY_SETUP",
            "INSUFFICIENT_PRIVILEGE",
            "UNSUPPORTED_MIGRATION_TYPE",
            "NO_PGLOGICAL_INSTALLED",
            "PGLOGICAL_NODE_ALREADY_EXISTS",
            "INVALID_WAL_LEVEL",
            "INVALID_SHARED_PRELOAD_LIBRARY",
            "INSUFFICIENT_MAX_REPLICATION_SLOTS",
            "INSUFFICIENT_MAX_WAL_SENDERS",
            "INSUFFICIENT_MAX_WORKER_PROCESSES",
            "UNSUPPORTED_EXTENSIONS",
            "INVALID_RDS_LOGICAL_REPLICATION",
            "INVALID_LOGGING_SETUP",
            "INVALID_DB_PARAM",
            "UNSUPPORTED_GTID_MODE",
            "SQLSERVER_AGENT_NOT_RUNNING",
            "UNSUPPORTED_TABLE_DEFINITION",
            "UNSUPPORTED_DEFINER"
          ],
          "type": "string",
          "description": "Identifies the specific error that occurred."
        },
        "kind": {
          "description": "This is always *sql#migrationSettingError*.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "External primary instance migration setting error."
    },
    "SslCert": {
      "type": "object",
      "properties": {
        "cert": {
          "description": "PEM representation.",
          "type": "string"
        },
        "certSerialNumber": {
          "type": "string",
          "description": "Serial number, as extracted from the certificate."
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "sha1Fingerprint": {
          "type": "string",
          "description": "Sha1 Fingerprint."
        },
        "expirationTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the certificate expires in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
        },
        "createTime": {
          "description": "The time when the certificate was created in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*",
          "format": "google-datetime",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#sslCert*."
        },
        "instance": {
          "description": "Name of the database instance.",
          "type": "string"
        },
        "commonName": {
          "description": "User supplied name. Constrained to [a-zA-Z.-_ ]+.",
          "type": "string"
        }
      },
      "description": "SslCerts Resource",
      "id": "SslCert"
    },
    "Reschedule": {
      "id": "Reschedule",
      "type": "object",
      "properties": {
        "scheduleTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. Timestamp when the maintenance shall be rescheduled to if reschedule_type=SPECIFIC_TIME, in RFC 3339 format, for example *2012-11-15T16:19:00.094Z*."
        },
        "rescheduleType": {
          "description": "Required. The type of the reschedule.",
          "type": "string",
          "enumDescriptions": [
            "",
            "If the user wants to schedule the maintenance to happen now.",
            "If the user wants to use the existing maintenance policy to find the next available window.",
            "If the user wants to reschedule the maintenance to a specific time."
          ],
          "enum": [
            "RESCHEDULE_TYPE_UNSPECIFIED",
            "IMMEDIATE",
            "NEXT_AVAILABLE_WINDOW",
            "SPECIFIC_TIME"
          ]
        }
      }
    },
    "User": {
      "properties": {
        "sqlserverUserDetails": {
          "$ref": "SqlServerUserDetails"
        },
        "host": {
          "type": "string",
          "description": "The host name from which the user can connect. For *insert* operations, host defaults to an empty string. For *update* operations, host is specified as part of the request URL. The host name cannot be updated after insertion."
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API.",
          "type": "string"
        },
        "password": {
          "description": "The password for the user.",
          "type": "string"
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable. Can be omitted for *update* since it is already specified on the URL.",
          "type": "string"
        },
        "name": {
          "description": "The name of the user in the Cloud SQL instance. Can be omitted for *update* since it is already specified in the URL.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#user*.",
          "type": "string"
        },
        "type": {
          "enum": [
            "BUILT_IN",
            "CLOUD_IAM_USER",
            "CLOUD_IAM_SERVICE_ACCOUNT"
          ],
          "description": "The user type. It determines the method to authenticate the user during login. The default is the database's built-in user type.",
          "enumDescriptions": [
            "The database's built-in user type.",
            "Cloud IAM user.",
            "Cloud IAM service account."
          ],
          "type": "string"
        },
        "instance": {
          "type": "string",
          "description": "The name of the Cloud SQL instance. This does not include the project ID. Can be omitted for *update* since it is already specified on the URL."
        }
      },
      "id": "User",
      "type": "object",
      "description": "A Cloud SQL user resource."
    },
    "DemoteMasterContext": {
      "type": "object",
      "id": "DemoteMasterContext",
      "description": "Database instance demote primary instance context.",
      "properties": {
        "replicaConfiguration": {
          "description": "Configuration specific to read-replicas replicating from the on-premises primary instance.",
          "$ref": "DemoteMasterConfiguration"
        },
        "verifyGtidConsistency": {
          "type": "boolean",
          "description": "Verify GTID consistency for demote operation. Default value: *True*. Second Generation instances only. Setting this flag to false enables you to bypass GTID consistency check between on-premises primary instance and Cloud SQL instance during the demotion operation but also exposes you to the risk of future replication failures. Change the value only if you know the reason for the GTID divergence and are confident that doing so will not cause any replication issues."
        },
        "kind": {
          "description": "This is always *sql#demoteMasterContext*.",
          "type": "string"
        },
        "masterInstanceName": {
          "type": "string",
          "description": "The name of the instance which will act as on-premises primary instance in the replication setup."
        }
      }
    },
    "InstancesExportRequest": {
      "description": "Database instance export request.",
      "id": "InstancesExportRequest",
      "properties": {
        "exportContext": {
          "description": "Contains details about the export operation.",
          "$ref": "ExportContext"
        }
      },
      "type": "object"
    },
    "InstancesListResponse": {
      "type": "object",
      "description": "Database instances list response.",
      "id": "InstancesListResponse",
      "properties": {
        "items": {
          "description": "List of database instance resources.",
          "items": {
            "$ref": "DatabaseInstance"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#instancesList*."
        },
        "warnings": {
          "items": {
            "$ref": "ApiWarning"
          },
          "description": "List of warnings that occurred while handling the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
          "type": "string"
        }
      }
    },
    "BackupConfiguration": {
      "properties": {
        "location": {
          "description": "Location of the backup",
          "type": "string"
        },
        "binaryLogEnabled": {
          "type": "boolean",
          "description": "(MySQL only) Whether binary log is enabled. If backup configuration is disabled, binarylog must be disabled as well."
        },
        "backupRetentionSettings": {
          "description": "Backup retention settings.",
          "$ref": "BackupRetentionSettings"
        },
        "replicationLogArchivingEnabled": {
          "type": "boolean",
          "description": "Reserved for future use."
        },
        "kind": {
          "description": "This is always *sql#backupConfiguration*.",
          "type": "string"
        },
        "startTime": {
          "description": "Start time for the daily backup configuration in UTC timezone in the 24 hour format - *HH:MM*.",
          "type": "string"
        },
        "transactionLogRetentionDays": {
          "type": "integer",
          "description": "The number of days of transaction logs we retain for point in time restore, from 1-7.",
          "format": "int32"
        },
        "enabled": {
          "type": "boolean",
          "description": "Whether this configuration is enabled."
        },
        "pointInTimeRecoveryEnabled": {
          "description": "Reserved for future use.",
          "type": "boolean"
        }
      },
      "id": "BackupConfiguration",
      "description": "Database instance backup configuration.",
      "type": "object"
    },
    "Settings": {
      "type": "object",
      "id": "Settings",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#settings*."
        },
        "locationPreference": {
          "description": "The location preference settings. This allows the instance to be located as near as possible to either an App Engine app or Compute Engine zone for better performance. App Engine co-location was only applicable to First Generation instances.",
          "$ref": "LocationPreference"
        },
        "maintenanceWindow": {
          "$ref": "MaintenanceWindow",
          "description": "The maintenance window for this instance. This specifies when the instance can be restarted for maintenance purposes."
        },
        "databaseReplicationEnabled": {
          "type": "boolean",
          "description": "Configuration specific to read replica instances. Indicates whether replication is enabled or not."
        },
        "dataDiskSizeGb": {
          "description": "The size of data disk, in GB. The data disk size minimum is 10GB.",
          "format": "int64",
          "type": "string"
        },
        "databaseFlags": {
          "type": "array",
          "description": "The database flags passed to the instance at startup.",
          "items": {
            "$ref": "DatabaseFlags"
          }
        },
        "activationPolicy": {
          "type": "string",
          "enum": [
            "SQL_ACTIVATION_POLICY_UNSPECIFIED",
            "ALWAYS",
            "NEVER",
            "ON_DEMAND"
          ],
          "enumDescriptions": [
            "Unknown activation plan.",
            "The instance is always up and running.",
            "The instance never starts.",
            "The instance starts upon receiving requests."
          ],
          "description": "The activation policy specifies when the instance is activated; it is applicable only when the instance state is RUNNABLE. Valid values: *ALWAYS*: The instance is on, and remains so even in the absence of connection requests. *NEVER*: The instance is off; it is not activated, even if a connection request arrives."
        },
        "pricingPlan": {
          "enumDescriptions": [
            "This is an unknown pricing plan for this instance.",
            "The instance is billed at a monthly flat rate.",
            "The instance is billed per usage."
          ],
          "enum": [
            "SQL_PRICING_PLAN_UNSPECIFIED",
            "PACKAGE",
            "PER_USE"
          ],
          "type": "string",
          "description": "The pricing plan for this instance. This can be either *PER_USE* or *PACKAGE*. Only *PER_USE* is supported for Second Generation instances."
        },
        "replicationType": {
          "description": "The type of replication this instance uses. This can be either *ASYNCHRONOUS* or *SYNCHRONOUS*. (Deprecated_ This property was only applicable to First Generation instances.",
          "enumDescriptions": [
            "This is an unknown replication type for a Cloud SQL instance.",
            "The synchronous replication mode for First Generation instances. It is the default value.",
            "The asynchronous replication mode for First Generation instances. It provides a slight performance gain, but if an outage occurs while this option is set to asynchronous, you can lose up to a few seconds of updates to your data."
          ],
          "enum": [
            "SQL_REPLICATION_TYPE_UNSPECIFIED",
            "SYNCHRONOUS",
            "ASYNCHRONOUS"
          ],
          "type": "string"
        },
        "tier": {
          "type": "string",
          "description": "The tier (or machine type) for this instance, for example *db-n1-standard-1* (MySQL instances) or *db-custom-1-3840* (PostgreSQL instances)."
        },
        "userLabels": {
          "description": "User-provided labels, represented as a dictionary where each label is a single key value pair.",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "ipConfiguration": {
          "description": "The settings for IP Management. This allows to enable or disable the instance IP and manage which external networks can connect to the instance. The IPv4 address cannot be disabled for Second Generation instances.",
          "$ref": "IpConfiguration"
        },
        "backupConfiguration": {
          "description": "The daily backup configuration for the instance.",
          "$ref": "BackupConfiguration"
        },
        "activeDirectoryConfig": {
          "$ref": "SqlActiveDirectoryConfig",
          "description": "Active Directory configuration, relevant only for Cloud SQL for SQL Server."
        },
        "collation": {
          "type": "string",
          "description": "The name of server Instance collation."
        },
        "insightsConfig": {
          "$ref": "InsightsConfig",
          "description": "Insights configuration, for now relevant only for Postgres."
        },
        "crashSafeReplicationEnabled": {
          "description": "Configuration specific to read replica instances. Indicates whether database flags for crash-safe replication are enabled. This property was only applicable to First Generation instances.",
          "type": "boolean"
        },
        "availabilityType": {
          "description": "Availability type. Potential values: *ZONAL*: The instance serves data from only one zone. Outages in that zone affect data accessibility. *REGIONAL*: The instance can serve data from more than one zone in a region (it is highly available). For more information, see Overview of the High Availability Configuration.",
          "enum": [
            "SQL_AVAILABILITY_TYPE_UNSPECIFIED",
            "ZONAL",
            "REGIONAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "This is an unknown Availability type.",
            "Zonal available instance.",
            "Regional available instance."
          ]
        },
        "dataDiskType": {
          "enumDescriptions": [
            "This is an unknown data disk type.",
            "An SSD data disk.",
            "An HDD data disk.",
            "This field is deprecated and will be removed from a future version of the API."
          ],
          "type": "string",
          "description": "The type of data disk: PD_SSD (default) or PD_HDD. Not used for First Generation instances.",
          "enum": [
            "SQL_DATA_DISK_TYPE_UNSPECIFIED",
            "PD_SSD",
            "PD_HDD",
            "OBSOLETE_LOCAL_SSD"
          ]
        },
        "storageAutoResize": {
          "type": "boolean",
          "description": "Configuration to increase storage size automatically. The default value is true."
        },
        "authorizedGaeApplications": {
          "type": "array",
          "description": "The App Engine app IDs that can access this instance. (Deprecated) Applied to First Generation instances only.",
          "items": {
            "type": "string"
          }
        },
        "settingsVersion": {
          "type": "string",
          "description": "The version of instance settings. This is a required field for update method to make sure concurrent updates are handled properly. During update, use the most recent settingsVersion value for this instance and do not try to update this value.",
          "format": "int64"
        },
        "storageAutoResizeLimit": {
          "type": "string",
          "description": "The maximum size to which storage capacity can be automatically increased. The default value is 0, which specifies that there is no limit.",
          "format": "int64"
        },
        "denyMaintenancePeriods": {
          "type": "array",
          "items": {
            "$ref": "DenyMaintenancePeriod"
          },
          "description": "Deny maintenance periods"
        }
      },
      "description": "Database instance settings."
    },
    "FlagsListResponse": {
      "id": "FlagsListResponse",
      "description": "Flags list response.",
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "description": "List of flags.",
          "items": {
            "$ref": "Flag"
          }
        },
        "kind": {
          "description": "This is always *sql#flagsList*.",
          "type": "string"
        }
      }
    },
    "InstancesRestoreBackupRequest": {
      "properties": {
        "restoreBackupContext": {
          "$ref": "RestoreBackupContext",
          "description": "Parameters required to perform the restore backup operation."
        }
      },
      "id": "InstancesRestoreBackupRequest",
      "description": "Database instance restore backup request.",
      "type": "object"
    },
    "ExportContext": {
      "id": "ExportContext",
      "type": "object",
      "description": "Database instance export context.",
      "properties": {
        "sqlExportOptions": {
          "properties": {
            "mysqlExportOptions": {
              "description": "Options for exporting from MySQL.",
              "type": "object",
              "properties": {
                "masterData": {
                  "type": "integer",
                  "description": "Option to include SQL statement required to set up replication. If set to *1*, the dump file includes a CHANGE MASTER TO statement with the binary log coordinates, and --set-gtid-purged is set to ON. If set to *2*, the CHANGE MASTER TO statement is written as a SQL comment and has no effect. If set to any value other than *1*, --set-gtid-purged is set to OFF.",
                  "format": "int32"
                }
              }
            },
            "schemaOnly": {
              "description": "Export only schemas.",
              "type": "boolean"
            },
            "tables": {
              "items": {
                "type": "string"
              },
              "description": "Tables to export, or that were exported, from the specified database. If you specify tables, specify one and only one database. For PostgreSQL instances, you can specify only one table.",
              "type": "array"
            }
          },
          "type": "object",
          "description": "Options for exporting data as SQL statements."
        },
        "offload": {
          "type": "boolean",
          "description": "Option for export offload."
        },
        "uri": {
          "type": "string",
          "description": "The path to the file in Google Cloud Storage where the export will be stored. The URI is in the form *gs://bucketName/fileName*. If the file already exists, the request succeeds, but the operation fails. If *fileType* is *SQL* and the filename ends with .gz, the contents are compressed."
        },
        "databases": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Databases to be exported. *MySQL instances:* If *fileType* is *SQL* and no database is specified, all databases are exported, except for the *mysql* system database. If *fileType* is *CSV*, you can specify one database, either by using this property or by using the *csvExportOptions.selectQuery* property, which takes precedence over this property. *PostgreSQL instances:* You must specify one database to be exported. If *fileType* is *CSV*, this database must match the one specified in the *csvExportOptions.selectQuery* property."
        },
        "csvExportOptions": {
          "properties": {
            "selectQuery": {
              "description": "The select query used to extract the data.",
              "type": "string"
            }
          },
          "description": "Options for exporting data as CSV. *MySQL* and *PostgreSQL* instances only.",
          "type": "object"
        },
        "fileType": {
          "enum": [
            "SQL_FILE_TYPE_UNSPECIFIED",
            "SQL",
            "CSV",
            "BAK"
          ],
          "type": "string",
          "description": "The file type for the specified uri. *SQL*: The file contains SQL statements. *CSV*: The file contains CSV data. *BAK*: The file contains backup data for a SQL Server instance.",
          "enumDescriptions": [
            "Unknown file type.",
            "File containing SQL statements.",
            "File in CSV format.",
            ""
          ]
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#exportContext*."
        }
      }
    },
    "DiskEncryptionStatus": {
      "id": "DiskEncryptionStatus",
      "description": "Disk encryption status for an instance.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#diskEncryptionStatus*."
        },
        "kmsKeyVersionName": {
          "type": "string",
          "description": "KMS key version used to encrypt the Cloud SQL instance resource"
        }
      },
      "type": "object"
    },
    "Database": {
      "description": "Represents a SQL database on the Cloud SQL instance.",
      "type": "object",
      "properties": {
        "charset": {
          "type": "string",
          "description": "The Cloud SQL charset value."
        },
        "sqlserverDatabaseDetails": {
          "$ref": "SqlServerDatabaseDetails"
        },
        "collation": {
          "description": "The Cloud SQL collation value.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#database*."
        },
        "etag": {
          "description": "This field is deprecated and will be removed from a future version of the API.",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this resource."
        },
        "instance": {
          "description": "The name of the Cloud SQL instance. This does not include the project ID.",
          "type": "string"
        },
        "name": {
          "description": "The name of the database in the Cloud SQL instance. This does not include the project ID or instance name.",
          "type": "string"
        },
        "project": {
          "description": "The project ID of the project containing the Cloud SQL database. The Google apps domain is prefixed if applicable.",
          "type": "string"
        }
      },
      "id": "Database"
    },
    "TruncateLogContext": {
      "type": "object",
      "id": "TruncateLogContext",
      "properties": {
        "kind": {
          "description": "This is always *sql#truncateLogContext*.",
          "type": "string"
        },
        "logType": {
          "type": "string",
          "description": "The type of log to truncate. Valid values are *MYSQL_GENERAL_TABLE* and *MYSQL_SLOW_TABLE*."
        }
      },
      "description": "Database Instance truncate log context."
    },
    "IpConfiguration": {
      "description": "IP Management configuration.",
      "type": "object",
      "id": "IpConfiguration",
      "properties": {
        "privateNetwork": {
          "type": "string",
          "description": "The resource link for the VPC network from which the Cloud SQL instance is accessible for private IP. For example, */projects/myProject/global/networks/default*. This setting can be updated, but it cannot be removed after it is set."
        },
        "requireSsl": {
          "type": "boolean",
          "description": "Whether SSL connections over IP are enforced or not."
        },
        "authorizedNetworks": {
          "description": "The list of external networks that are allowed to connect to the instance using the IP. In 'CIDR' notation, also known as 'slash' notation (for example: *192.168.100.0/24*).",
          "type": "array",
          "items": {
            "$ref": "AclEntry"
          }
        },
        "ipv4Enabled": {
          "description": "Whether the instance is assigned a public IP address or not.",
          "type": "boolean"
        }
      }
    },
    "InstancesRotateServerCaRequest": {
      "id": "InstancesRotateServerCaRequest",
      "properties": {
        "rotateServerCaContext": {
          "$ref": "RotateServerCaContext",
          "description": "Contains details about the rotate server CA operation."
        }
      },
      "type": "object",
      "description": "Rotate Server CA request."
    },
    "RotateServerCaContext": {
      "type": "object",
      "properties": {
        "nextVersion": {
          "description": "The fingerprint of the next version to be rotated to. If left unspecified, will be rotated to the most recently added server CA version.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#rotateServerCaContext*."
        }
      },
      "description": "Instance rotate server CA context.",
      "id": "RotateServerCaContext"
    },
    "OperationErrors": {
      "type": "object",
      "id": "OperationErrors",
      "properties": {
        "kind": {
          "description": "This is always *sql#operationErrors*.",
          "type": "string"
        },
        "errors": {
          "type": "array",
          "description": "The list of errors encountered while processing this operation.",
          "items": {
            "$ref": "OperationError"
          }
        }
      },
      "description": "Database instance operation errors list wrapper."
    },
    "DatabaseFlags": {
      "description": "Database flags for Cloud SQL instances.",
      "id": "DatabaseFlags",
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "description": "The value of the flag. Booleans are set to *on* for true and *off* for false. This field must be omitted if the flag doesn't take a value."
        },
        "name": {
          "type": "string",
          "description": "The name of the flag. These flags are passed at instance startup, so include both server options and system variables for MySQL. Flags are specified with underscores, not hyphens. For more information, see Configuring Database Flags in the Cloud SQL documentation."
        }
      }
    },
    "InstancesDemoteMasterRequest": {
      "type": "object",
      "description": "Database demote primary instance request.",
      "properties": {
        "demoteMasterContext": {
          "description": "Contains details about the demoteMaster operation.",
          "$ref": "DemoteMasterContext"
        }
      },
      "id": "InstancesDemoteMasterRequest"
    },
    "LocationPreference": {
      "id": "LocationPreference",
      "type": "object",
      "description": "Preferred location. This specifies where a Cloud SQL instance is located, either in a specific Compute Engine zone, or co-located with an App Engine application. Note that if the preferred location is not available, the instance will be located as close as possible within the region. Only one location may be specified.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "This is always *sql#locationPreference*."
        },
        "secondaryZone": {
          "description": "The preferred Compute Engine zone for the secondary/failover (for example: us-central1-a, us-central1-b, etc.). Reserved for future use.",
          "type": "string"
        },
        "zone": {
          "description": "The preferred Compute Engine zone (for example: us-central1-a, us-central1-b, etc.).",
          "type": "string"
        },
        "followGaeApplication": {
          "type": "string",
          "description": "The App Engine application to follow, it must be in the same region as the Cloud SQL instance."
        }
      }
    },
    "OnPremisesConfiguration": {
      "properties": {
        "password": {
          "description": "The password for connecting to on-premises instance.",
          "type": "string"
        },
        "clientCertificate": {
          "description": "PEM representation of the replica's x509 certificate.",
          "type": "string"
        },
        "kind": {
          "description": "This is always *sql#onPremisesConfiguration*.",
          "type": "string"
        },
        "dumpFilePath": {
          "type": "string",
          "description": "The dump file to create the Cloud SQL replica."
        },
        "username": {
          "type": "string",
          "description": "The username for connecting to on-premises instance."
        },
        "caCertificate": {
          "description": "PEM representation of the trusted CA's x509 certificate.",
          "type": "string"
        },
        "hostPort": {
          "description": "The host and port of the on-premises instance in host:port format",
          "type": "string"
        },
        "clientKey": {
          "description": "PEM representation of the replica's private key. The corresponsing public key is encoded in the client's certificate.",
          "type": "string"
        }
      },
      "description": "On-premises instance configuration.",
      "type": "object",
      "id": "OnPremisesConfiguration"
    },
    "OperationError": {
      "type": "object",
      "properties": {
        "message": {
          "type": "string",
          "description": "Additional information about the error encountered."
        },
        "code": {
          "description": "Identifies the specific error that occurred.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#operationError*."
        }
      },
      "id": "OperationError",
      "description": "Database instance operation error."
    },
    "UsersListResponse": {
      "properties": {
        "items": {
          "items": {
            "$ref": "User"
          },
          "type": "array",
          "description": "List of user resources in the instance."
        },
        "kind": {
          "type": "string",
          "description": "This is always *sql#usersList*."
        },
        "nextPageToken": {
          "description": "An identifier that uniquely identifies the operation. You can use this identifier to retrieve the Operations resource that has information about the operation.",
          "type": "string"
        }
      },
      "description": "User list response.",
      "id": "UsersListResponse",
      "type": "object"
    },
    "SqlInstancesVerifyExternalSyncSettingsResponse": {
      "description": "Instance verify external sync settings response.",
      "id": "SqlInstancesVerifyExternalSyncSettingsResponse",
      "type": "object",
      "properties": {
        "errors": {
          "description": "List of migration violations.",
          "type": "array",
          "items": {
            "$ref": "SqlExternalSyncSettingError"
          }
        },
        "kind": {
          "description": "This is always *sql#migrationSettingErrorList*.",
          "type": "string"
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://sqladmin.mtls.googleapis.com/",
  "name": "sqladmin",
  "documentationLink": "https://developers.google.com/cloud-sql/",
  "canonicalName": "SQL Admin",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/sqlservice.admin": {
          "description": "Manage your Google SQL Service instances"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "See, edit, configure, and delete your Google Cloud Platform data"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "id": "sqladmin:v1beta4",
  "title": "Cloud SQL Admin API"
}
