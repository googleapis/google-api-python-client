{
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "description": "Deploy and manage user provided container images that scale automatically based on HTTP traffic.",
  "resources": {
    "namespaces": {
      "resources": {
        "jobs": {
          "methods": {
            "create": {
              "id": "run.namespaces.jobs.create",
              "description": "Create a job.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "location": "path",
                  "description": "Required. The namespace in which the job should be created. Replace {namespace_id} with the project ID or number.",
                  "pattern": "^namespaces/[^/]+$",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "apis/run.googleapis.com/v1alpha1/{+parent}/jobs",
              "response": {
                "$ref": "Job"
              },
              "request": {
                "$ref": "Job"
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "apis/run.googleapis.com/v1alpha1/namespaces/{namespacesId}/jobs"
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "path": "apis/run.googleapis.com/v1alpha1/{+name}",
              "parameters": {
                "kind": {
                  "description": "Optional. Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "description": "Required. The name of the job to delete. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "required": true,
                  "pattern": "^namespaces/[^/]+/jobs/[^/]+$",
                  "type": "string"
                },
                "apiVersion": {
                  "description": "Optional. Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                },
                "propagationPolicy": {
                  "type": "string",
                  "description": "Optional. Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                  "location": "query"
                }
              },
              "flatPath": "apis/run.googleapis.com/v1alpha1/namespaces/{namespacesId}/jobs/{jobsId}",
              "id": "run.namespaces.jobs.delete",
              "description": "Delete a job.",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "path": "apis/run.googleapis.com/v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "Job"
              },
              "id": "run.namespaces.jobs.get",
              "flatPath": "apis/run.googleapis.com/v1alpha1/namespaces/{namespacesId}/jobs/{jobsId}",
              "description": "Get information about a job.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the job to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "required": true,
                  "pattern": "^namespaces/[^/]+/jobs/[^/]+$",
                  "type": "string"
                }
              }
            },
            "list": {
              "id": "run.namespaces.jobs.list",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "labelSelector": {
                  "description": "Optional. Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "location": "query",
                  "type": "string"
                },
                "includeUninitialized": {
                  "description": "Optional. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                },
                "resourceVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                },
                "continue": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. Optional encoded string to continue paging."
                },
                "parent": {
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The namespace from which the jobs should be listed. Replace {namespace_id} with the project ID or number."
                },
                "fieldSelector": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                },
                "limit": {
                  "format": "int32",
                  "description": "Optional. The maximum number of records that should be returned.",
                  "location": "query",
                  "type": "integer"
                },
                "watch": {
                  "type": "boolean",
                  "description": "Optional. Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "location": "query"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "List jobs.",
              "response": {
                "$ref": "ListJobsResponse"
              },
              "flatPath": "apis/run.googleapis.com/v1alpha1/namespaces/{namespacesId}/jobs",
              "path": "apis/run.googleapis.com/v1alpha1/{+parent}/jobs",
              "httpMethod": "GET"
            }
          }
        },
        "domainmappings": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "id": "run.namespaces.domainmappings.get",
              "path": "apis/domains.cloudrun.com/v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "The name of the domain mapping being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "required": true,
                  "location": "path",
                  "pattern": "^namespaces/[^/]+/domainmappings/[^/]+$"
                }
              },
              "response": {
                "$ref": "DomainMapping"
              },
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}",
              "description": "Rpc to get information about a domain mapping."
            },
            "list": {
              "id": "run.namespaces.domainmappings.list",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "description": "Rpc to list domain mappings.",
              "response": {
                "$ref": "ListDomainMappingsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings",
              "parameters": {
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "string"
                },
                "includeUninitialized": {
                  "description": "Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                },
                "labelSelector": {
                  "location": "query",
                  "type": "string",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                },
                "limit": {
                  "location": "query",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32",
                  "type": "integer"
                },
                "resourceVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                },
                "parent": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$",
                  "description": "The project ID or project number from which the domain mappings should be listed.",
                  "required": true
                },
                "continue": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional encoded string to continue paging."
                },
                "watch": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run."
                }
              },
              "path": "apis/domains.cloudrun.com/v1alpha1/{+parent}/domainmappings"
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "DomainMapping"
              },
              "id": "run.namespaces.domainmappings.create",
              "response": {
                "$ref": "DomainMapping"
              },
              "httpMethod": "POST",
              "description": "Creates a new domain mapping.",
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "apis/domains.cloudrun.com/v1alpha1/{+parent}/domainmappings",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$",
                  "description": "The project ID or project number in which this domain mapping should be created."
                }
              }
            },
            "delete": {
              "id": "run.namespaces.domainmappings.delete",
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "apiVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter."
                },
                "kind": {
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "pattern": "^namespaces/[^/]+/domainmappings/[^/]+$",
                  "description": "The name of the domain mapping being deleted. If needed, replace {namespace_id} with the project ID.",
                  "type": "string",
                  "required": true
                },
                "propagationPolicy": {
                  "type": "string",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                  "location": "query"
                },
                "orphanDependents": {
                  "type": "boolean",
                  "description": "Deprecated. Specifies the cascade behavior on delete. Cloud Run only supports cascading behavior, so this must be false. This attribute is deprecated, and is now replaced with PropagationPolicy See https://github.com/kubernetes/kubernetes/issues/46659 for more info.",
                  "location": "query"
                }
              },
              "description": "Rpc to delete a domain mapping.",
              "path": "apis/domains.cloudrun.com/v1alpha1/{+name}"
            }
          }
        },
        "services": {
          "methods": {
            "list": {
              "path": "apis/serving.knative.dev/v1alpha1/{+parent}/services",
              "response": {
                "$ref": "ListServicesResponse"
              },
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/services",
              "description": "Rpc to list services.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameters": {
                "includeUninitialized": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Not currently used by Cloud Run."
                },
                "watch": {
                  "type": "boolean",
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "location": "query"
                },
                "labelSelector": {
                  "type": "string",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "location": "query"
                },
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "type": "string",
                  "location": "query"
                },
                "continue": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional encoded string to continue paging."
                },
                "parent": {
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "The project ID or project number from which the services should be listed.",
                  "type": "string"
                },
                "resourceVersion": {
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                  "type": "string"
                },
                "limit": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of records that should be returned."
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "run.namespaces.services.list"
            },
            "delete": {
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^namespaces/[^/]+/services/[^/]+$",
                  "type": "string",
                  "description": "The name of the service being deleted. If needed, replace {namespace_id} with the project ID.",
                  "location": "path"
                },
                "propagationPolicy": {
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                  "type": "string",
                  "location": "query"
                },
                "kind": {
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string"
                },
                "apiVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Cloud Run currently ignores this parameter."
                },
                "orphanDependents": {
                  "description": "Deprecated. Specifies the cascade behavior on delete. Cloud Run only supports cascading behavior, so this must be false. This attribute is deprecated, and is now replaced with PropagationPolicy See https://github.com/kubernetes/kubernetes/issues/46659 for more info.",
                  "location": "query",
                  "type": "boolean"
                }
              },
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "DELETE",
              "description": "Rpc to delete a service. This will cause the Service to stop serving traffic and will delete the child entities like Routes, Configurations and Revisions.",
              "id": "run.namespaces.services.delete",
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/services/{servicesId}"
            },
            "create": {
              "path": "apis/serving.knative.dev/v1alpha1/{+parent}/services",
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "The project ID or project number in which this service should be created.",
                  "required": true,
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "Service"
              },
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/services",
              "parameterOrder": [
                "parent"
              ],
              "id": "run.namespaces.services.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Service"
              },
              "description": "Rpc to create a service.",
              "httpMethod": "POST"
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/services/[^/]+$",
                  "description": "The name of the service being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "location": "path",
                  "required": true
                }
              },
              "id": "run.namespaces.services.get",
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/services/{servicesId}",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Service"
              },
              "description": "Rpc to get information about a service."
            },
            "replaceService": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Service"
              },
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/services/{servicesId}",
              "description": "Rpc to replace a service. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.",
              "request": {
                "$ref": "Service"
              },
              "id": "run.namespaces.services.replaceService",
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "description": "The name of the service being replaced. If needed, replace {namespace_id} with the project ID.",
                  "required": true,
                  "pattern": "^namespaces/[^/]+/services/[^/]+$"
                }
              }
            }
          }
        },
        "configurations": {
          "methods": {
            "list": {
              "id": "run.namespaces.configurations.list",
              "description": "Rpc to list configurations.",
              "path": "apis/serving.knative.dev/v1alpha1/{+parent}/configurations",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListConfigurationsResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/configurations",
              "parameters": {
                "labelSelector": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                },
                "includeUninitialized": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Not currently used by Cloud Run."
                },
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "resourceVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                },
                "parent": {
                  "location": "path",
                  "pattern": "^namespaces/[^/]+$",
                  "description": "The project ID or project number from which the configurations should be listed.",
                  "type": "string",
                  "required": true
                },
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "string"
                },
                "limit": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32"
                },
                "watch": {
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                }
              }
            },
            "get": {
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/configurations/{configurationsId}",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The name of the configuration being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "pattern": "^namespaces/[^/]+/configurations/[^/]+$"
                }
              },
              "response": {
                "$ref": "Configuration"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "description": "Rpc to get information about a configuration.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "run.namespaces.configurations.get"
            }
          }
        },
        "triggers": {
          "methods": {
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "path": "apis/eventing.knative.dev/v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "The name of the trigger being deleted. If needed, replace {namespace_id} with the project ID.",
                  "pattern": "^namespaces/[^/]+/triggers/[^/]+$",
                  "required": true,
                  "location": "path"
                },
                "kind": {
                  "location": "query",
                  "type": "string",
                  "description": "Cloud Run currently ignores this parameter."
                },
                "propagationPolicy": {
                  "type": "string",
                  "location": "query",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information."
                },
                "apiVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Cloud Run currently ignores this parameter."
                }
              },
              "httpMethod": "DELETE",
              "description": "Rpc to delete a trigger.",
              "id": "run.namespaces.triggers.delete",
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/triggers/{triggersId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the trigger being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "pattern": "^namespaces/[^/]+/triggers/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "run.namespaces.triggers.get",
              "response": {
                "$ref": "Trigger"
              },
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/triggers/{triggersId}",
              "path": "apis/eventing.knative.dev/v1alpha1/{+name}",
              "description": "Rpc to get information about a trigger."
            },
            "create": {
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/triggers",
              "response": {
                "$ref": "Trigger"
              },
              "request": {
                "$ref": "Trigger"
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "run.namespaces.triggers.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "The project ID or project number in which this trigger should be created.",
                  "required": true,
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path"
                }
              },
              "description": "Creates a new trigger.",
              "httpMethod": "POST",
              "path": "apis/eventing.knative.dev/v1alpha1/{+parent}/triggers"
            },
            "list": {
              "parameters": {
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "type": "string",
                  "location": "query"
                },
                "resourceVersion": {
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                  "type": "string"
                },
                "watch": {
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "type": "boolean"
                },
                "includeUninitialized": {
                  "description": "Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                },
                "limit": {
                  "location": "query",
                  "type": "integer",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32"
                },
                "labelSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "type": "string"
                },
                "parent": {
                  "location": "path",
                  "pattern": "^namespaces/[^/]+$",
                  "type": "string",
                  "description": "The project ID or project number from which the triggers should be listed.",
                  "required": true
                },
                "continue": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. Encoded string to continue paging."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/eventing.knative.dev/v1alpha1/namespaces/{namespacesId}/triggers",
              "parameterOrder": [
                "parent"
              ],
              "path": "apis/eventing.knative.dev/v1alpha1/{+parent}/triggers",
              "description": "Rpc to list triggers.",
              "id": "run.namespaces.triggers.list",
              "response": {
                "$ref": "ListTriggersResponse"
              },
              "httpMethod": "GET"
            }
          }
        },
        "cloudschedulersources": {
          "methods": {
            "replaceCloudSchedulerSource": {
              "description": "Rpc to replace a cloudschedulersource. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.",
              "httpMethod": "PUT",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the cloudschedulersource being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "required": true,
                  "pattern": "^namespaces/[^/]+/cloudschedulersources/[^/]+$",
                  "type": "string"
                }
              },
              "request": {
                "$ref": "CloudSchedulerSource"
              },
              "path": "apis/events.cloud.google.com/v1alpha1/{+name}",
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudschedulersources/{cloudschedulersourcesId}",
              "id": "run.namespaces.cloudschedulersources.replaceCloudSchedulerSource",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "CloudSchedulerSource"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "create": {
              "path": "apis/events.cloud.google.com/v1alpha1/{+parent}/cloudschedulersources",
              "id": "run.namespaces.cloudschedulersources.create",
              "description": "Creates a new cloudschedulersource.",
              "httpMethod": "POST",
              "response": {
                "$ref": "CloudSchedulerSource"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The project ID or project number in which this cloudschedulersource should be created.",
                  "required": true,
                  "location": "path",
                  "pattern": "^namespaces/[^/]+$",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudschedulersources",
              "request": {
                "$ref": "CloudSchedulerSource"
              }
            },
            "delete": {
              "path": "apis/events.cloud.google.com/v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Empty"
              },
              "httpMethod": "DELETE",
              "description": "Rpc to delete a cloudschedulersource.",
              "parameters": {
                "apiVersion": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "pattern": "^namespaces/[^/]+/cloudschedulersources/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the cloudschedulersource being deleted. If needed, replace {namespace_id} with the project ID.",
                  "type": "string",
                  "location": "path"
                },
                "kind": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                },
                "propagationPolicy": {
                  "location": "query",
                  "type": "string",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information."
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "run.namespaces.cloudschedulersources.delete",
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudschedulersources/{cloudschedulersourcesId}"
            },
            "list": {
              "id": "run.namespaces.cloudschedulersources.list",
              "parameters": {
                "continue": {
                  "type": "string",
                  "description": "Optional encoded string to continue paging.",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^namespaces/[^/]+$",
                  "description": "Required. The project ID or project number from which the cloudschedulersources should be listed.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                },
                "includeUninitialized": {
                  "description": "Not currently used by Cloud Run.",
                  "type": "boolean",
                  "location": "query"
                },
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "type": "string",
                  "location": "query"
                },
                "watch": {
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "type": "boolean",
                  "location": "query"
                },
                "labelSelector": {
                  "type": "string",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "location": "query"
                },
                "limit": {
                  "format": "int32",
                  "description": "The maximum number of records that should be returned.",
                  "type": "integer",
                  "location": "query"
                },
                "resourceVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                }
              },
              "response": {
                "$ref": "ListCloudSchedulerSourcesResponse"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudschedulersources",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Rpc to list cloudschedulersources.",
              "path": "apis/events.cloud.google.com/v1alpha1/{+parent}/cloudschedulersources"
            },
            "get": {
              "response": {
                "$ref": "CloudSchedulerSource"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Rpc to get information about a cloudschedulersource.",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the cloudschedulersource being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "pattern": "^namespaces/[^/]+/cloudschedulersources/[^/]+$",
                  "type": "string"
                }
              },
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudschedulersources/{cloudschedulersourcesId}",
              "path": "apis/events.cloud.google.com/v1alpha1/{+name}",
              "id": "run.namespaces.cloudschedulersources.get",
              "httpMethod": "GET"
            }
          }
        },
        "cloudstoragesources": {
          "methods": {
            "create": {
              "path": "apis/events.cloud.google.com/v1alpha1/{+parent}/cloudstoragesources",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "description": "Creates a new cloudstoragesource.",
              "request": {
                "$ref": "CloudStorageSource"
              },
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudstoragesources",
              "response": {
                "$ref": "CloudStorageSource"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The project ID or project number in which this cloudstoragesource should be created.",
                  "type": "string",
                  "required": true,
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "run.namespaces.cloudstoragesources.create"
            },
            "get": {
              "id": "run.namespaces.cloudstoragesources.get",
              "description": "Rpc to get information about a cloudstoragesource.",
              "response": {
                "$ref": "CloudStorageSource"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudstoragesources/{cloudstoragesourcesId}",
              "path": "apis/events.cloud.google.com/v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the cloudstoragesource being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "pattern": "^namespaces/[^/]+/cloudstoragesources/[^/]+$"
                }
              }
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Empty"
              },
              "id": "run.namespaces.cloudstoragesources.delete",
              "description": "Rpc to delete a cloudstoragesource.",
              "parameters": {
                "kind": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                },
                "apiVersion": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                },
                "propagationPolicy": {
                  "location": "query",
                  "type": "string",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information."
                },
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the cloudstoragesource being deleted. If needed, replace {namespace_id} with the project ID.",
                  "pattern": "^namespaces/[^/]+/cloudstoragesources/[^/]+$"
                }
              },
              "path": "apis/events.cloud.google.com/v1alpha1/{+name}",
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudstoragesources/{cloudstoragesourcesId}"
            },
            "replaceCloudStorageSource": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "pattern": "^namespaces/[^/]+/cloudstoragesources/[^/]+$",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the cloudstoragesource being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "type": "string"
                }
              },
              "description": "Rpc to replace a cloudstoragesource. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.",
              "path": "apis/events.cloud.google.com/v1alpha1/{+name}",
              "response": {
                "$ref": "CloudStorageSource"
              },
              "request": {
                "$ref": "CloudStorageSource"
              },
              "httpMethod": "PUT",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudstoragesources/{cloudstoragesourcesId}",
              "id": "run.namespaces.cloudstoragesources.replaceCloudStorageSource"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "fieldSelector": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                },
                "parent": {
                  "required": true,
                  "type": "string",
                  "description": "Required. The project ID or project number from which the cloudstoragesources should be listed.",
                  "location": "path",
                  "pattern": "^namespaces/[^/]+$"
                },
                "resourceVersion": {
                  "type": "string",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                  "location": "query"
                },
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "watch": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run."
                },
                "labelSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "type": "string"
                },
                "includeUninitialized": {
                  "location": "query",
                  "description": "Not currently used by Cloud Run.",
                  "type": "boolean"
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudstoragesources",
              "path": "apis/events.cloud.google.com/v1alpha1/{+parent}/cloudstoragesources",
              "response": {
                "$ref": "ListCloudStorageSourcesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "run.namespaces.cloudstoragesources.list",
              "description": "Rpc to list cloudstoragesources."
            }
          }
        },
        "authorizeddomains": {
          "methods": {
            "list": {
              "path": "apis/domains.cloudrun.com/v1alpha1/{+parent}/authorizeddomains",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^namespaces/[^/]+$",
                  "description": "Name of the parent Application resource. Example: `apps/myapp`.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "description": "Maximum results to return per page.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "pageToken": {
                  "description": "Continuation token for fetching the next page of results.",
                  "location": "query",
                  "type": "string"
                }
              },
              "description": "RPC to list authorized domains.",
              "id": "run.namespaces.authorizeddomains.list",
              "response": {
                "$ref": "ListAuthorizedDomainsResponse"
              },
              "flatPath": "apis/domains.cloudrun.com/v1alpha1/namespaces/{namespacesId}/authorizeddomains"
            }
          }
        },
        "revisions": {
          "methods": {
            "delete": {
              "id": "run.namespaces.revisions.delete",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "The name of the revision being deleted. If needed, replace {namespace_id} with the project ID.",
                  "required": true,
                  "pattern": "^namespaces/[^/]+/revisions/[^/]+$"
                },
                "orphanDependents": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Deprecated. Specifies the cascade behavior on delete. Cloud Run only supports cascading behavior, so this must be false. This attribute is deprecated, and is now replaced with PropagationPolicy See https://github.com/kubernetes/kubernetes/issues/46659 for more info."
                },
                "kind": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                },
                "apiVersion": {
                  "type": "string",
                  "description": "Cloud Run currently ignores this parameter.",
                  "location": "query"
                },
                "propagationPolicy": {
                  "location": "query",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                  "type": "string"
                }
              },
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "description": "Rpc to delete a revision.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/revisions/{revisionsId}"
            },
            "get": {
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/revisions/{revisionsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Revision"
              },
              "httpMethod": "GET",
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "description": "Rpc to get information about a revision.",
              "id": "run.namespaces.revisions.get",
              "parameters": {
                "name": {
                  "description": "The name of the revision being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^namespaces/[^/]+/revisions/[^/]+$"
                }
              }
            },
            "list": {
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/revisions",
              "description": "Rpc to list revisions.",
              "parameterOrder": [
                "parent"
              ],
              "id": "run.namespaces.revisions.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "response": {
                "$ref": "ListRevisionsResponse"
              },
              "path": "apis/serving.knative.dev/v1alpha1/{+parent}/revisions",
              "parameters": {
                "resourceVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                },
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "labelSelector": {
                  "location": "query",
                  "type": "string",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                },
                "watch": {
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                },
                "fieldSelector": {
                  "location": "query",
                  "type": "string",
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                },
                "limit": {
                  "description": "The maximum number of records that should be returned.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "parent": {
                  "required": true,
                  "location": "path",
                  "pattern": "^namespaces/[^/]+$",
                  "type": "string",
                  "description": "The project ID or project number from which the revisions should be listed."
                },
                "includeUninitialized": {
                  "type": "boolean",
                  "description": "Not currently used by Cloud Run.",
                  "location": "query"
                }
              }
            }
          }
        },
        "cloudpubsubsources": {
          "methods": {
            "create": {
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "description": "The project ID or project number in which this cloudpubsubsource should be created."
                }
              },
              "path": "apis/events.cloud.google.com/v1alpha1/{+parent}/cloudpubsubsources",
              "id": "run.namespaces.cloudpubsubsources.create",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudpubsubsources",
              "description": "Creates a new cloudpubsubsource.",
              "request": {
                "$ref": "CloudPubSubSource"
              },
              "response": {
                "$ref": "CloudPubSubSource"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "path": "apis/events.cloud.google.com/v1alpha1/{+name}",
              "response": {
                "$ref": "CloudPubSubSource"
              },
              "parameters": {
                "name": {
                  "pattern": "^namespaces/[^/]+/cloudpubsubsources/[^/]+$",
                  "description": "The name of the cloudpubsubsource being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "run.namespaces.cloudpubsubsources.get",
              "parameterOrder": [
                "name"
              ],
              "description": "Rpc to get information about a cloudpubsubsource.",
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudpubsubsources/{cloudpubsubsourcesId}"
            },
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "run.namespaces.cloudpubsubsources.delete",
              "path": "apis/events.cloud.google.com/v1alpha1/{+name}",
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudpubsubsources/{cloudpubsubsourcesId}",
              "parameters": {
                "apiVersion": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "location": "query",
                  "type": "string"
                },
                "kind": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string",
                  "location": "query"
                },
                "propagationPolicy": {
                  "type": "string",
                  "location": "query",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information."
                },
                "name": {
                  "pattern": "^namespaces/[^/]+/cloudpubsubsources/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The name of the cloudpubsubsource being deleted. If needed, replace {namespace_id} with the project ID."
                }
              },
              "description": "Rpc to delete a cloudpubsubsource."
            },
            "list": {
              "description": "Rpc to list cloudpubsubsources.",
              "response": {
                "$ref": "ListCloudPubSubSourcesResponse"
              },
              "httpMethod": "GET",
              "path": "apis/events.cloud.google.com/v1alpha1/{+parent}/cloudpubsubsources",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudpubsubsources",
              "id": "run.namespaces.cloudpubsubsources.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "resourceVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                },
                "parent": {
                  "description": "The project ID or project number from which the cloudpubsubsources should be listed.",
                  "required": true,
                  "location": "path",
                  "pattern": "^namespaces/[^/]+$",
                  "type": "string"
                },
                "continue": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional encoded string to continue paging."
                },
                "watch": {
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "type": "boolean"
                },
                "labelSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "type": "string"
                },
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "string"
                },
                "includeUninitialized": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Not currently used by Cloud Run."
                },
                "limit": {
                  "location": "query",
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of records that should be returned."
                }
              }
            }
          }
        },
        "cloudauditlogssources": {
          "methods": {
            "get": {
              "description": "Rpc to get information about a cloudauditlogssource.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "apis/events.cloud.google.com/v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudauditlogssources/{cloudauditlogssourcesId}",
              "parameters": {
                "name": {
                  "description": "The name of the cloudauditlogssource being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^namespaces/[^/]+/cloudauditlogssources/[^/]+$"
                }
              },
              "response": {
                "$ref": "CloudAuditLogsSource"
              },
              "id": "run.namespaces.cloudauditlogssources.get"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListCloudAuditLogsSourcesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudauditlogssources",
              "parameters": {
                "labelSelector": {
                  "type": "string",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "location": "query"
                },
                "watch": {
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "type": "boolean",
                  "location": "query"
                },
                "fieldSelector": {
                  "type": "string",
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "location": "query"
                },
                "includeUninitialized": {
                  "type": "boolean",
                  "description": "Not currently used by Cloud Run.",
                  "location": "query"
                },
                "parent": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^namespaces/[^/]+$",
                  "required": true,
                  "description": "The project ID or project number from which the cloudauditlogssources should be listed."
                },
                "resourceVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                },
                "limit": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of records that should be returned."
                },
                "continue": {
                  "description": "Optional encoded string to continue paging.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Rpc to list cloudauditlogssources.",
              "path": "apis/events.cloud.google.com/v1alpha1/{+parent}/cloudauditlogssources",
              "id": "run.namespaces.cloudauditlogssources.list"
            },
            "delete": {
              "response": {
                "$ref": "Empty"
              },
              "description": "Rpc to delete a cloudauditlogssource.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "The name of the cloudauditlogssource being deleted. If needed, replace {namespace_id} with the project ID.",
                  "pattern": "^namespaces/[^/]+/cloudauditlogssources/[^/]+$",
                  "location": "path"
                },
                "kind": {
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string",
                  "location": "query"
                },
                "apiVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Cloud Run currently ignores this parameter."
                },
                "propagationPolicy": {
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                  "location": "query",
                  "type": "string"
                }
              },
              "id": "run.namespaces.cloudauditlogssources.delete",
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "path": "apis/events.cloud.google.com/v1alpha1/{+name}",
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudauditlogssources/{cloudauditlogssourcesId}"
            },
            "create": {
              "path": "apis/events.cloud.google.com/v1alpha1/{+parent}/cloudauditlogssources",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "CloudAuditLogsSource"
              },
              "request": {
                "$ref": "CloudAuditLogsSource"
              },
              "id": "run.namespaces.cloudauditlogssources.create",
              "parameters": {
                "parent": {
                  "type": "string",
                  "required": true,
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "description": "The project ID or project number in which this cloudauditlogssource should be created."
                }
              },
              "flatPath": "apis/events.cloud.google.com/v1alpha1/namespaces/{namespacesId}/cloudauditlogssources",
              "description": "Creates a new cloudauditlogssource.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "routes": {
          "methods": {
            "list": {
              "response": {
                "$ref": "ListRoutesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "description": "Rpc to list routes.",
              "id": "run.namespaces.routes.list",
              "httpMethod": "GET",
              "path": "apis/serving.knative.dev/v1alpha1/{+parent}/routes",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/routes",
              "parameters": {
                "includeUninitialized": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Not currently used by Cloud Run."
                },
                "watch": {
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$",
                  "required": true,
                  "description": "The project ID or project number from which the routes should be listed.",
                  "location": "path"
                },
                "resourceVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                },
                "continue": {
                  "description": "Optional encoded string to continue paging.",
                  "location": "query",
                  "type": "string"
                },
                "labelSelector": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                },
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "type": "string",
                  "location": "query"
                },
                "limit": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of records that should be returned."
                }
              }
            },
            "get": {
              "description": "Rpc to get information about a route.",
              "id": "run.namespaces.routes.get",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "pattern": "^namespaces/[^/]+/routes/[^/]+$",
                  "description": "The name of the route being retrieved. If needed, replace {namespace_id} with the project ID.",
                  "type": "string",
                  "location": "path",
                  "required": true
                }
              },
              "path": "apis/serving.knative.dev/v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/serving.knative.dev/v1alpha1/namespaces/{namespacesId}/routes/{routesId}",
              "httpMethod": "GET",
              "response": {
                "$ref": "Route"
              }
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "cloudschedulersources": {
              "methods": {
                "get": {
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rpc to get information about a cloudschedulersource.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudschedulersources/{cloudschedulersourcesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/cloudschedulersources/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the cloudschedulersource being retrieved. If needed, replace {namespace_id} with the project ID."
                    }
                  },
                  "response": {
                    "$ref": "CloudSchedulerSource"
                  },
                  "id": "run.projects.locations.cloudschedulersources.get"
                },
                "replaceCloudSchedulerSource": {
                  "request": {
                    "$ref": "CloudSchedulerSource"
                  },
                  "response": {
                    "$ref": "CloudSchedulerSource"
                  },
                  "path": "v1alpha1/{+name}",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudschedulersources/{cloudschedulersourcesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rpc to replace a cloudschedulersource. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.",
                  "id": "run.projects.locations.cloudschedulersources.replaceCloudSchedulerSource",
                  "httpMethod": "PUT",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the cloudschedulersource being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/cloudschedulersources/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "CloudSchedulerSource"
                  },
                  "path": "v1alpha1/{+parent}/cloudschedulersources",
                  "description": "Creates a new cloudschedulersource.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudschedulersources",
                  "id": "run.projects.locations.cloudschedulersources.create",
                  "parameters": {
                    "parent": {
                      "description": "Required. The project ID or project number in which this cloudschedulersource should be created.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "CloudSchedulerSource"
                  }
                },
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListCloudSchedulerSourcesResponse"
                  },
                  "path": "v1alpha1/{+parent}/cloudschedulersources",
                  "parameters": {
                    "includeUninitialized": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Not currently used by Cloud Run."
                    },
                    "watch": {
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "fieldSelector": {
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "type": "string",
                      "location": "query"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "location": "query",
                      "type": "string"
                    },
                    "limit": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of records that should be returned."
                    },
                    "continue": {
                      "type": "string",
                      "description": "Optional encoded string to continue paging.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "description": "Required. The project ID or project number from which the cloudschedulersources should be listed.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "description": "Rpc to list cloudschedulersources.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudschedulersources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.cloudschedulersources.list"
                },
                "delete": {
                  "id": "run.projects.locations.cloudschedulersources.delete",
                  "description": "Rpc to delete a cloudschedulersource.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudschedulersources/{cloudschedulersourcesId}",
                  "httpMethod": "DELETE",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "kind": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/cloudschedulersources/[^/]+$",
                      "description": "Required. The name of the cloudschedulersource being deleted. If needed, replace {namespace_id} with the project ID.",
                      "type": "string",
                      "location": "path"
                    },
                    "apiVersion": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string",
                      "location": "query"
                    },
                    "propagationPolicy": {
                      "type": "string",
                      "location": "query",
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information."
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  }
                }
              }
            },
            "authorizeddomains": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListAuthorizedDomainsResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "RPC to list authorized domains.",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/authorizeddomains",
                  "parameters": {
                    "parent": {
                      "description": "Name of the parent Application resource. Example: `apps/myapp`.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Maximum results to return per page."
                    },
                    "pageToken": {
                      "description": "Continuation token for fetching the next page of results.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+parent}/authorizeddomains",
                  "id": "run.projects.locations.authorizeddomains.list"
                }
              }
            },
            "cloudstoragesources": {
              "methods": {
                "create": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudstoragesources",
                  "request": {
                    "$ref": "CloudStorageSource"
                  },
                  "httpMethod": "POST",
                  "description": "Creates a new cloudstoragesource.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "run.projects.locations.cloudstoragesources.create",
                  "path": "v1alpha1/{+parent}/cloudstoragesources",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The project ID or project number in which this cloudstoragesource should be created.",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "CloudStorageSource"
                  }
                },
                "delete": {
                  "description": "Rpc to delete a cloudstoragesource.",
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The name of the cloudstoragesource being deleted. If needed, replace {namespace_id} with the project ID.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/cloudstoragesources/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "kind": {
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string"
                    },
                    "propagationPolicy": {
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                      "location": "query",
                      "type": "string"
                    },
                    "apiVersion": {
                      "type": "string",
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.cloudstoragesources.delete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudstoragesources/{cloudstoragesourcesId}",
                  "path": "v1alpha1/{+name}"
                },
                "get": {
                  "response": {
                    "$ref": "CloudStorageSource"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.cloudstoragesources.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudstoragesources/{cloudstoragesourcesId}",
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Rpc to get information about a cloudstoragesource.",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/cloudstoragesources/[^/]+$",
                      "description": "Required. The name of the cloudstoragesource being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  }
                },
                "replaceCloudStorageSource": {
                  "request": {
                    "$ref": "CloudStorageSource"
                  },
                  "httpMethod": "PUT",
                  "description": "Rpc to replace a cloudstoragesource. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.",
                  "id": "run.projects.locations.cloudstoragesources.replaceCloudStorageSource",
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/cloudstoragesources/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the cloudstoragesource being retrieved. If needed, replace {namespace_id} with the project ID."
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "CloudStorageSource"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudstoragesources/{cloudstoragesourcesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudstoragesources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.cloudstoragesources.list",
                  "description": "Rpc to list cloudstoragesources.",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/cloudstoragesources",
                  "response": {
                    "$ref": "ListCloudStorageSourcesResponse"
                  },
                  "parameters": {
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The project ID or project number from which the cloudstoragesources should be listed.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "includeUninitialized": {
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "limit": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32"
                    },
                    "watch": {
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "fieldSelector": {
                      "type": "string",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "location": "query"
                    },
                    "labelSelector": {
                      "location": "query",
                      "type": "string",
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                    },
                    "continue": {
                      "location": "query",
                      "description": "Optional encoded string to continue paging.",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            },
            "revisions": {
              "methods": {
                "delete": {
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "propagationPolicy": {
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/revisions/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "The name of the revision being deleted. If needed, replace {namespace_id} with the project ID.",
                      "required": true
                    },
                    "apiVersion": {
                      "type": "string",
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter."
                    },
                    "kind": {
                      "type": "string",
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter."
                    },
                    "orphanDependents": {
                      "location": "query",
                      "type": "boolean",
                      "description": "Deprecated. Specifies the cascade behavior on delete. Cloud Run only supports cascading behavior, so this must be false. This attribute is deprecated, and is now replaced with PropagationPolicy See https://github.com/kubernetes/kubernetes/issues/46659 for more info."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.revisions.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "description": "Rpc to delete a revision.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/revisions/{revisionsId}"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the revision being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/revisions/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/revisions/{revisionsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rpc to get information about a revision.",
                  "response": {
                    "$ref": "Revision"
                  },
                  "id": "run.projects.locations.revisions.get",
                  "path": "v1alpha1/{+name}"
                },
                "list": {
                  "description": "Rpc to list revisions.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/revisions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListRevisionsResponse"
                  },
                  "httpMethod": "GET",
                  "id": "run.projects.locations.revisions.list",
                  "path": "v1alpha1/{+parent}/revisions",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "limit": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32"
                    },
                    "fieldSelector": {
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "includeUninitialized": {
                      "location": "query",
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean"
                    },
                    "continue": {
                      "description": "Optional encoded string to continue paging.",
                      "location": "query",
                      "type": "string"
                    },
                    "labelSelector": {
                      "location": "query",
                      "type": "string",
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                    },
                    "watch": {
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "The project ID or project number from which the revisions should be listed.",
                      "location": "path",
                      "required": true
                    }
                  }
                }
              }
            },
            "domainmappings": {
              "methods": {
                "create": {
                  "path": "v1alpha1/{+parent}/domainmappings",
                  "response": {
                    "$ref": "DomainMapping"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings",
                  "id": "run.projects.locations.domainmappings.create",
                  "description": "Creates a new domain mapping.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "DomainMapping"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "The project ID or project number in which this domain mapping should be created.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "httpMethod": "POST"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/domainmappings/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "The name of the domain mapping being deleted. If needed, replace {namespace_id} with the project ID."
                    },
                    "kind": {
                      "type": "string",
                      "description": "Cloud Run currently ignores this parameter.",
                      "location": "query"
                    },
                    "propagationPolicy": {
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                      "type": "string",
                      "location": "query"
                    },
                    "orphanDependents": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Deprecated. Specifies the cascade behavior on delete. Cloud Run only supports cascading behavior, so this must be false. This attribute is deprecated, and is now replaced with PropagationPolicy See https://github.com/kubernetes/kubernetes/issues/46659 for more info."
                    },
                    "apiVersion": {
                      "type": "string",
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                  "response": {
                    "$ref": "Empty"
                  },
                  "description": "Rpc to delete a domain mapping.",
                  "id": "run.projects.locations.domainmappings.delete"
                },
                "list": {
                  "path": "v1alpha1/{+parent}/domainmappings",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "ListDomainMappingsResponse"
                  },
                  "description": "Rpc to list domain mappings.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "resourceVersion": {
                      "location": "query",
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "type": "string"
                    },
                    "fieldSelector": {
                      "location": "query",
                      "type": "string",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                    },
                    "includeUninitialized": {
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "type": "string",
                      "location": "query"
                    },
                    "limit": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of records that should be returned."
                    },
                    "continue": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional encoded string to continue paging."
                    },
                    "watch": {
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "The project ID or project number from which the domain mappings should be listed.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings",
                  "id": "run.projects.locations.domainmappings.list"
                },
                "get": {
                  "response": {
                    "$ref": "DomainMapping"
                  },
                  "id": "run.projects.locations.domainmappings.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "The name of the domain mapping being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/domainmappings/[^/]+$"
                    }
                  },
                  "description": "Rpc to get information about a domain mapping.",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET"
                }
              }
            },
            "routes": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "ListRoutesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "fieldSelector": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                    },
                    "includeUninitialized": {
                      "description": "Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "limit": {
                      "format": "int32",
                      "type": "integer",
                      "description": "The maximum number of records that should be returned.",
                      "location": "query"
                    },
                    "watch": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run."
                    },
                    "continue": {
                      "type": "string",
                      "description": "Optional encoded string to continue paging.",
                      "location": "query"
                    },
                    "resourceVersion": {
                      "type": "string",
                      "location": "query",
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The project ID or project number from which the routes should be listed."
                    },
                    "labelSelector": {
                      "location": "query",
                      "type": "string",
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                    }
                  },
                  "path": "v1alpha1/{+parent}/routes",
                  "description": "Rpc to list routes.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.routes.list",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/routes",
                  "httpMethod": "GET"
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.routes.get",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/routes/{routesId}",
                  "httpMethod": "GET",
                  "description": "Rpc to get information about a route.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The name of the route being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/routes/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "Route"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "cloudpubsubsources": {
              "methods": {
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "propagationPolicy": {
                      "type": "string",
                      "location": "query",
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information."
                    },
                    "name": {
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/cloudpubsubsources/[^/]+$",
                      "description": "The name of the cloudpubsubsource being deleted. If needed, replace {namespace_id} with the project ID."
                    },
                    "apiVersion": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "location": "query",
                      "type": "string"
                    },
                    "kind": {
                      "location": "query",
                      "type": "string",
                      "description": "Cloud Run currently ignores this parameter."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudpubsubsources/{cloudpubsubsourcesId}",
                  "httpMethod": "DELETE",
                  "id": "run.projects.locations.cloudpubsubsources.delete",
                  "description": "Rpc to delete a cloudpubsubsource.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "list": {
                  "id": "run.projects.locations.cloudpubsubsources.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListCloudPubSubSourcesResponse"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudpubsubsources",
                  "path": "v1alpha1/{+parent}/cloudpubsubsources",
                  "httpMethod": "GET",
                  "description": "Rpc to list cloudpubsubsources.",
                  "parameters": {
                    "labelSelector": {
                      "type": "string",
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "location": "query"
                    },
                    "continue": {
                      "description": "Optional encoded string to continue paging.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The project ID or project number from which the cloudpubsubsources should be listed."
                    },
                    "includeUninitialized": {
                      "description": "Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "limit": {
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32"
                    },
                    "fieldSelector": {
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "type": "string"
                    },
                    "watch": {
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "create": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "CloudPubSubSource"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudpubsubsources",
                  "request": {
                    "$ref": "CloudPubSubSource"
                  },
                  "id": "run.projects.locations.cloudpubsubsources.create",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "The project ID or project number in which this cloudpubsubsource should be created.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Creates a new cloudpubsubsource.",
                  "path": "v1alpha1/{+parent}/cloudpubsubsources"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudpubsubsources/{cloudpubsubsourcesId}",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/cloudpubsubsources/[^/]+$",
                      "description": "The name of the cloudpubsubsource being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "description": "Rpc to get information about a cloudpubsubsource.",
                  "response": {
                    "$ref": "CloudPubSubSource"
                  },
                  "id": "run.projects.locations.cloudpubsubsources.get",
                  "httpMethod": "GET"
                }
              }
            },
            "services": {
              "methods": {
                "testIamPermissions": {
                  "id": "run.projects.locations.services.testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "path": "v1alpha1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "description": "Returns permissions that a caller has on the specified Project. There are no permissions required for making this API call.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:testIamPermissions",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.services.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Rpc to list services.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services",
                  "path": "v1alpha1/{+parent}/services",
                  "parameters": {
                    "continue": {
                      "description": "Optional encoded string to continue paging.",
                      "location": "query",
                      "type": "string"
                    },
                    "watch": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run."
                    },
                    "limit": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of records that should be returned."
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "type": "string",
                      "location": "query"
                    },
                    "includeUninitialized": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Not currently used by Cloud Run."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "The project ID or project number from which the services should be listed.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "fieldSelector": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                    },
                    "resourceVersion": {
                      "location": "query",
                      "type": "string",
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                    }
                  },
                  "response": {
                    "$ref": "ListServicesResponse"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "Service"
                  },
                  "response": {
                    "$ref": "Service"
                  },
                  "description": "Rpc to create a service.",
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/services",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The project ID or project number in which this service should be created.",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "run.projects.locations.services.create",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services"
                },
                "replaceService": {
                  "request": {
                    "$ref": "Service"
                  },
                  "description": "Rpc to replace a service. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.",
                  "path": "v1alpha1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the service being replaced. If needed, replace {namespace_id} with the project ID.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "location": "path"
                    }
                  },
                  "response": {
                    "$ref": "Service"
                  },
                  "id": "run.projects.locations.services.replaceService",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "PUT"
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "path": "v1alpha1/{+name}",
                  "httpMethod": "GET",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "description": "The name of the service being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$"
                    }
                  },
                  "description": "Rpc to get information about a service.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Service"
                  },
                  "id": "run.projects.locations.services.get"
                },
                "getIamPolicy": {
                  "id": "run.projects.locations.services.getIamPolicy",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:getIamPolicy",
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+resource}:getIamPolicy",
                  "description": "Get the IAM Access Control policy currently in effect for the given Cloud Run service. This result does not include any inherited policies.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "setIamPolicy": {
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "description": "Sets the IAM Access control policy for the specified Service. Overwrites any existing policy.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1alpha1/{+resource}:setIamPolicy",
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "id": "run.projects.locations.services.setIamPolicy"
                },
                "delete": {
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "description": "The name of the service being deleted. If needed, replace {namespace_id} with the project ID.",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    },
                    "kind": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string",
                      "location": "query"
                    },
                    "orphanDependents": {
                      "type": "boolean",
                      "description": "Deprecated. Specifies the cascade behavior on delete. Cloud Run only supports cascading behavior, so this must be false. This attribute is deprecated, and is now replaced with PropagationPolicy See https://github.com/kubernetes/kubernetes/issues/46659 for more info.",
                      "location": "query"
                    },
                    "propagationPolicy": {
                      "type": "string",
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                      "location": "query"
                    },
                    "apiVersion": {
                      "location": "query",
                      "type": "string",
                      "description": "Cloud Run currently ignores this parameter."
                    }
                  },
                  "httpMethod": "DELETE",
                  "description": "Rpc to delete a service. This will cause the Service to stop serving traffic and will delete the child entities like Routes, Configurations and Revisions.",
                  "response": {
                    "$ref": "Empty"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.services.delete",
                  "path": "v1alpha1/{+name}"
                }
              }
            },
            "configurations": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "Configuration"
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.configurations.get",
                  "description": "Rpc to get information about a configuration.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the configuration being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/configurations/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/configurations/{configurationsId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET"
                },
                "list": {
                  "path": "v1alpha1/{+parent}/configurations",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/configurations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rpc to list configurations.",
                  "id": "run.projects.locations.configurations.list",
                  "parameters": {
                    "continue": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional encoded string to continue paging."
                    },
                    "fieldSelector": {
                      "type": "string",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "location": "query"
                    },
                    "includeUninitialized": {
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "watch": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run."
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "The project ID or project number from which the configurations should be listed."
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "labelSelector": {
                      "location": "query",
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "type": "string"
                    },
                    "limit": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of records that should be returned."
                    }
                  },
                  "response": {
                    "$ref": "ListConfigurationsResponse"
                  }
                }
              }
            },
            "triggers": {
              "methods": {
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rpc to get information about a trigger.",
                  "response": {
                    "$ref": "Trigger"
                  },
                  "path": "v1alpha1/{+name}",
                  "id": "run.projects.locations.triggers.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the trigger being retrieved. If needed, replace {namespace_id} with the project ID.",
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$"
                    }
                  }
                },
                "list": {
                  "response": {
                    "$ref": "ListTriggersResponse"
                  },
                  "parameters": {
                    "resourceVersion": {
                      "location": "query",
                      "type": "string",
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "The project ID or project number from which the triggers should be listed.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "location": "query",
                      "type": "string"
                    },
                    "continue": {
                      "description": "Optional. Encoded string to continue paging.",
                      "location": "query",
                      "type": "string"
                    },
                    "includeUninitialized": {
                      "description": "Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "limit": {
                      "location": "query",
                      "description": "The maximum number of records that should be returned.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "fieldSelector": {
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "watch": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run."
                    }
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/triggers",
                  "path": "v1alpha1/{+parent}/triggers",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "description": "Rpc to list triggers.",
                  "id": "run.projects.locations.triggers.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "delete": {
                  "parameters": {
                    "kind": {
                      "location": "query",
                      "type": "string",
                      "description": "Cloud Run currently ignores this parameter."
                    },
                    "apiVersion": {
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string"
                    },
                    "propagationPolicy": {
                      "location": "query",
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                      "type": "string"
                    },
                    "name": {
                      "required": true,
                      "location": "path",
                      "description": "The name of the trigger being deleted. If needed, replace {namespace_id} with the project ID.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/triggers/[^/]+$",
                      "type": "string"
                    }
                  },
                  "description": "Rpc to delete a trigger.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/triggers/{triggersId}",
                  "httpMethod": "DELETE",
                  "path": "v1alpha1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.triggers.delete",
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "create": {
                  "response": {
                    "$ref": "Trigger"
                  },
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "The project ID or project number in which this trigger should be created."
                    }
                  },
                  "path": "v1alpha1/{+parent}/triggers",
                  "description": "Creates a new trigger.",
                  "request": {
                    "$ref": "Trigger"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.triggers.create",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/triggers"
                }
              }
            },
            "cloudauditlogssources": {
              "methods": {
                "create": {
                  "description": "Creates a new cloudauditlogssource.",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudauditlogssources",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "The project ID or project number in which this cloudauditlogssource should be created.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "path": "v1alpha1/{+parent}/cloudauditlogssources",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.cloudauditlogssources.create",
                  "request": {
                    "$ref": "CloudAuditLogsSource"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "CloudAuditLogsSource"
                  },
                  "httpMethod": "POST"
                },
                "delete": {
                  "description": "Rpc to delete a cloudauditlogssource.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "type": "string",
                      "description": "The name of the cloudauditlogssource being deleted. If needed, replace {namespace_id} with the project ID.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/cloudauditlogssources/[^/]+$",
                      "required": true
                    },
                    "kind": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string",
                      "location": "query"
                    },
                    "propagationPolicy": {
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                      "type": "string",
                      "location": "query"
                    },
                    "apiVersion": {
                      "type": "string",
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter."
                    }
                  },
                  "path": "v1alpha1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Empty"
                  },
                  "httpMethod": "DELETE",
                  "id": "run.projects.locations.cloudauditlogssources.delete",
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudauditlogssources/{cloudauditlogssourcesId}"
                },
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudauditlogssources",
                  "id": "run.projects.locations.cloudauditlogssources.list",
                  "parameters": {
                    "fieldSelector": {
                      "type": "string",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "location": "query"
                    },
                    "includeUninitialized": {
                      "type": "boolean",
                      "location": "query",
                      "description": "Not currently used by Cloud Run."
                    },
                    "watch": {
                      "type": "boolean",
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "location": "query"
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "description": "The project ID or project number from which the cloudauditlogssources should be listed.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "labelSelector": {
                      "type": "string",
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "location": "query"
                    },
                    "continue": {
                      "description": "Optional encoded string to continue paging.",
                      "type": "string",
                      "location": "query"
                    },
                    "limit": {
                      "type": "integer",
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32",
                      "location": "query"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Rpc to list cloudauditlogssources.",
                  "path": "v1alpha1/{+parent}/cloudauditlogssources",
                  "response": {
                    "$ref": "ListCloudAuditLogsSourcesResponse"
                  }
                },
                "get": {
                  "path": "v1alpha1/{+name}",
                  "response": {
                    "$ref": "CloudAuditLogsSource"
                  },
                  "flatPath": "v1alpha1/projects/{projectsId}/locations/{locationsId}/cloudauditlogssources/{cloudauditlogssourcesId}",
                  "id": "run.projects.locations.cloudauditlogssources.get",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/cloudauditlogssources/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "The name of the cloudauditlogssource being retrieved. If needed, replace {namespace_id} with the project ID."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Rpc to get information about a cloudauditlogssource."
                }
              }
            }
          },
          "methods": {
            "list": {
              "flatPath": "v1alpha1/projects/{projectsId}/locations",
              "id": "run.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The standard list page size.",
                  "type": "integer"
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1alpha1/{+name}/locations"
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "mtlsRootUrl": "https://run.mtls.googleapis.com/",
  "protocol": "rest",
  "servicePath": "",
  "canonicalName": "Cloud Run",
  "ownerDomain": "google.com",
  "ownerName": "Google",
  "schemas": {
    "ListCloudAuditLogsSourcesResponse": {
      "type": "object",
      "description": "ListCloudAuditLogsSourcesResponse is a list of CloudAuditLogsSource resources.",
      "id": "ListCloudAuditLogsSourcesResponse",
      "properties": {
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"events.cloud.google.com/v1alpha1\"."
        },
        "kind": {
          "type": "string",
          "description": "The kind of this resource, in this case \"CloudAuditLogsSourceList\"."
        },
        "items": {
          "items": {
            "$ref": "CloudAuditLogsSource"
          },
          "description": "List of CloudAuditLogsSources.",
          "type": "array"
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this CloudAuditLogsSource list."
        }
      }
    },
    "EnvVar": {
      "description": "EnvVar represents an environment variable present in a Container.",
      "type": "object",
      "id": "EnvVar",
      "properties": {
        "valueFrom": {
          "$ref": "EnvVarSource",
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Source for the environment variable's value. Cannot be used if value is not empty. +optional"
        },
        "name": {
          "type": "string",
          "description": "Name of the environment variable. Must be a C_IDENTIFIER."
        },
        "value": {
          "type": "string",
          "description": "Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\". +optional"
        }
      }
    },
    "InstanceSpec": {
      "type": "object",
      "properties": {
        "terminationGracePeriodSeconds": {
          "type": "string",
          "description": "Optional. Optional duration in seconds the instance needs to terminate gracefully. Value must be non-negative integer. The value zero indicates delete immediately. The grace period is the duration in seconds after the processes running in the instance are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. +optional",
          "format": "int64"
        },
        "containers": {
          "description": "Optional. List of containers belonging to the instance. We disallow a number of fields on this Container. Only a single container may be provided.",
          "items": {
            "$ref": "Container"
          },
          "type": "array"
        },
        "activeDeadlineSeconds": {
          "format": "int64",
          "type": "string",
          "description": "Optional. Optional duration in seconds the instance may be active relative to StartTime before the system will actively try to mark it failed and kill associated containers. If set to zero, the system will never attempt to kill an instance based on time. Otherwise, value must be a positive integer. +optional"
        },
        "serviceAccountName": {
          "description": "Optional. Email address of the IAM service account associated with the instance of a Job. The service account represents the identity of the running instance, and determines what permissions the instance has. If not provided, the instance will use the project's default service account. +optional",
          "type": "string"
        },
        "volumes": {
          "description": "Optional. List of volumes that can be mounted by containers belonging to the instance. More info: https://kubernetes.io/docs/concepts/storage/volumes +optional",
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "restartPolicy": {
          "description": "Optional. Restart policy for all containers within the instance. Allowed values are: - OnFailure: Instances will always be restarted on failure if the backoffLimit has not been reached. - Never: Instances are never restarted and all failures are permanent. Cannot be used if backoffLimit is set. +optional",
          "type": "string"
        }
      },
      "description": "InstanceSpec is a description of an instance.",
      "id": "InstanceSpec"
    },
    "ContainerPort": {
      "properties": {
        "name": {
          "type": "string",
          "description": "If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services. +optional"
        },
        "protocol": {
          "description": "Protocol for port. Must be UDP or TCP. Defaults to \"TCP\". +optional",
          "type": "string"
        },
        "containerPort": {
          "type": "integer",
          "description": "Number of port to expose on the pod's IP address. This must be a valid port number, 0 \u003c x \u003c 65536.",
          "format": "int32"
        },
        "hostIP": {
          "description": "What host IP to bind the external port to. +optional",
          "type": "string"
        },
        "hostPort": {
          "type": "integer",
          "format": "int32",
          "description": "Number of port to expose on the host. If specified, this must be a valid port number, 0 \u003c x \u003c 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this. +optional"
        }
      },
      "description": "ContainerPort represents a network port in a single container.",
      "type": "object",
      "id": "ContainerPort"
    },
    "RevisionCondition": {
      "description": "RevisionCondition defines a readiness condition for a Revision.",
      "id": "RevisionCondition",
      "type": "object",
      "properties": {
        "message": {
          "description": "Human readable message indicating details about the current status. +optional",
          "type": "string"
        },
        "severity": {
          "description": "How to interpret failures of this condition, one of Error, Warning, Info +optional",
          "type": "string"
        },
        "reason": {
          "description": "One-word CamelCase reason for the condition's last transition. +optional",
          "type": "string"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "lastTransitionTime": {
          "type": "string",
          "description": "Last time the condition transitioned from one status to another. +optional",
          "format": "google-datetime"
        },
        "type": {
          "type": "string",
          "description": "RevisionConditionType is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types include: * \"Ready\": True when the Revision is ready. * \"ResourcesAvailable\": True when underlying resources have been provisioned. * \"ContainerHealthy\": True when the Revision readiness check completes. * \"Active\": True when the Revision may receive traffic."
        }
      }
    },
    "SecretKeySelector": {
      "type": "object",
      "id": "SecretKeySelector",
      "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported SecretKeySelector selects a key of a Secret.",
      "properties": {
        "key": {
          "type": "string",
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported The key of the secret to select from. Must be a valid secret key."
        },
        "optional": {
          "type": "boolean",
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Specify whether the Secret or its key must be defined +optional"
        },
        "name": {
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported The name of the secret in the pod's namespace to select from.",
          "type": "string"
        },
        "localObjectReference": {
          "$ref": "LocalObjectReference",
          "description": "This field should not be used directly as it is meant to be inlined directly into the message. Use the \"name\" field instead."
        }
      }
    },
    "DomainMappingStatus": {
      "type": "object",
      "properties": {
        "observedGeneration": {
          "format": "int32",
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False."
        },
        "resourceRecords": {
          "items": {
            "$ref": "ResourceRecord"
          },
          "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping.",
          "type": "array"
        },
        "url": {
          "type": "string",
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Holds the URL that will serve the traffic of the DomainMapping. +optional"
        },
        "conditions": {
          "description": "Array of observed DomainMappingConditions, indicating the current state of the DomainMapping.",
          "type": "array",
          "items": {
            "$ref": "DomainMappingCondition"
          }
        },
        "mappedRouteName": {
          "type": "string",
          "description": "The name of the route that the mapping currently points to."
        }
      },
      "id": "DomainMappingStatus",
      "description": "The current state of the Domain Mapping."
    },
    "ListConfigurationsResponse": {
      "description": "ListConfigurationsResponse is a list of Configuration resources.",
      "type": "object",
      "properties": {
        "kind": {
          "description": "The kind of this resource, in this case \"ConfigurationList\".",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Configuration"
          },
          "description": "List of Configurations."
        },
        "metadata": {
          "description": "Metadata associated with this Configuration list.",
          "$ref": "ListMeta"
        },
        "apiVersion": {
          "description": "The API version for this call such as \"serving.knative.dev/v1alpha1\".",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        }
      },
      "id": "ListConfigurationsResponse"
    },
    "TCPSocketAction": {
      "id": "TCPSocketAction",
      "description": "TCPSocketAction describes an action based on opening a socket",
      "properties": {
        "port": {
          "$ref": "IntOrString",
          "description": "Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
        },
        "host": {
          "description": "Optional: Host name to connect to, defaults to the pod IP. +optional",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListCloudStorageSourcesResponse": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"events.cloud.google.com/v1alpha1\"."
        },
        "items": {
          "items": {
            "$ref": "CloudStorageSource"
          },
          "description": "List of CloudStorageSources.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"CloudStorageSourceList\".",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata associated with this CloudStorageSource list.",
          "$ref": "ListMeta"
        }
      },
      "id": "ListCloudStorageSourcesResponse",
      "description": "ListCloudStorageSourcesResponse is a list of CloudStorageSource resources."
    },
    "HTTPHeader": {
      "description": "HTTPHeader describes a custom header to be used in HTTP probes",
      "id": "HTTPHeader",
      "type": "object",
      "properties": {
        "name": {
          "description": "The header field name",
          "type": "string"
        },
        "value": {
          "description": "The header field value",
          "type": "string"
        }
      }
    },
    "Volume": {
      "properties": {
        "name": {
          "description": "Volume's name.",
          "type": "string"
        },
        "secret": {
          "$ref": "SecretVolumeSource"
        },
        "configMap": {
          "$ref": "ConfigMapVolumeSource"
        }
      },
      "type": "object",
      "description": "Volume represents a named volume in a container.",
      "id": "Volume"
    },
    "ServiceSpec": {
      "description": "ServiceSpec holds the desired state of the Route (from the client), which is used to manipulate the underlying Route and Configuration(s).",
      "type": "object",
      "id": "ServiceSpec",
      "properties": {
        "release": {
          "description": "Release enables gradual promotion of new revisions by allowing traffic to be split between two revisions. This type replaces the deprecated Pinned type. Not currently supported by Cloud Run.",
          "$ref": "ServiceSpecReleaseType"
        },
        "manual": {
          "description": "Manual contains the options for configuring a manual service. See ServiceSpec for more details. Not currently supported by Cloud Run.",
          "$ref": "ServiceSpecManualType"
        },
        "template": {
          "description": "Template holds the latest specification for the Revision to be stamped out.",
          "$ref": "RevisionTemplate"
        },
        "traffic": {
          "items": {
            "$ref": "TrafficTarget"
          },
          "description": "Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations.",
          "type": "array"
        },
        "runLatest": {
          "description": "RunLatest defines a simple Service. It will automatically configure a route that keeps the latest ready revision from the supplied configuration running. +optional",
          "$ref": "ServiceSpecRunLatest"
        },
        "generation": {
          "format": "int32",
          "description": "Deprecated and not currently populated by Cloud Run. See metadata.generation instead, which is the sequence number containing the latest generation of the desired state. Read-only.",
          "type": "integer"
        },
        "pinned": {
          "description": "Pins this service to a specific revision name. The revision must be owned by the configuration provided. Deprecated and not supported by Cloud Run. +optional",
          "$ref": "ServiceSpecPinnedType"
        }
      }
    },
    "RouteCondition": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "One-word CamelCase reason for the condition's last transition. +optional"
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of \"True\", \"False\", \"Unknown\"."
        },
        "type": {
          "type": "string",
          "description": "RouteConditionType is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types include: \"Ready\"."
        },
        "severity": {
          "type": "string",
          "description": "How to interpret failures of this condition, one of Error, Warning, Info +optional"
        },
        "message": {
          "type": "string",
          "description": "Human-readable message indicating details about last transition. +optional"
        },
        "lastTransitionTime": {
          "description": "Last time the condition transitioned from one status to another. +optional",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "RouteCondition",
      "description": "RouteCondition defines a readiness condition for a Route."
    },
    "SecretEnvSource": {
      "id": "SecretEnvSource",
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "LocalObjectReference",
          "description": "This field should not be used directly as it is meant to be inlined directly into the message. Use the \"name\" field instead."
        },
        "name": {
          "type": "string",
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The Secret to select from."
        },
        "optional": {
          "type": "boolean",
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the Secret must be defined +optional"
        }
      },
      "description": "SecretEnvSource selects a Secret to populate the environment variables with. The contents of the target Secret's Data field will represent the key-value pairs as environment variables."
    },
    "Job": {
      "id": "Job",
      "properties": {
        "spec": {
          "$ref": "JobSpec",
          "description": "Optional. Specification of the desired behavior of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional"
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Optional. Standard object's metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata +optional"
        },
        "kind": {
          "type": "string",
          "description": "Optional. Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds +optional"
        },
        "status": {
          "$ref": "JobStatus",
          "description": "Optional. Current status of a job. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional"
        },
        "apiVersion": {
          "description": "Optional. APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources +optional",
          "type": "string"
        }
      },
      "description": "Job represents the configuration of a single job. A job an immutable resource that references a container image which is run to completion.",
      "type": "object"
    },
    "Service": {
      "description": "Service acts as a top-level container that manages a set of Routes and Configurations which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership. Service acts only as an orchestrator of the underlying Routes and Configurations (much as a kubernetes Deployment orchestrates ReplicaSets). The Service's controller will track the statuses of its owned Configuration and Route, reflecting their statuses and conditions as its own. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#service",
      "type": "object",
      "id": "Service",
      "properties": {
        "spec": {
          "description": "Spec holds the desired state of the Service (from the client).",
          "$ref": "ServiceSpec"
        },
        "status": {
          "description": "Status communicates the observed state of the Service (from the controller).",
          "$ref": "ServiceStatus"
        },
        "kind": {
          "description": "The kind of resource, in this case \"Service\".",
          "type": "string"
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Service, including name, namespace, labels, and annotations."
        },
        "apiVersion": {
          "description": "The API version for this call such as \"serving.knative.dev/v1alpha1\".",
          "type": "string"
        }
      }
    },
    "IntOrString": {
      "type": "object",
      "id": "IntOrString",
      "properties": {
        "intVal": {
          "description": "The int value.",
          "format": "int32",
          "type": "integer"
        },
        "strVal": {
          "type": "string",
          "description": "The string value."
        },
        "type": {
          "type": "integer",
          "format": "int32",
          "description": "The type of the value."
        }
      },
      "description": "IntOrString is a type that can hold an int32 or a string. When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type. This allows you to have, for example, a JSON field that can accept a name or number."
    },
    "AuthorizedDomain": {
      "description": "A domain that a user has been authorized to administer. To authorize use of a domain, verify ownership via [Webmaster Central](https://www.google.com/webmasters/verification/home).",
      "id": "AuthorizedDomain",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Read only. Full path to the `AuthorizedDomain` resource in the API. Example: `apps/myapp/authorizedDomains/example.com`."
        },
        "id": {
          "description": "Relative name of the domain authorized for use. Example: `example.com`.",
          "type": "string"
        }
      }
    },
    "CloudAuditLogsSource": {
      "type": "object",
      "properties": {
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"events.cloud.google.com/v1alpha1\"."
        },
        "status": {
          "description": "Status represents the current state of the CloudAuditLogsSource. This data may be out of date. +optional",
          "$ref": "CloudAuditLogsSourceStatus"
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this CloudAuditLogsSource."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource, in this case \"CloudAuditLogsSource\"."
        },
        "spec": {
          "description": "Spec defines the desired state of the CloudAuditLogsSource.",
          "$ref": "CloudAuditLogsSourceSpec"
        }
      },
      "id": "CloudAuditLogsSource"
    },
    "ServiceCondition": {
      "description": "ServiceCondition defines a readiness condition for a Service.",
      "id": "ServiceCondition",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "ServiceConditionType is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types include: \"Ready\", \"ConfigurationsReady\", and \"RoutesReady\". \"Ready\" will be true when the underlying Route and Configuration are ready."
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "message": {
          "description": "Human-readable message indicating details about last transition. +optional",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "One-word CamelCase reason for the condition's last transition. +optional"
        },
        "severity": {
          "description": "How to interpret failures of this condition, one of Error, Warning, Info +optional",
          "type": "string"
        },
        "lastTransitionTime": {
          "format": "google-datetime",
          "description": "Last time the condition transitioned from one status to another. +optional",
          "type": "string"
        }
      }
    },
    "ResourceRecord": {
      "description": "A DNS resource record.",
      "id": "ResourceRecord",
      "properties": {
        "name": {
          "type": "string",
          "description": "Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'."
        },
        "type": {
          "type": "string",
          "description": "Resource record type. Example: `AAAA`.",
          "enum": [
            "RECORD_TYPE_UNSPECIFIED",
            "A",
            "AAAA",
            "CNAME"
          ],
          "enumDescriptions": [
            "An unknown resource record.",
            "An A resource record. Data is an IPv4 address.",
            "An AAAA resource record. Data is an IPv6 address.",
            "A CNAME resource record. Data is a domain name to be aliased."
          ]
        },
        "rrdata": {
          "type": "string",
          "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)."
        }
      },
      "type": "object"
    },
    "KeyToPath": {
      "type": "object",
      "description": "Maps a string key to a path within a volume.",
      "id": "KeyToPath",
      "properties": {
        "mode": {
          "format": "int32",
          "type": "integer",
          "description": "Mode bits to use on this file, must be a value between 0 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. +optional"
        },
        "key": {
          "type": "string",
          "description": "The key to project."
        },
        "path": {
          "description": "The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
          "type": "string"
        }
      }
    },
    "CloudPubSubSourceSpec": {
      "properties": {
        "pubsubSecret": {
          "$ref": "SecretKeySelector",
          "description": "CloudPubSubSourceSecret is the credential to use to create Topic / PullSubscription resources. If omitted, uses Secret."
        },
        "topic": {
          "description": "Topic is the ID of the CloudPubSubSource Topic to Subscribe to. It must be in the form of the unique identifier within the project, not the entire name. E.g. it must be 'laconia', not 'projects/my-proj/topics/laconia'.",
          "type": "string"
        },
        "retentionDuration": {
          "description": "RetentionDuration defines how long to retain messages in backlog, from the time of publish. If RetainAckedMessages is true, this duration affects the retention of acknowledged messages, otherwise only unacknowledged messages are retained. Cannot be longer than 7 days or shorter than 10 minutes. Defaults to 7 days ('7d'). +optional",
          "type": "string"
        },
        "ackDeadline": {
          "type": "string",
          "description": "AckDeadline is the default maximum time after a subscriber receives a message before the subscriber should acknowledge the message. Defaults to 30 seconds ('30s'). +optional"
        },
        "retainAckedMessages": {
          "type": "boolean",
          "description": "RetainAckedMessages defines whether to retain acknowledged messages. If true, acknowledged messages will not be expunged until they fall out of the RetentionDuration window."
        },
        "ceOverrides": {
          "$ref": "CloudEventOverrides",
          "description": "CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink. +optional"
        },
        "sink": {
          "description": "Sink is a reference to an object that will resolve to a domain name or a URI directly to use as the sink.",
          "$ref": "Destination"
        },
        "secret": {
          "$ref": "SecretKeySelector",
          "description": "Secret is the credential to use to create the Scheduler Job. If not specified, defaults to: Name: google-cloud-key Key: key.json +optional"
        },
        "project": {
          "description": "Project is the ID of the Google Cloud Project that the CloudPubSubSource Topic exists in. If omitted, defaults to same as the cluster. +optional",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CloudPubSubSourceSpec",
      "description": "The desired state of the CloudPubSubSource."
    },
    "ConfigMapKeySelector": {
      "properties": {
        "key": {
          "type": "string",
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported The key to select."
        },
        "name": {
          "type": "string",
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported The ConfigMap to select from."
        },
        "localObjectReference": {
          "description": "This field should not be used directly as it is meant to be inlined directly into the message. Use the \"name\" field instead.",
          "$ref": "LocalObjectReference"
        },
        "optional": {
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Specify whether the ConfigMap or its key must be defined +optional",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Selects a key from a ConfigMap.",
      "id": "ConfigMapKeySelector"
    },
    "TriggerStatus": {
      "description": "TriggerStatus represents the current state of a Trigger.",
      "type": "object",
      "id": "TriggerStatus",
      "properties": {
        "conditions": {
          "items": {
            "$ref": "TriggerCondition"
          },
          "description": "Array of observed TriggerConditions, indicating the current state of the Trigger.",
          "type": "array"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the Trigger that was last processed by the controller.",
          "type": "integer",
          "format": "int32"
        },
        "subscriberUri": {
          "type": "string",
          "description": "SubscriberURI is the resolved URI of the receiver for this Trigger."
        }
      }
    },
    "CloudStorageSourceStatus": {
      "description": "CloudStorageSourceStatus represents the current state of a CloudStorageSource.",
      "id": "CloudStorageSourceStatus",
      "type": "object",
      "properties": {
        "sinkUri": {
          "type": "string",
          "description": "SinkURI is the current active sink URI that has been configured for the Source."
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the CloudStorageSource that was last processed by the controller.",
          "format": "int32"
        },
        "conditions": {
          "description": "Array of observed CloudStorageSourceConditions, indicating the current state of the CloudStorageSource.",
          "type": "array",
          "items": {
            "$ref": "Condition"
          }
        }
      }
    },
    "EnvVarSource": {
      "id": "EnvVarSource",
      "properties": {
        "secretKeyRef": {
          "$ref": "SecretKeySelector",
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Selects a key of a secret in the pod's namespace +optional"
        },
        "configMapKeyRef": {
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Selects a key of a ConfigMap. +optional",
          "$ref": "ConfigMapKeySelector"
        }
      },
      "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported EnvVarSource represents a source for the value of an EnvVar.",
      "type": "object"
    },
    "EnvFromSource": {
      "id": "EnvFromSource",
      "description": "EnvFromSource represents the source of a set of ConfigMaps",
      "properties": {
        "configMapRef": {
          "description": "The ConfigMap to select from +optional",
          "$ref": "ConfigMapEnvSource"
        },
        "secretRef": {
          "$ref": "SecretEnvSource",
          "description": "The Secret to select from +optional"
        },
        "prefix": {
          "description": "An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER. +optional",
          "type": "string"
        }
      },
      "type": "object"
    },
    "LocalObjectReference": {
      "properties": {
        "name": {
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "type": "object",
      "id": "LocalObjectReference",
      "description": "LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace."
    },
    "ConfigurationCondition": {
      "properties": {
        "type": {
          "type": "string",
          "description": "ConfigurationConditionType is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types include:\"Ready\""
        },
        "lastTransitionTime": {
          "type": "string",
          "description": "Last time the condition transitioned from one status to another. +optional",
          "format": "google-datetime"
        },
        "status": {
          "description": "Status of the condition, one of True, False, Unknown.",
          "type": "string"
        },
        "message": {
          "description": "Human-readable message indicating details about last transition. +optional",
          "type": "string"
        },
        "severity": {
          "description": "How to interpret failures of this condition, one of Error, Warning, Info +optional",
          "type": "string"
        },
        "reason": {
          "description": "One-word CamelCase reason for the condition's last transition. +optional",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ConfigurationCondition",
      "description": "ConfigurationCondition defines a readiness condition for a Configuration."
    },
    "RevisionTemplate": {
      "properties": {
        "metadata": {
          "description": "Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration. To set minimum instances for this revision, use the \"autoscaling.knative.dev/minScale\" annotation key. (Cloud Run on GKE only). To set maximum instances for this revision, use the \"autoscaling.knative.dev/maxScale\" annotation key. To set Cloud SQL connections for the revision, use the \"run.googleapis.com/cloudsql-instances\" annotation key. Values should be comma separated.",
          "$ref": "ObjectMeta"
        },
        "spec": {
          "description": "RevisionSpec holds the desired state of the Revision (from the client).",
          "$ref": "RevisionSpec"
        }
      },
      "description": "RevisionTemplateSpec describes the data a revision should have when created from a template. Based on: https://github.com/kubernetes/api/blob/e771f807/core/v1/types.go#L3179-L3190",
      "type": "object",
      "id": "RevisionTemplate"
    },
    "CloudSchedulerSource": {
      "type": "object",
      "id": "CloudSchedulerSource",
      "description": "The CloudSchedulerSource resource.",
      "properties": {
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this CloudSchedulerSource."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"events.cloud.google.com/v1alpha1\"."
        },
        "status": {
          "$ref": "CloudSchedulerSourceStatus",
          "description": "Status represents the current state of the CloudSchedulerSource. This data may be out of date."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource, in this case \"CloudSchedulerSource\"."
        },
        "spec": {
          "$ref": "CloudSchedulerSourceSpec",
          "description": "Spec defines the desired state of the CloudSchedulerSource."
        }
      }
    },
    "ListDomainMappingsResponse": {
      "type": "object",
      "id": "ListDomainMappingsResponse",
      "description": "ListDomainMappingsResponse is a list of DomainMapping resources.",
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of this resource, in this case \"DomainMappingList\"."
        },
        "items": {
          "description": "List of DomainMappings.",
          "type": "array",
          "items": {
            "$ref": "DomainMapping"
          }
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this DomainMapping list."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"domains.cloudrun.com/v1alpha1\"."
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached.",
          "type": "array"
        }
      }
    },
    "CloudSchedulerSourceSpec": {
      "id": "CloudSchedulerSourceSpec",
      "properties": {
        "sink": {
          "$ref": "Destination",
          "description": "Sink is a reference to an object that will resolve to a domain name or a URI directly to use as the sink."
        },
        "schedule": {
          "description": "Schedule in cron format, for example: \"* * * * *\" would be run every minute.",
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "Data to send in the payload of the Event."
        },
        "secret": {
          "description": "Secret is the credential to use to create the Scheduler Job. If not specified, defaults to: Name: google-cloud-key Key: key.json",
          "$ref": "SecretKeySelector"
        },
        "pubsubSecret": {
          "description": "CloudPubSubSourceSecret is the credential to use to create Topic / PullSubscription resources. If omitted, uses Secret.",
          "$ref": "SecretKeySelector"
        },
        "location": {
          "type": "string",
          "description": "Location to create the Scheduler job in."
        },
        "ceOverrides": {
          "description": "CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.",
          "$ref": "CloudEventOverrides"
        },
        "project": {
          "type": "string",
          "description": "Project is the ID of the Google Cloud Project that the CloudPubSubSource Topic exists in. If omitted, defaults to same as the cluster."
        }
      },
      "description": "The desired state of the CloudSchedulerSource.",
      "type": "object"
    },
    "JobStatus": {
      "id": "JobStatus",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "format": "int32",
          "description": "Optional. The 'generation' of the job that was last processed by the controller.",
          "type": "integer"
        },
        "failed": {
          "description": "Optional. The number of instances which reached phase Failed. +optional",
          "type": "integer",
          "format": "int32"
        },
        "succeeded": {
          "type": "integer",
          "description": "Optional. The number of instances which reached phase Succeeded. +optional",
          "format": "int32"
        },
        "instances": {
          "description": "Optional. Status of completed, failed, and running instances. +optional",
          "type": "array",
          "items": {
            "$ref": "InstanceStatus"
          }
        },
        "conditions": {
          "items": {
            "$ref": "JobCondition"
          },
          "type": "array",
          "description": "Optional. The latest available observations of a job's current state. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ +optional"
        },
        "startTime": {
          "description": "Optional. Represents time when the job was acknowledged by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional",
          "type": "string",
          "format": "google-datetime"
        },
        "completionTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Optional. Represents time when the job was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional"
        },
        "active": {
          "type": "integer",
          "description": "Optional. The number of actively running instances. +optional",
          "format": "int32"
        },
        "imageDigest": {
          "type": "string",
          "description": "Optional. ImageDigest holds the resolved digest for the image specified within .Spec.Template.Spec.Container.Image. The digest is resolved during the creation of the Job. This field holds the digest value regardless of whether a tag or digest was originally specified in the Container object."
        }
      },
      "description": "JobStatus represents the current state of a Job."
    },
    "TriggerCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Type of Trigger condition."
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "severity": {
          "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info",
          "type": "string"
        },
        "lastTransitionTime": {
          "format": "google-datetime",
          "description": "Optional. Last time the condition transitioned from one status to another.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "Optional. One-word CamelCase reason for the condition's current status."
        },
        "message": {
          "description": "Optional. Human readable message indicating details about the current status.",
          "type": "string"
        }
      },
      "id": "TriggerCondition",
      "description": "TriggerCondition contains state information for an Trigger."
    },
    "JobCondition": {
      "id": "JobCondition",
      "description": "JobCondition defines a readiness condition for a Revision.",
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "description": "Required. Type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types include: * \"Completed\": True when the Job has successfully completed. * \"Started\": True when the Job has successfully started running. * \"ResourcesAvailable\": True when underlying resources have been provisioned."
        },
        "message": {
          "description": "Optional. Human readable message indicating details about the current status.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "Optional. One-word CamelCase reason for the condition's last transition."
        },
        "status": {
          "type": "string",
          "description": "Required. Status of the condition, one of True, False, Unknown."
        },
        "lastTransitionTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. Last time the condition transitioned from one status to another."
        },
        "severity": {
          "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info",
          "type": "string"
        }
      }
    },
    "SecretVolumeSource": {
      "description": "The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names.",
      "type": "object",
      "id": "SecretVolumeSource",
      "properties": {
        "optional": {
          "type": "boolean",
          "description": "Specify whether the Secret or its keys must be defined."
        },
        "secretName": {
          "type": "string",
          "description": "Name of the secret in the container's namespace to use."
        },
        "defaultMode": {
          "format": "int32",
          "type": "integer",
          "description": "Mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
        },
        "items": {
          "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional.",
          "items": {
            "$ref": "KeyToPath"
          },
          "type": "array"
        }
      }
    },
    "Quantity": {
      "description": "The view model of a single quantity, e.g. \"800 MiB\". Corresponds to https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/generated.proto",
      "type": "object",
      "id": "Quantity",
      "properties": {
        "string": {
          "description": "Stringified version of the quantity, e.g., \"800 MiB\".",
          "type": "string"
        }
      }
    },
    "RevisionStatus": {
      "type": "object",
      "description": "RevisionStatus communicates the observed state of the Revision (from the controller).",
      "properties": {
        "observedGeneration": {
          "format": "int32",
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Revision that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation, and the Ready condition's status is True or False."
        },
        "imageDigest": {
          "type": "string",
          "description": "ImageDigest holds the resolved digest for the image specified within .Spec.Container.Image. The digest is resolved during the creation of Revision. This field holds the digest value regardless of whether a tag or digest was originally specified in the Container object."
        },
        "serviceName": {
          "description": "Not currently used by Cloud Run.",
          "type": "string"
        },
        "logUrl": {
          "type": "string",
          "description": "Specifies the generated logging url for this particular revision based on the revision url template specified in the controller's config. +optional"
        },
        "conditions": {
          "type": "array",
          "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world. As a Revision is being prepared, it will incrementally update conditions \"ResourcesAvailable\", \"ContainerHealthy\", and \"Active\", which contribute to the overall \"Ready\" condition.",
          "items": {
            "$ref": "RevisionCondition"
          }
        }
      },
      "id": "RevisionStatus"
    },
    "VolumeMount": {
      "description": "VolumeMount describes a mounting of a Volume within a container.",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "This must match the Name of a Volume."
        },
        "mountPath": {
          "type": "string",
          "description": "Path within the container at which the volume should be mounted. Must not contain ':'."
        },
        "readOnly": {
          "description": "Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false. +optional",
          "type": "boolean"
        },
        "subPath": {
          "type": "string",
          "description": "Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root). +optional"
        },
        "mountPropagation": {
          "description": "mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationHostToContainer is used. This field is beta in 1.10. +optional",
          "type": "string"
        }
      },
      "id": "VolumeMount"
    },
    "ConfigurationSpec": {
      "id": "ConfigurationSpec",
      "type": "object",
      "properties": {
        "revisionTemplate": {
          "description": "RevisionTemplate holds the latest specification for the Revision to be stamped out. The template references the container image, and may also include labels and annotations that should be attached to the Revision. To correlate a Revision, and/or to force a Revision to be created when the spec doesn't otherwise change, a nonce label may be provided in the template metadata. For more details, see: https://github.com/knative/serving/blob/master/docs/client-conventions.md#associate-modifications-with-revisions Cloud Run does not currently support referencing a build that is responsible for materializing the container image from source.",
          "$ref": "RevisionTemplate"
        },
        "template": {
          "$ref": "RevisionTemplate",
          "description": "Template holds the latest specification for the Revision to be stamped out."
        },
        "generation": {
          "description": "Deprecated and not currently populated by Cloud Run. See metadata.generation instead, which is the sequence number containing the latest generation of the desired state. Read-only.",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "ConfigurationSpec holds the desired state of the Configuration (from the client)."
    },
    "DomainMappingSpec": {
      "id": "DomainMappingSpec",
      "properties": {
        "certificateMode": {
          "type": "string",
          "enum": [
            "CERTIFICATE_MODE_UNSPECIFIED",
            "NONE",
            "AUTOMATIC"
          ],
          "enumDescriptions": [
            "",
            "Do not provision an HTTPS certificate.",
            "Automatically provisions an HTTPS certificate via GoogleCA or LetsEncrypt."
          ],
          "description": "The mode of the certificate."
        },
        "forceOverride": {
          "description": "If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning.",
          "type": "boolean"
        },
        "routeName": {
          "type": "string",
          "description": "The name of the Knative Route that this DomainMapping applies to. The route must exist."
        }
      },
      "description": "The desired state of the Domain Mapping.",
      "type": "object"
    },
    "Addressable": {
      "description": "Information for connecting over HTTP(s).",
      "properties": {
        "url": {
          "type": "string"
        },
        "hostname": {
          "description": "Deprecated - use url instead.",
          "type": "string"
        }
      },
      "id": "Addressable",
      "type": "object"
    },
    "RouteStatus": {
      "type": "object",
      "description": "RouteStatus communicates the observed state of the Route (from the controller).",
      "properties": {
        "url": {
          "type": "string",
          "description": "URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False. Note that providing a trafficTarget that only has a configurationName will result in a Route that does not increment either its metadata.generation or its observedGeneration, as new \"latest ready\" revisions from the Configuration are processed without an update to the Route's spec.",
          "format": "int32"
        },
        "traffic": {
          "description": "Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.",
          "type": "array",
          "items": {
            "$ref": "TrafficTarget"
          }
        },
        "conditions": {
          "items": {
            "$ref": "RouteCondition"
          },
          "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world.",
          "type": "array"
        },
        "domain": {
          "description": "Deprecated - use url instead. Domain holds the top-level domain that will distribute traffic over the provided targets.",
          "type": "string"
        },
        "address": {
          "description": "Similar to url, information on where the service is available on HTTP.",
          "$ref": "Addressable"
        },
        "domainInternal": {
          "description": "Deprecated - use address instead. For Cloud Run, identifical to domain.",
          "type": "string"
        }
      },
      "id": "RouteStatus"
    },
    "CloudSchedulerSourceStatus": {
      "type": "object",
      "properties": {
        "conditions": {
          "items": {
            "$ref": "Condition"
          },
          "description": "Array of observed CloudSchedulerSourceConditions, indicating the current state of the CloudSchedulerSource.",
          "type": "array"
        },
        "observedGeneration": {
          "format": "int32",
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the CloudSchedulerSource that was last processed by the controller."
        },
        "sinkUri": {
          "description": "SinkURI is the current active sink URI that has been configured for the Source.",
          "type": "string"
        }
      },
      "id": "CloudSchedulerSourceStatus",
      "description": "CloudSchedulerSourceStatus represents the current state of a CloudSchedulerSource."
    },
    "ListLocationsResponse": {
      "type": "object",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Locations.ListLocations."
    },
    "Empty": {
      "id": "Empty",
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "ServiceStatus": {
      "description": "The current state of the Service. Output only.",
      "id": "ServiceStatus",
      "type": "object",
      "properties": {
        "observedGeneration": {
          "format": "int32",
          "description": "ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.",
          "type": "integer"
        },
        "address": {
          "$ref": "Addressable",
          "description": "From RouteStatus. Similar to url, information on where the service is available on HTTP."
        },
        "traffic": {
          "description": "From RouteStatus. Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.",
          "type": "array",
          "items": {
            "$ref": "TrafficTarget"
          }
        },
        "domain": {
          "type": "string",
          "description": "From RouteStatus. Domain holds the top-level domain that will distribute traffic over the provided targets. It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app"
        },
        "conditions": {
          "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world.",
          "type": "array",
          "items": {
            "$ref": "ServiceCondition"
          }
        },
        "url": {
          "type": "string",
          "description": "From RouteStatus. URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app"
        },
        "latestCreatedRevisionName": {
          "type": "string",
          "description": "From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created from this Service's Configuration. It might not be ready yet, for that use LatestReadyRevisionName."
        },
        "latestReadyRevisionName": {
          "type": "string",
          "description": "From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision stamped out from this Service's Configuration that has had its \"Ready\" condition become \"True\"."
        }
      }
    },
    "TrafficTarget": {
      "type": "object",
      "id": "TrafficTarget",
      "description": "TrafficTarget holds a single entry of the routing table for a Route.",
      "properties": {
        "percent": {
          "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry.",
          "format": "int32",
          "type": "integer"
        },
        "configurationName": {
          "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName.",
          "type": "string"
        },
        "name": {
          "description": "Name is optionally used to expose a dedicated hostname for referencing this target exclusively. Not currently supported by Cloud Run. +optional",
          "type": "string"
        },
        "tag": {
          "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively. Not currently supported in Cloud Run. +optional",
          "type": "string"
        },
        "latestRevision": {
          "type": "boolean",
          "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional"
        },
        "revisionName": {
          "description": "RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run.",
          "type": "string"
        },
        "url": {
          "description": "Output only. URL displays the URL for accessing named traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc. Not currently supported in Cloud Run.",
          "type": "string"
        }
      }
    },
    "CloudAuditLogsSourceStatus": {
      "description": "CloudAuditLogsSourceStatus represents the current state of a CloudAuditLogsSource.",
      "id": "CloudAuditLogsSourceStatus",
      "type": "object",
      "properties": {
        "sinkUri": {
          "description": "SinkURI is the current active sink URI that has been configured for the Source. +optional",
          "type": "string"
        },
        "conditions": {
          "items": {
            "$ref": "Condition"
          },
          "description": "Array of observed CloudAuditLogsSourceConditions, indicating the current state of the CloudAuditLogsSource.",
          "type": "array"
        },
        "observedGeneration": {
          "format": "int32",
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the CloudAuditLogsSource that was last processed by the controller."
        }
      }
    },
    "ConfigMapVolumeSource": {
      "properties": {
        "items": {
          "items": {
            "$ref": "KeyToPath"
          },
          "description": "If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional.",
          "type": "array"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "description": "Mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set."
        },
        "name": {
          "description": "Name of the config.",
          "type": "string"
        },
        "optional": {
          "type": "boolean",
          "description": "Specify whether the Secret or its keys must be defined."
        }
      },
      "description": "Adapts a ConfigMap into a volume. The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths.",
      "type": "object",
      "id": "ConfigMapVolumeSource"
    },
    "DomainMapping": {
      "type": "object",
      "id": "DomainMapping",
      "description": "Resource to hold the state and status of a user's domain mapping. NOTE: This resource is currently in Beta.",
      "properties": {
        "spec": {
          "description": "The spec for this DomainMapping.",
          "$ref": "DomainMappingSpec"
        },
        "apiVersion": {
          "description": "The API version for this call such as \"domains.cloudrun.com/v1alpha1\".",
          "type": "string"
        },
        "status": {
          "description": "The current status of the DomainMapping.",
          "$ref": "DomainMappingStatus"
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this BuildTemplate."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource, in this case \"DomainMapping\"."
        }
      }
    },
    "RevisionSpec": {
      "properties": {
        "container": {
          "$ref": "Container",
          "description": "Container defines the unit of execution for this Revision. In the context of a Revision, we disallow a number of the fields of this Container, including: name, ports, and volumeMounts. The runtime contract is documented here: https://github.com/knative/serving/blob/master/docs/runtime-contract.md"
        },
        "timeoutSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "TimeoutSeconds holds the max duration the instance is allowed for responding to a request. Not currently used by Cloud Run."
        },
        "generation": {
          "type": "integer",
          "description": "Deprecated and not currently populated by Cloud Run. See metadata.generation instead, which is the sequence number containing the latest generation of the desired state. Read-only.",
          "format": "int32"
        },
        "containers": {
          "items": {
            "$ref": "Container"
          },
          "description": "Containers holds the single container that defines the unit of execution for this Revision. In the context of a Revision, we disallow a number of fields on this Container, including: name and lifecycle. In Cloud Run, only a single container may be provided.",
          "type": "array"
        },
        "servingState": {
          "description": "ServingState holds a value describing the state the resources are in for this Revision. Users must not specify this when creating a revision. It is expected that the system will manipulate this based on routability and load. Populated by the system. Read-only.",
          "type": "string",
          "enum": [
            "REVISION_SERVING_STATE_UNSPECIFIED",
            "ACTIVE",
            "RESERVE",
            "RETIRED"
          ],
          "enumDescriptions": [
            "The revision serving state hasn't been specified.",
            "The revision is ready to serve traffic.",
            "The revision is not currently serving traffic, but could be made to serve traffic quickly. Not currently used by Cloud Run.",
            "The revision has been decommissioned and is not needed to serve traffic anymore. A Revision may be brought out of retirement, but it may take longer than it would from a \"Reserve\" state."
          ]
        },
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "serviceAccountName": {
          "description": "Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.",
          "type": "string"
        },
        "containerConcurrency": {
          "type": "integer",
          "description": "(Optional) ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container instance of the Revision. Cloud Run fully managed: supported, defaults to 80 Cloud Run on GKE: supported, defaults to 0, which means concurrency to the application is not limited, and the system decides the target concurrency for the autoscaler.",
          "format": "int32"
        },
        "concurrencyModel": {
          "type": "string",
          "description": "ConcurrencyModel specifies the desired concurrency model (Single or Multi) for the Revision. Defaults to Multi. Deprecated in favor of ContainerConcurrency. +optional"
        }
      },
      "type": "object",
      "description": "RevisionSpec holds the desired state of the Revision (from the client).",
      "id": "RevisionSpec"
    },
    "Expr": {
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "id": "Expr",
      "type": "object",
      "properties": {
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        }
      }
    },
    "ListJobsResponse": {
      "id": "ListJobsResponse",
      "type": "object",
      "description": "ListJobsResponse is a list of Jobs resources.",
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "items": {
          "items": {
            "$ref": "Job"
          },
          "description": "List of Jobs.",
          "type": "array"
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this jobs list."
        },
        "nextPageToken": {
          "type": "string",
          "description": "This field is equivalent to the metadata.continue field and is provided as a convenience for compatibility with https://google.aip.dev/158. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The metadata.resourceVersion field returned when using this field will be identical to the value in the first response."
        },
        "apiVersion": {
          "description": "The API version for this call such as \"run.googleapis.com/v1alpha1\".",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "The kind of this resource, in this case \"JobsList\"."
        }
      }
    },
    "SetIamPolicyRequest": {
      "type": "object",
      "id": "SetIamPolicyRequest",
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "type": "string"
        },
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."
        }
      }
    },
    "ObjectMeta": {
      "properties": {
        "finalizers": {
          "items": {
            "type": "string"
          },
          "description": "Not currently supported by Cloud Run. Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +optional +patchStrategy=merge",
          "type": "array"
        },
        "deletionTimestamp": {
          "type": "string",
          "description": "DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata +optional",
          "format": "google-datetime"
        },
        "clusterName": {
          "description": "Not currently supported by Cloud Run. The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request. +optional",
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number."
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels +optional"
        },
        "generateName": {
          "description": "Not currently supported by Cloud Run. GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency +optional string generateName = 2;",
          "type": "string"
        },
        "resourceVersion": {
          "description": "An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional",
          "type": "string"
        },
        "ownerReferences": {
          "items": {
            "$ref": "OwnerReference"
          },
          "description": "List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected. +optional",
          "type": "array"
        },
        "creationTimestamp": {
          "format": "google-datetime",
          "description": "CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata +optional",
          "type": "string"
        },
        "annotations": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations +optional"
        },
        "generation": {
          "format": "int32",
          "description": "A sequence number representing a specific generation of the desired state. Populated by the system. Read-only. +optional",
          "type": "integer"
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional string selfLink = 4;"
        },
        "uid": {
          "type": "string",
          "description": "UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids +optional"
        },
        "name": {
          "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional",
          "type": "string"
        },
        "deletionGracePeriodSeconds": {
          "format": "int32",
          "description": "Not currently supported by Cloud Run. Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only. +optional",
          "type": "integer"
        }
      },
      "description": "ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "id": "ObjectMeta",
      "type": "object"
    },
    "Revision": {
      "type": "object",
      "properties": {
        "status": {
          "$ref": "RevisionStatus",
          "description": "Status communicates the observed state of the Revision (from the controller)."
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Revision, including name, namespace, labels, and annotations."
        },
        "apiVersion": {
          "description": "The API version for this call such as \"serving.knative.dev/v1alpha1\".",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "The kind of this resource, in this case \"Revision\"."
        },
        "spec": {
          "description": "Spec holds the desired state of the Revision (from the client).",
          "$ref": "RevisionSpec"
        }
      },
      "id": "Revision",
      "description": "Revision is an immutable snapshot of code and configuration. A revision references a container image. Revisions are created by updates to a Configuration. Cloud Run does not currently support referencing a build that is responsible for materializing the container image from source. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#revision"
    },
    "ObjectReference": {
      "type": "object",
      "description": "ObjectReference contains enough information to let you inspect or modify the referred object.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names +optional"
        },
        "kind": {
          "type": "string",
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds +optional"
        },
        "uid": {
          "type": "string",
          "description": "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids +optional"
        },
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent. +optional"
        },
        "fieldPath": {
          "description": "If referring to a piece of an object instead of an entire object, this string should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2]. For example, if the object reference is to a container within a pod, this would take on a value like: \"spec.containers{name}\" (where \"name\" refers to the name of the container that triggered the event) or if no container name is specified \"spec.containers[2]\" (container with index 2 in this pod). This syntax is chosen only to have some well-defined way of referencing a part of an object.",
          "type": "string"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/ +optional"
        },
        "resourceVersion": {
          "type": "string",
          "description": "Specific resourceVersion to which this reference is made, if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
        }
      },
      "id": "ObjectReference"
    },
    "Location": {
      "id": "Location",
      "description": "A resource that represents Google Cloud Platform location.",
      "type": "object",
      "properties": {
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "Lifecycle": {
      "description": "Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.",
      "properties": {
        "preStop": {
          "$ref": "Handler",
          "description": "PreStop is called immediately before a container is terminated. The container is terminated after the handler completes. The reason for termination is passed to the handler. Regardless of the outcome of the handler, the container is eventually terminated. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks +optional"
        },
        "postStart": {
          "description": "PostStart is called immediately after a container is created. If the handler fails, the container is terminated and restarted according to its restart policy. Other management of the container blocks until the hook completes. More info: https://kubernetes.io/docs/concepts/containers/container-lifecycle-hooks/#container-hooks +optional",
          "$ref": "Handler"
        }
      },
      "id": "Lifecycle",
      "type": "object"
    },
    "CloudEventOverrides": {
      "properties": {
        "extensions": {
          "description": "Extensions specify what attribute are added or overridden on the outbound event. Each `Extensions` key-value pair are set on the event as an attribute extension independently. +optional",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "id": "CloudEventOverrides",
      "type": "object",
      "description": "CloudEventOverrides defines arguments for a Source that control the output format of the CloudEvents produced by the Source."
    },
    "Destination": {
      "id": "Destination",
      "properties": {
        "uri": {
          "type": "string",
          "description": "URI is for direct URI Designations or used with the resulting URL from Addressable ObjectReference. If used with an ObjectReference, will be appended to the path of the resulting URL from the Addressable. + optional"
        },
        "ref": {
          "description": "ObjectReference points to an Addressable. + optional",
          "$ref": "ObjectReference"
        }
      },
      "type": "object"
    },
    "CloudStorageSourceSpec": {
      "properties": {
        "objectNamePrefix": {
          "type": "string",
          "description": "ObjectNamePrefix limits the notifications to objects with this prefix."
        },
        "bucket": {
          "description": "Bucket to subscribe to.",
          "type": "string"
        },
        "sink": {
          "description": "Sink is a reference to an object that will resolve to a domain name or a URI directly to use as the sink.",
          "$ref": "Destination"
        },
        "pubsubSecret": {
          "description": "PubSubSecret is the credential to use to create Topic / PullSubscription resources. If omitted, uses Secret.",
          "$ref": "SecretKeySelector"
        },
        "eventTypes": {
          "type": "array",
          "description": "EventTypes to subscribe to. If unspecified, then subscribe to all events.",
          "items": {
            "type": "string"
          }
        },
        "ceOverrides": {
          "description": "CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink.",
          "$ref": "CloudEventOverrides"
        },
        "project": {
          "type": "string",
          "description": "Project is the ID of the Google Cloud Project that the PubSub Topic exists in. If omitted, defaults to same as the cluster."
        },
        "secret": {
          "description": "Secret is the credential to use to create the Scheduler Job. If not specified, defaults to: Name: google-cloud-key Key: key.json",
          "$ref": "SecretKeySelector"
        },
        "serviceAccountName": {
          "type": "string",
          "description": "ServiceAccountName holds the name of the Kubernetes service account as which the underlying K8s resources should be run. If unspecified this will default to the \"default\" service account for the namespace in which the GCS exists."
        },
        "payloadFormat": {
          "type": "string",
          "description": "PayloadFormat specifies the contents of the message payload. See https://cloud.google.com/storage/docs/pubsub-notifications#payload."
        }
      },
      "type": "object",
      "description": "The desired state of the CloudStorageSource.",
      "id": "CloudStorageSourceSpec"
    },
    "RouteSpec": {
      "description": "RouteSpec holds the desired state of the Route (from the client).",
      "type": "object",
      "properties": {
        "traffic": {
          "items": {
            "$ref": "TrafficTarget"
          },
          "type": "array",
          "description": "Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations. Cloud Run currently supports a single configurationName."
        },
        "generation": {
          "description": "Deprecated and not currently populated by Cloud Run. See metadata.generation instead, which is the sequence number containing the latest generation of the desired state. Read-only.",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "RouteSpec"
    },
    "TestIamPermissionsResponse": {
      "type": "object",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array"
        }
      },
      "description": "Response message for `TestIamPermissions` method."
    },
    "ListRoutesResponse": {
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "type": "string",
          "description": "The kind of this resource, in this case always \"RouteList\"."
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this Route list."
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Route"
          },
          "description": "List of Routes."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"serving.knative.dev/v1alpha1\"."
        }
      },
      "id": "ListRoutesResponse",
      "description": "ListRoutesResponse is a list of Route resources.",
      "type": "object"
    },
    "CloudPubSubSourceStatus": {
      "description": "CloudPubSubSourceStatus represents the current state of a CloudPubSubSource.",
      "properties": {
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the CloudPubSubSource that was last processed by the controller.",
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "type": "array",
          "description": "Array of observed CloudPubSubSourceConditions, indicating the current state of the CloudPubSubSource.",
          "items": {
            "$ref": "Condition"
          }
        },
        "sinkUri": {
          "description": "SinkURI is the current active sink URI that has been configured for the Source. +optional",
          "type": "string"
        }
      },
      "type": "object",
      "id": "CloudPubSubSourceStatus"
    },
    "ServiceSpecManualType": {
      "id": "ServiceSpecManualType",
      "properties": {},
      "description": "ServiceSpecManualType contains the options for configuring a manual service. See ServiceSpec for more details. Not currently supported by Cloud Run.",
      "type": "object"
    },
    "SecurityContext": {
      "properties": {
        "privileged": {
          "type": "boolean",
          "description": "Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false. +optional"
        },
        "runAsGroup": {
          "type": "integer",
          "format": "int32",
          "description": "The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. +optional"
        },
        "readOnlyRootFilesystem": {
          "description": "Whether this container has a read-only root filesystem. Default is false. +optional",
          "type": "boolean"
        },
        "allowPrivilegeEscalation": {
          "type": "boolean",
          "description": "AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN +optional"
        },
        "seLinuxOptions": {
          "description": "The SELinux context to be applied to the container. If unspecified, the container runtime will allocate a random SELinux context for each container. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. +optional",
          "$ref": "SELinuxOptions"
        },
        "runAsNonRoot": {
          "description": "Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. +optional",
          "type": "boolean"
        },
        "capabilities": {
          "description": "The capabilities to add/drop when running containers. Defaults to the default set of capabilities granted by the container runtime. +optional",
          "$ref": "Capabilities"
        },
        "runAsUser": {
          "type": "integer",
          "description": "The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence. +optional",
          "format": "int32"
        }
      },
      "description": "SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence.",
      "type": "object",
      "id": "SecurityContext"
    },
    "InstanceTemplateSpec": {
      "type": "object",
      "properties": {
        "spec": {
          "description": "Optional. Specification of the desired behavior of the instance. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#spec-and-status +optional",
          "$ref": "InstanceSpec"
        }
      },
      "id": "InstanceTemplateSpec",
      "description": "InstanceTemplateSpec describes the data an instance should have when created from a template."
    },
    "Condition": {
      "properties": {
        "reason": {
          "type": "string",
          "description": "Optional. One-word CamelCase reason for the condition's last transition."
        },
        "message": {
          "type": "string",
          "description": "Optional. Human readable message indicating details about the current status."
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "lastTransitionTime": {
          "description": "Optional. Last time the condition transitioned from one status to another.",
          "format": "google-datetime",
          "type": "string"
        },
        "type": {
          "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready.",
          "type": "string"
        },
        "severity": {
          "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Condition defines a generic condition for a Resource",
      "id": "Condition"
    },
    "DomainMappingCondition": {
      "id": "DomainMappingCondition",
      "description": "DomainMappingCondition contains state information for a DomainMapping.",
      "type": "object",
      "properties": {
        "reason": {
          "description": "One-word CamelCase reason for the condition's current status. +optional",
          "type": "string"
        },
        "severity": {
          "type": "string",
          "description": "How to interpret failures of this condition, one of Error, Warning, Info +optional"
        },
        "message": {
          "description": "Human readable message indicating details about the current status. +optional",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "lastTransitionTime": {
          "type": "string",
          "description": "Last time the condition transitioned from one status to another. +optional",
          "format": "google-datetime"
        },
        "type": {
          "description": "Type of domain mapping condition.",
          "type": "string"
        }
      }
    },
    "HTTPGetAction": {
      "properties": {
        "scheme": {
          "description": "Scheme to use for connecting to the host. Defaults to HTTP. +optional",
          "type": "string"
        },
        "port": {
          "$ref": "IntOrString",
          "description": "Name or number of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME."
        },
        "host": {
          "type": "string",
          "description": "Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead. +optional"
        },
        "path": {
          "description": "Path to access on the HTTP server. +optional",
          "type": "string"
        },
        "httpHeaders": {
          "description": "Custom headers to set in the request. HTTP allows repeated headers. +optional",
          "items": {
            "$ref": "HTTPHeader"
          },
          "type": "array"
        }
      },
      "description": "HTTPGetAction describes an action based on HTTP Get requests.",
      "id": "HTTPGetAction",
      "type": "object"
    },
    "Probe": {
      "properties": {
        "initialDelaySeconds": {
          "description": "Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes +optional",
          "format": "int32",
          "type": "integer"
        },
        "periodSeconds": {
          "type": "integer",
          "format": "int32",
          "description": "How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1. +optional"
        },
        "successThreshold": {
          "description": "Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1. +optional",
          "format": "int32",
          "type": "integer"
        },
        "failureThreshold": {
          "format": "int32",
          "type": "integer",
          "description": "Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1. +optional"
        },
        "timeoutSeconds": {
          "format": "int32",
          "description": "Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes +optional",
          "type": "integer"
        },
        "handler": {
          "$ref": "Handler",
          "description": "The action taken to determine the health of a container"
        }
      },
      "type": "object",
      "id": "Probe",
      "description": "Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic."
    },
    "ListRevisionsResponse": {
      "id": "ListRevisionsResponse",
      "description": "ListRevisionsResponse is a list of Revision resources.",
      "properties": {
        "kind": {
          "description": "The kind of this resource, in this case \"RevisionList\".",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "apiVersion": {
          "description": "The API version for this call such as \"serving.knative.dev/v1alpha1\".",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "Revision"
          },
          "type": "array",
          "description": "List of Revisions."
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this revision list."
        }
      },
      "type": "object"
    },
    "ServiceSpecPinnedType": {
      "description": "ServiceSpecPinnedType Pins this service to a specific revision name. The revision must be owned by the configuration provided. Deprecated and not supported by Cloud Run.",
      "type": "object",
      "id": "ServiceSpecPinnedType",
      "properties": {
        "configuration": {
          "$ref": "ConfigurationSpec",
          "description": "The configuration for this service."
        },
        "revisionName": {
          "type": "string",
          "description": "The revision name to pin this service to until changed to a different service type."
        }
      }
    },
    "ConfigMapEnvSource": {
      "id": "ConfigMapEnvSource",
      "type": "object",
      "description": "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with. The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
      "properties": {
        "localObjectReference": {
          "$ref": "LocalObjectReference",
          "description": "This field should not be used directly as it is meant to be inlined directly into the message. Use the \"name\" field instead."
        },
        "name": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The ConfigMap to select from.",
          "type": "string"
        },
        "optional": {
          "type": "boolean",
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the ConfigMap must be defined +optional"
        }
      }
    },
    "SELinuxOptions": {
      "id": "SELinuxOptions",
      "properties": {
        "level": {
          "type": "string",
          "description": "Level is SELinux level label that applies to the container. +optional"
        },
        "user": {
          "type": "string",
          "description": "User is a SELinux user label that applies to the container. +optional"
        },
        "role": {
          "description": "Role is a SELinux role label that applies to the container. +optional",
          "type": "string"
        },
        "type": {
          "type": "string",
          "description": "Type is a SELinux type label that applies to the container. +optional"
        }
      },
      "description": "SELinuxOptions are the labels to be applied to the container",
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      },
      "type": "object",
      "id": "TestIamPermissionsRequest"
    },
    "ServiceSpecReleaseType": {
      "id": "ServiceSpecReleaseType",
      "properties": {
        "rolloutPercent": {
          "format": "int32",
          "description": "RolloutPercent is the percent of traffic that should be sent to the candidate revision, i.e. the 2nd revision in the revisions list. Valid values are between 0 and 99 inclusive.",
          "type": "integer"
        },
        "configuration": {
          "description": "The configuration for this service. All revisions from this service must come from a single configuration.",
          "$ref": "ConfigurationSpec"
        },
        "revisions": {
          "description": "Revisions is an ordered list of 1 or 2 revisions. The first is the current revision, and the second is the candidate revision. If a single revision is provided, traffic will be pinned at that revision. \"@latest\" is a shortcut for usage that refers to the latest created revision by the configuration.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "ServiceSpecReleaseType contains the options for slowly releasing revisions. See ServiceSpec for more details. Not currently supported by Cloud Run.",
      "type": "object"
    },
    "CloudAuditLogsSourceSpec": {
      "id": "CloudAuditLogsSourceSpec",
      "description": "The desired state of the CloudAuditLogsSource.",
      "properties": {
        "methodName": {
          "description": "Required. The method name at the service API. This must match \"methodName\" in Cloud Audit Logs. Regex or Wildcards (*) are not supported. Example: \"google.cloud.bigquery.job.create\".",
          "type": "string"
        },
        "resourceName": {
          "description": "Optional. The resource specification. This must match \"methodName\" in Cloud Audit Logs. Regex or Wildcards (*) are not supported. Example: \"projects/my-project/jobs/foo\".",
          "type": "string"
        },
        "sink": {
          "description": "Sink is a reference to an object that will resolve to a domain name or a URI directly to use as the sink.",
          "$ref": "Destination"
        },
        "ceOverrides": {
          "description": "CloudEventOverrides defines overrides to control the output format and modifications of the event sent to the sink. +optional",
          "$ref": "CloudEventOverrides"
        },
        "serviceName": {
          "type": "string",
          "description": "Required. The GCP service name. This must match \"serviceName\" in Cloud Audit Logs. Regex or Wildcards (*) are not supported. Example: \"bigquery.googleapis.com\"."
        },
        "serviceAccountName": {
          "description": "Optional. Email address of the IAM service account associated with the source. The service account represents the identity of the source, and determines what permissions the source has. If not provided, the source will use the project's default service account.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListCloudPubSubSourcesResponse": {
      "properties": {
        "metadata": {
          "description": "Metadata associated with this CloudPubSubSource list.",
          "$ref": "ListMeta"
        },
        "items": {
          "items": {
            "$ref": "CloudPubSubSource"
          },
          "description": "List of CloudPubSubSources.",
          "type": "array"
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "description": "The kind of this resource, in this case \"CloudPubSubSourceList\".",
          "type": "string"
        },
        "apiVersion": {
          "description": "The API version for this call such as \"events.cloud.google.com/v1alpha1\".",
          "type": "string"
        }
      },
      "description": "ListCloudPubSubSourcesResponse is a list of CloudPubSubSource resources.",
      "type": "object",
      "id": "ListCloudPubSubSourcesResponse"
    },
    "ListTriggersResponse": {
      "id": "ListTriggersResponse",
      "type": "object",
      "description": "ListTriggersResponse is a list of Trigger resources.",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"eventing.knative.dev/v1alpha1\"."
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this Trigger list."
        },
        "kind": {
          "type": "string",
          "description": "The kind of this resource, in this case \"TriggerList\"."
        },
        "items": {
          "items": {
            "$ref": "Trigger"
          },
          "description": "List of Triggers.",
          "type": "array"
        }
      }
    },
    "ResourceRequirements": {
      "type": "object",
      "description": "ResourceRequirements describes the compute resource requirements.",
      "id": "ResourceRequirements",
      "properties": {
        "requests": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
          "type": "object"
        },
        "limits": {
          "description": "Limits describes the maximum amount of compute resources allowed. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requestsInMap": {
          "description": "Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. This is a temporary field created to migrate away from the map requests field. This is done to become compliant with k8s style API. This field is deprecated in favor of requests field.",
          "type": "object",
          "additionalProperties": {
            "$ref": "Quantity"
          }
        },
        "limitsInMap": {
          "additionalProperties": {
            "$ref": "Quantity"
          },
          "description": "Limits describes the maximum amount of compute resources allowed. This is a temporary field created to migrate away from the map limits field. This is done to become compliant with k8s style API. This field is deprecated in favor of limits field.",
          "type": "object"
        }
      }
    },
    "Route": {
      "description": "Route is responsible for configuring ingress over a collection of Revisions. Some of the Revisions a Route distributes traffic over may be specified by referencing the Configuration responsible for creating them; in these cases the Route is additionally responsible for monitoring the Configuration for \"latest ready\" revision changes, and smoothly rolling out latest revisions. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#route Cloud Run currently supports referencing a single Configuration to automatically deploy the \"latest ready\" Revision from that Configuration.",
      "properties": {
        "kind": {
          "description": "The kind of this resource, in this case always \"Route\".",
          "type": "string"
        },
        "status": {
          "$ref": "RouteStatus",
          "description": "Status communicates the observed state of the Route (from the controller)."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"serving.knative.dev/v1alpha1\"."
        },
        "metadata": {
          "description": "Metadata associated with this Route, including name, namespace, labels, and annotations.",
          "$ref": "ObjectMeta"
        },
        "spec": {
          "$ref": "RouteSpec",
          "description": "Spec holds the desired state of the Route (from the client)."
        }
      },
      "type": "object",
      "id": "Route"
    },
    "ListAuthorizedDomainsResponse": {
      "id": "ListAuthorizedDomainsResponse",
      "type": "object",
      "properties": {
        "domains": {
          "description": "The authorized domains belonging to the user.",
          "type": "array",
          "items": {
            "$ref": "AuthorizedDomain"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        }
      },
      "description": "A list of Authorized Domains."
    },
    "JobSpec": {
      "description": "JobSpec describes how the job execution will look like.",
      "type": "object",
      "properties": {
        "completions": {
          "type": "integer",
          "description": "Optional. Specifies the desired number of successfully finished instances the job should be run with. Setting to 1 means that parallelism is limited to 1 and the success of that instance signals the success of the job. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ +optional",
          "format": "int32"
        },
        "backoffLimit": {
          "description": "Optional. Specifies the number of retries per instance, before marking this job failed. If set to zero, instances will never retry on failure. +optional",
          "type": "integer",
          "format": "int32"
        },
        "template": {
          "description": "Optional. Describes the instance that will be created when executing a job.",
          "$ref": "InstanceTemplateSpec"
        },
        "activeDeadlineSeconds": {
          "format": "int64",
          "description": "Optional. Specifies the duration in seconds relative to the startTime that the job may be active before the system tries to terminate it. If set to zero, the system will never attempt to terminate the job based on time. Otherwise, the value must be positive integer. +optional",
          "type": "string"
        },
        "ttlSecondsAfterFinished": {
          "type": "integer",
          "description": "Optional. ttlSecondsAfterFinished limits the lifetime of a Job that has finished execution (either Complete or Failed). If this field is set, ttlSecondsAfterFinished after the Job finishes, it is eligible to be automatically deleted. When the Job is being deleted, its lifecycle guarantees (e.g. finalizers) will be honored. If this field is set to zero, the Job won't be automatically deleted. +optional",
          "format": "int32"
        },
        "parallelism": {
          "description": "Optional. Specifies the maximum desired number of instances the job should run at any given time. Must be \u003c= completions. The actual number of instances running in steady state will be less than this number when ((.spec.completions - .status.successful) \u003c .spec.parallelism), i.e. when the work left to do is less than max parallelism. More info: https://kubernetes.io/docs/concepts/workloads/controllers/jobs-run-to-completion/ +optional",
          "format": "int32",
          "type": "integer"
        }
      },
      "id": "JobSpec"
    },
    "Trigger": {
      "type": "object",
      "id": "Trigger",
      "properties": {
        "status": {
          "description": "Optional. Status represents the current state of the Trigger. This data may be out of date.",
          "$ref": "TriggerStatus"
        },
        "spec": {
          "description": "Spec defines the desired state of the Trigger.",
          "$ref": "TriggerSpec"
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"eventing.knative.dev/v1alpha1\"."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource, in this case \"Trigger\"."
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Trigger."
        }
      }
    },
    "ListMeta": {
      "type": "object",
      "id": "ListMeta",
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "properties": {
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
        },
        "continue": {
          "type": "string",
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
        },
        "resourceVersion": {
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional",
          "type": "string"
        }
      }
    },
    "Handler": {
      "properties": {
        "exec": {
          "$ref": "ExecAction",
          "description": "One and only one of the following should be specified. Exec specifies the action to take. +optional"
        },
        "httpGet": {
          "$ref": "HTTPGetAction",
          "description": "HTTPGet specifies the http request to perform. +optional"
        },
        "tcpSocket": {
          "description": "TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported",
          "$ref": "TCPSocketAction"
        }
      },
      "type": "object",
      "id": "Handler",
      "description": "Handler defines a specific action that should be taken"
    },
    "ServiceSpecRunLatest": {
      "properties": {
        "configuration": {
          "$ref": "ConfigurationSpec",
          "description": "The configuration for this service."
        }
      },
      "id": "ServiceSpecRunLatest",
      "type": "object",
      "description": "ServiceSpecRunLatest contains the options for always having a route to the latest configuration. See ServiceSpec for more details."
    },
    "InstanceStatus": {
      "type": "object",
      "properties": {
        "index": {
          "description": "Required. Index of the instance, unique per Job, and beginning at 0.",
          "type": "integer",
          "format": "int32"
        },
        "succeeded": {
          "description": "Optional. The number of times this instance exited with code == 0. +optional",
          "format": "int32",
          "type": "integer"
        },
        "completionTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Optional. Represents time when the instance was completed. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional"
        },
        "lastExitCode": {
          "description": "Optional. Last exit code seen for this instance. +optional",
          "format": "int32",
          "type": "integer"
        },
        "restarted": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The number of times this instance was restarted. Instances are restarted according the restartPolicy configured in the Job template. +optional"
        },
        "startTime": {
          "description": "Optional. Represents time when the instance was created by the job controller. It is not guaranteed to be set in happens-before order across separate operations. It is represented in RFC3339 form and is in UTC. +optional",
          "type": "string",
          "format": "google-datetime"
        },
        "failed": {
          "description": "Optional. The number of times this instance exited with code \u003e 0; +optional",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Instance represents the status of an instance of a Job.",
      "id": "InstanceStatus"
    },
    "CloudStorageSource": {
      "type": "object",
      "id": "CloudStorageSource",
      "description": "The CloudStorageSource resource.",
      "properties": {
        "spec": {
          "$ref": "CloudStorageSourceSpec",
          "description": "Spec defines the desired state of the CloudStorageSource."
        },
        "metadata": {
          "description": "Metadata associated with this CloudStorageSource.",
          "$ref": "ObjectMeta"
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource, in this case \"CloudStorageSource\"."
        },
        "status": {
          "description": "Status represents the current state of the CloudStorageSource. This data may be out of date.",
          "$ref": "CloudStorageSourceStatus"
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"events.cloud.google.com/v1alpha1\"."
        }
      }
    },
    "CloudPubSubSource": {
      "properties": {
        "metadata": {
          "description": "Metadata associated with this CloudPubSubSource.",
          "$ref": "ObjectMeta"
        },
        "status": {
          "$ref": "CloudPubSubSourceStatus",
          "description": "Status represents the current state of the CloudPubSubSource. This data may be out of date. +optional"
        },
        "spec": {
          "$ref": "CloudPubSubSourceSpec",
          "description": "Spec defines the desired state of the CloudPubSubSource."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource, in this case \"CloudPubSubSource\"."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"events.cloud.google.com/v1alpha1\"."
        }
      },
      "type": "object",
      "id": "CloudPubSubSource"
    },
    "Binding": {
      "type": "object",
      "description": "Associates `members` with a `role`.",
      "id": "Binding",
      "properties": {
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "condition": {
          "$ref": "Expr",
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
        }
      }
    },
    "OwnerReference": {
      "properties": {
        "controller": {
          "description": "If true, this reference points to the managing controller. +optional",
          "type": "boolean"
        },
        "apiVersion": {
          "type": "string",
          "description": "API version of the referent."
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional",
          "type": "boolean"
        },
        "uid": {
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        },
        "name": {
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
        }
      },
      "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
      "type": "object",
      "id": "OwnerReference"
    },
    "ExecAction": {
      "description": "ExecAction describes a \"run in container\" action.",
      "properties": {
        "command": {
          "description": "Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy. +optional",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "ExecAction"
    },
    "AuditConfig": {
      "properties": {
        "service": {
          "type": "string",
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services."
        },
        "auditLogConfigs": {
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          },
          "description": "The configuration for logging of each type of permission."
        }
      },
      "id": "AuditConfig",
      "type": "object",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
    },
    "Capabilities": {
      "type": "object",
      "id": "Capabilities",
      "description": "Adds and removes POSIX capabilities from running containers.",
      "properties": {
        "add": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Added capabilities +optional"
        },
        "drop": {
          "type": "array",
          "description": "Removed capabilities +optional",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "AuditLogConfig": {
      "type": "object",
      "properties": {
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "type": "string"
        },
        "exemptedMembers": {
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging."
    },
    "ConfigurationStatus": {
      "description": "ConfigurationStatus communicates the observed state of the Configuration (from the controller).",
      "properties": {
        "latestReadyRevisionName": {
          "description": "LatestReadyRevisionName holds the name of the latest Revision stamped out from this Configuration that has had its \"Ready\" condition become \"True\".",
          "type": "string"
        },
        "latestCreatedRevisionName": {
          "type": "string",
          "description": "LatestCreatedRevisionName is the last revision that was created from this Configuration. It might not be ready yet, for that use LatestReadyRevisionName."
        },
        "conditions": {
          "items": {
            "$ref": "ConfigurationCondition"
          },
          "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world.",
          "type": "array"
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the Configuration that was last processed by the controller. The observed generation is updated even if the controller failed to process the spec and create the Revision. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation, and the Ready condition's status is True or False.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "id": "ConfigurationStatus"
    },
    "TriggerSpec": {
      "properties": {
        "filter": {
          "$ref": "TriggerFilter",
          "description": "Optional. Filter is the filter to apply against all events from the Broker. Only events that pass this filter will be sent to the Subscriber. Note that filter is optional in knative and is only required in fully managed due to different broker implementation."
        },
        "broker": {
          "type": "string",
          "description": "Broker is the broker that this trigger receives events from. If not specified, will default to 'default'. Not currently supported by Cloud Run."
        },
        "subscriber": {
          "description": "Sink is the addressable that will receive events.",
          "$ref": "Destination"
        }
      },
      "description": "The desired state of the Trigger.",
      "type": "object",
      "id": "TriggerSpec"
    },
    "Container": {
      "id": "Container",
      "type": "object",
      "properties": {
        "image": {
          "type": "string",
          "description": "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images"
        },
        "envFrom": {
          "type": "array",
          "description": "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated. +optional",
          "items": {
            "$ref": "EnvFromSource"
          }
        },
        "readinessProbe": {
          "description": "Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes +optional",
          "$ref": "Probe"
        },
        "livenessProbe": {
          "description": "Periodic probe of container liveness. Container will be restarted if the probe fails. Cannot be updated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes +optional",
          "$ref": "Probe"
        },
        "terminationMessagePath": {
          "type": "string",
          "description": "Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated. +optional"
        },
        "resources": {
          "description": "Compute Resources required by this container. Cannot be updated. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources +optional",
          "$ref": "ResourceRequirements"
        },
        "stdin": {
          "type": "boolean",
          "description": "Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false. +optional"
        },
        "terminationMessagePolicy": {
          "description": "Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated. +optional",
          "type": "string"
        },
        "lifecycle": {
          "description": "Actions that the management system should take in response to container lifecycle events. Cannot be updated. +optional",
          "$ref": "Lifecycle"
        },
        "name": {
          "description": "Name of the container specified as a DNS_LABEL. Each container must have a unique name (DNS_LABEL). Cannot be updated.",
          "type": "string"
        },
        "tty": {
          "description": "Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false. +optional",
          "type": "boolean"
        },
        "workingDir": {
          "type": "string",
          "description": "Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated. +optional"
        },
        "stdinOnce": {
          "type": "boolean",
          "description": "Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false +optional"
        },
        "imagePullPolicy": {
          "description": "Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images +optional",
          "type": "string"
        },
        "env": {
          "type": "array",
          "items": {
            "$ref": "EnvVar"
          },
          "description": "List of environment variables to set in the container. Cannot be updated. +optional"
        },
        "command": {
          "description": "Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell +optional",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "ports": {
          "type": "array",
          "items": {
            "$ref": "ContainerPort"
          },
          "description": "List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated. +optional"
        },
        "args": {
          "type": "array",
          "description": "Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell +optional",
          "items": {
            "type": "string"
          }
        },
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "VolumeMount"
          },
          "description": "Pod volumes to mount into the container's filesystem. Cannot be updated. +optional"
        },
        "securityContext": {
          "$ref": "SecurityContext",
          "description": "Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/ +optional"
        },
        "volumeDevices": {
          "items": {
            "$ref": "VolumeDevice"
          },
          "description": "volumeDevices is the list of block devices to be used by the container. This is an alpha feature and may change in the future. +optional",
          "type": "array"
        }
      },
      "description": "A single application container. This specifies both the container to run, the command to run in the container and the arguments to supply to it. Note that additional arguments may be supplied by the system to the container at runtime."
    },
    "Configuration": {
      "properties": {
        "spec": {
          "description": "Spec holds the desired state of the Configuration (from the client).",
          "$ref": "ConfigurationSpec"
        },
        "kind": {
          "description": "The kind of resource, in this case always \"Configuration\".",
          "type": "string"
        },
        "apiVersion": {
          "description": "The API version for this call such as \"serving.knative.dev/v1alpha1\".",
          "type": "string"
        },
        "status": {
          "description": "Status communicates the observed state of the Configuration (from the controller).",
          "$ref": "ConfigurationStatus"
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Configuration, including name, namespace, labels, and annotations."
        }
      },
      "type": "object",
      "id": "Configuration",
      "description": "Configuration represents the \"floating HEAD\" of a linear history of Revisions, and optionally how the containers those revisions reference are built. Users create new Revisions by updating the Configuration's spec. The \"latest created\" revision's name is available under status, as is the \"latest ready\" revision's name. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#configuration"
    },
    "Policy": {
      "id": "Policy",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte"
        },
        "bindings": {
          "type": "array",
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "items": {
            "$ref": "Binding"
          }
        },
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "type": "array",
          "items": {
            "$ref": "AuditConfig"
          }
        }
      },
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/)."
    },
    "TriggerFilter": {
      "type": "object",
      "properties": {
        "attributes": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Attributes filters events by exact match on event context attributes. Each key in the map is compared with the equivalent key in the event context. An event passes the filter if all values are equal to the specified values. Nested context attributes are not supported as keys. Only string values are supported. Note that this field is optional in knative. In fully managed, 'type' attribute is required due to different broker implementation."
        }
      },
      "id": "TriggerFilter"
    },
    "VolumeDevice": {
      "id": "VolumeDevice",
      "type": "object",
      "properties": {
        "name": {
          "description": "name must match the name of a persistentVolumeClaim in the pod",
          "type": "string"
        },
        "devicePath": {
          "description": "devicePath is the path inside of the container that the device will be mapped to.",
          "type": "string"
        }
      },
      "description": "volumeDevice describes a mapping of a raw block device within a container."
    },
    "ListCloudSchedulerSourcesResponse": {
      "description": "ListCloudSchedulerSourcesResponse is a list of CloudSchedulerSource resources.",
      "type": "object",
      "id": "ListCloudSchedulerSourcesResponse",
      "properties": {
        "items": {
          "description": "List of CloudSchedulerSources.",
          "items": {
            "$ref": "CloudSchedulerSource"
          },
          "type": "array"
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "kind": {
          "description": "The kind of this resource, in this case \"CloudSchedulerSourceList\".",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata associated with this CloudSchedulerSource list.",
          "$ref": "ListMeta"
        },
        "apiVersion": {
          "description": "The API version for this call such as \"events.cloud.google.com/v1alpha1\".",
          "type": "string"
        }
      }
    },
    "ListServicesResponse": {
      "description": "A list of Service resources.",
      "id": "ListServicesResponse",
      "properties": {
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this Service list."
        },
        "unreachable": {
          "type": "array",
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"serving.knative.dev/v1alpha1\"."
        },
        "kind": {
          "description": "The kind of this resource, in this case \"ServiceList\".",
          "type": "string"
        },
        "items": {
          "description": "List of Services.",
          "type": "array",
          "items": {
            "$ref": "Service"
          }
        }
      },
      "type": "object"
    }
  },
  "rootUrl": "https://run.googleapis.com/",
  "documentationLink": "https://cloud.google.com/run/",
  "id": "run:v1alpha1",
  "basePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "revision": "20210122",
  "version_module": true,
  "version": "v1alpha1",
  "fullyEncodeReservedExpansion": true,
  "title": "Cloud Run Admin API",
  "baseUrl": "https://run.googleapis.com/",
  "discoveryVersion": "v1",
  "parameters": {
    "$.xgafv": {
      "location": "query",
      "type": "string",
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "default": "json"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "callback": {
      "location": "query",
      "type": "string",
      "description": "JSONP"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "name": "run"
}
