{
  "servicePath": "",
  "basePath": "",
  "description": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "protocol": "rest",
  "name": "pubsublite",
  "mtlsRootUrl": "https://pubsublite.mtls.googleapis.com/",
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "version": "v1",
  "title": "Pub/Sub Lite API",
  "baseUrl": "https://pubsublite.googleapis.com/",
  "ownerDomain": "google.com",
  "parameters": {
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "callback": {
      "location": "query",
      "description": "JSONP",
      "type": "string"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query"
    }
  },
  "revision": "20200929",
  "canonicalName": "PubsubLite",
  "ownerName": "Google",
  "resources": {
    "topicStats": {
      "resources": {
        "projects": {
          "resources": {
            "locations": {
              "resources": {
                "topics": {
                  "methods": {
                    "computeMessageStats": {
                      "path": "v1/topicStats/{+topic}:computeMessageStats",
                      "parameterOrder": [
                        "topic"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "topic": {
                          "type": "string",
                          "required": true,
                          "location": "path",
                          "description": "Required. The topic for which we should compute message stats.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$"
                        }
                      },
                      "response": {
                        "$ref": "ComputeMessageStatsResponse"
                      },
                      "flatPath": "v1/topicStats/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}:computeMessageStats",
                      "id": "pubsublite.topicStats.projects.locations.topics.computeMessageStats",
                      "httpMethod": "POST",
                      "description": "Compute statistics about a range of messages in a given topic and partition.",
                      "request": {
                        "$ref": "ComputeMessageStatsRequest"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "admin": {
      "resources": {
        "projects": {
          "resources": {
            "locations": {
              "resources": {
                "topics": {
                  "resources": {
                    "subscriptions": {
                      "methods": {
                        "list": {
                          "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}/subscriptions",
                          "parameters": {
                            "pageSize": {
                              "format": "int32",
                              "description": "The maximum number of subscriptions to return. The service may return fewer than this value. If unset or zero, all subscriptions for the given topic will be returned.",
                              "type": "integer",
                              "location": "query"
                            },
                            "name": {
                              "description": "Required. The name of the topic whose subscriptions to list.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                              "location": "path",
                              "type": "string",
                              "required": true
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "A page token, received from a previous `ListTopicSubscriptions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTopicSubscriptions` must match the call that provided the page token."
                            }
                          },
                          "path": "v1/admin/{+name}/subscriptions",
                          "response": {
                            "$ref": "ListTopicSubscriptionsResponse"
                          },
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Lists the subscriptions attached to the specified topic.",
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "pubsublite.admin.projects.locations.topics.subscriptions.list"
                        }
                      }
                    }
                  },
                  "methods": {
                    "patch": {
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "description": "Required. A mask specifying the topic fields to change.",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "location": "path",
                          "description": "The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}",
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}",
                      "httpMethod": "PATCH",
                      "description": "Updates properties of the specified topic.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Topic"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "Topic"
                      },
                      "id": "pubsublite.admin.projects.locations.topics.patch",
                      "path": "v1/admin/{+name}"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Topic"
                      },
                      "id": "pubsublite.admin.projects.locations.topics.get",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns the topic configuration.",
                      "path": "v1/admin/{+name}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "description": "Required. The name of the topic whose configuration to return.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                          "location": "path",
                          "required": true
                        }
                      },
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "DELETE",
                      "description": "Deletes the specified topic.",
                      "id": "pubsublite.admin.projects.locations.topics.delete",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the topic to delete.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "Empty"
                      },
                      "path": "v1/admin/{+name}"
                    },
                    "getPartitions": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "TopicPartitions"
                      },
                      "httpMethod": "GET",
                      "path": "v1/admin/{+name}/partitions",
                      "description": "Returns the partition information for the requested topic.",
                      "id": "pubsublite.admin.projects.locations.topics.getPartitions",
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. The topic whose partition information to return.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/topics/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics/{topicsId}/partitions"
                    },
                    "list": {
                      "description": "Returns the list of topics for the given project.",
                      "id": "pubsublite.admin.projects.locations.topics.list",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics",
                      "response": {
                        "$ref": "ListTopicsResponse"
                      },
                      "path": "v1/admin/{+parent}/topics",
                      "parameters": {
                        "pageSize": {
                          "description": "The maximum number of topics to return. The service may return fewer than this value. If unset or zero, all topics for the parent will be returned.",
                          "format": "int32",
                          "location": "query",
                          "type": "integer"
                        },
                        "parent": {
                          "description": "Required. The parent whose topics are to be listed. Structured like `projects/{project_number}/locations/{location}`.",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+$"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "A page token, received from a previous `ListTopics` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListTopics` must match the call that provided the page token.",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "create": {
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "description": "Required. The parent location in which to create the topic. Structured like `projects/{project_number}/locations/{location}`.",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+$",
                          "location": "path"
                        },
                        "topicId": {
                          "type": "string",
                          "location": "query",
                          "description": "Required. The ID to use for the topic, which will become the final component of the topic's name. This value is structured like: `my-topic-name`."
                        }
                      },
                      "httpMethod": "POST",
                      "response": {
                        "$ref": "Topic"
                      },
                      "path": "v1/admin/{+parent}/topics",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "Topic"
                      },
                      "description": "Creates a new topic.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "pubsublite.admin.projects.locations.topics.create",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/topics"
                    }
                  }
                },
                "subscriptions": {
                  "methods": {
                    "list": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1/admin/{+parent}/subscriptions",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "format": "int32",
                          "description": "The maximum number of subscriptions to return. The service may return fewer than this value. If unset or zero, all subscriptions for the parent will be returned.",
                          "location": "query"
                        },
                        "parent": {
                          "description": "Required. The parent whose subscriptions are to be listed. Structured like `projects/{project_number}/locations/{location}`.",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+$",
                          "location": "path"
                        },
                        "pageToken": {
                          "description": "A page token, received from a previous `ListSubscriptions` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListSubscriptions` must match the call that provided the page token.",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "description": "Returns the list of subscriptions for the given project.",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions",
                      "id": "pubsublite.admin.projects.locations.subscriptions.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "ListSubscriptionsResponse"
                      }
                    },
                    "patch": {
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "description": "Updates properties of the specified subscription.",
                      "id": "pubsublite.admin.projects.locations.subscriptions.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "Subscription"
                      },
                      "parameters": {
                        "name": {
                          "description": "The name of the subscription. Structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}",
                          "type": "string",
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$"
                        },
                        "updateMask": {
                          "location": "query",
                          "description": "Required. A mask specifying the subscription fields to change.",
                          "format": "google-fieldmask",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "Subscription"
                      },
                      "path": "v1/admin/{+name}",
                      "httpMethod": "PATCH"
                    },
                    "create": {
                      "response": {
                        "$ref": "Subscription"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "pubsublite.admin.projects.locations.subscriptions.create",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions",
                      "httpMethod": "POST",
                      "parameters": {
                        "subscriptionId": {
                          "description": "Required. The ID to use for the subscription, which will become the final component of the subscription's name. This value is structured like: `my-sub-name`.",
                          "type": "string",
                          "location": "query"
                        },
                        "parent": {
                          "required": true,
                          "description": "Required. The parent location in which to create the subscription. Structured like `projects/{project_number}/locations/{location}`.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+$",
                          "type": "string"
                        }
                      },
                      "path": "v1/admin/{+parent}/subscriptions",
                      "description": "Creates a new subscription.",
                      "request": {
                        "$ref": "Subscription"
                      }
                    },
                    "get": {
                      "parameters": {
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The name of the subscription whose configuration to return."
                        }
                      },
                      "path": "v1/admin/{+name}",
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "pubsublite.admin.projects.locations.subscriptions.get",
                      "description": "Returns the subscription configuration.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Subscription"
                      }
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1/admin/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "pubsublite.admin.projects.locations.subscriptions.delete",
                      "httpMethod": "DELETE",
                      "response": {
                        "$ref": "Empty"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "Required. The name of the subscription to delete.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$",
                          "location": "path"
                        }
                      },
                      "description": "Deletes the specified subscription.",
                      "path": "v1/admin/{+name}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "cursor": {
      "resources": {
        "projects": {
          "resources": {
            "locations": {
              "resources": {
                "subscriptions": {
                  "resources": {
                    "cursors": {
                      "methods": {
                        "list": {
                          "description": "Returns all committed cursor information for a subscription.",
                          "parameters": {
                            "pageSize": {
                              "format": "int32",
                              "description": "The maximum number of cursors to return. The service may return fewer than this value. If unset or zero, all cursors for the parent will be returned.",
                              "type": "integer",
                              "location": "query"
                            },
                            "parent": {
                              "type": "string",
                              "description": "Required. The subscription for which to retrieve cursors. Structured like `projects/{project_number}/locations/{location}/subscriptions/{subscription_id}`.",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/subscriptions/[^/]+$",
                              "required": true
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "A page token, received from a previous `ListPartitionCursors` call. Provide this to retrieve the subsequent page. When paginating, all other parameters provided to `ListPartitionCursors` must match the call that provided the page token."
                            }
                          },
                          "id": "pubsublite.cursor.projects.locations.subscriptions.cursors.list",
                          "httpMethod": "GET",
                          "path": "v1/cursor/{+parent}/cursors",
                          "response": {
                            "$ref": "ListPartitionCursorsResponse"
                          },
                          "flatPath": "v1/cursor/projects/{projectsId}/locations/{locationsId}/subscriptions/{subscriptionsId}/cursors",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameterOrder": [
                            "parent"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "version_module": true,
  "fullyEncodeReservedExpansion": true,
  "kind": "discovery#restDescription",
  "id": "pubsublite:v1",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "schemas": {
    "PartitionCursor": {
      "properties": {
        "partition": {
          "description": "The partition this is for.",
          "format": "int64",
          "type": "string"
        },
        "cursor": {
          "description": "The value of the cursor.",
          "$ref": "Cursor"
        }
      },
      "type": "object",
      "id": "PartitionCursor",
      "description": "A pair of a Cursor and the partition it is for."
    },
    "Capacity": {
      "description": "The throughput capacity configuration for each partition.",
      "type": "object",
      "properties": {
        "subscribeMibPerSec": {
          "description": "Subscribe throughput capacity per partition in MiB/s. Must be \u003e= 4 and \u003c= 32.",
          "type": "integer",
          "format": "int32"
        },
        "publishMibPerSec": {
          "format": "int32",
          "description": "Publish throughput capacity per partition in MiB/s. Must be \u003e= 4 and \u003c= 16.",
          "type": "integer"
        }
      },
      "id": "Capacity"
    },
    "Subscription": {
      "description": "Metadata about a subscription resource.",
      "properties": {
        "deliveryConfig": {
          "$ref": "DeliveryConfig",
          "description": "The settings for this subscription's message delivery."
        },
        "name": {
          "description": "The name of the subscription. Structured like: projects/{project_number}/locations/{location}/subscriptions/{subscription_id}",
          "type": "string"
        },
        "topic": {
          "description": "The name of the topic this subscription is attached to. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}",
          "type": "string"
        }
      },
      "id": "Subscription",
      "type": "object"
    },
    "DeliveryConfig": {
      "description": "The settings for a subscription's message delivery.",
      "type": "object",
      "id": "DeliveryConfig",
      "properties": {
        "deliveryRequirement": {
          "enumDescriptions": [
            "Default value. This value is unused.",
            "The server does not wait for a published message to be successfully written to storage before delivering it to subscribers.",
            "The server will not deliver a published message to subscribers until the message has been successfully written to storage. This will result in higher end-to-end latency, but consistent delivery."
          ],
          "enum": [
            "DELIVERY_REQUIREMENT_UNSPECIFIED",
            "DELIVER_IMMEDIATELY",
            "DELIVER_AFTER_STORED"
          ],
          "description": "The DeliveryRequirement for this subscription.",
          "type": "string"
        }
      }
    },
    "ListSubscriptionsResponse": {
      "id": "ListSubscriptionsResponse",
      "description": "Response for ListSubscriptions.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results."
        },
        "subscriptions": {
          "items": {
            "$ref": "Subscription"
          },
          "description": "The list of subscriptions in the requested parent. The order of the subscriptions is unspecified.",
          "type": "array"
        }
      },
      "type": "object"
    },
    "Topic": {
      "id": "Topic",
      "description": "Metadata about a topic resource.",
      "type": "object",
      "properties": {
        "retentionConfig": {
          "description": "The settings for this topic's message retention.",
          "$ref": "RetentionConfig"
        },
        "name": {
          "description": "The name of the topic. Structured like: projects/{project_number}/locations/{location}/topics/{topic_id}",
          "type": "string"
        },
        "partitionConfig": {
          "description": "The settings for this topic's partitions.",
          "$ref": "PartitionConfig"
        }
      }
    },
    "TopicPartitions": {
      "description": "Response for GetTopicPartitions.",
      "properties": {
        "partitionCount": {
          "type": "string",
          "format": "int64",
          "description": "The number of partitions in the topic."
        }
      },
      "id": "TopicPartitions",
      "type": "object"
    },
    "ComputeMessageStatsRequest": {
      "id": "ComputeMessageStatsRequest",
      "properties": {
        "endCursor": {
          "$ref": "Cursor",
          "description": "The exclusive end of the range. The range is empty if end_cursor \u003c= start_cursor. Specifying a start_cursor before the first message and an end_cursor after the last message will retrieve all messages."
        },
        "partition": {
          "type": "string",
          "description": "Required. The partition for which we should compute message stats.",
          "format": "int64"
        },
        "startCursor": {
          "description": "The inclusive start of the range.",
          "$ref": "Cursor"
        }
      },
      "description": "Compute statistics about a range of messages in a given topic and partition.",
      "type": "object"
    },
    "ListTopicSubscriptionsResponse": {
      "type": "object",
      "properties": {
        "subscriptions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The names of subscriptions attached to the topic. The order of the subscriptions is unspecified."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results."
        }
      },
      "description": "Response for ListTopicSubscriptions.",
      "id": "ListTopicSubscriptionsResponse"
    },
    "ListTopicsResponse": {
      "description": "Response for ListTopics.",
      "properties": {
        "topics": {
          "description": "The list of topic in the requested parent. The order of the topics is unspecified.",
          "items": {
            "$ref": "Topic"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token that can be sent as `page_token` to retrieve the next page of results. If this field is omitted, there are no more results."
        }
      },
      "id": "ListTopicsResponse",
      "type": "object"
    },
    "ListPartitionCursorsResponse": {
      "id": "ListPartitionCursorsResponse",
      "description": "Response for ListPartitionCursors",
      "type": "object",
      "properties": {
        "partitionCursors": {
          "description": "The partition cursors from this request.",
          "type": "array",
          "items": {
            "$ref": "PartitionCursor"
          }
        },
        "nextPageToken": {
          "description": "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
          "type": "string"
        }
      }
    },
    "Cursor": {
      "id": "Cursor",
      "description": "A cursor that describes the position of a message within a topic partition.",
      "properties": {
        "offset": {
          "type": "string",
          "format": "int64",
          "description": "The offset of a message within a topic partition. Must be greater than or equal 0."
        }
      },
      "type": "object"
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "PartitionConfig": {
      "type": "object",
      "properties": {
        "scale": {
          "description": "DEPRECATED: Use capacity instead which can express a superset of configurations. Every partition in the topic is allocated throughput equivalent to `scale` times the standard partition throughput (4 MiB/s). This is also reflected in the cost of this topic; a topic with `scale` of 2 and count of 10 is charged for 20 partitions. This value must be in the range [1,4].",
          "type": "integer",
          "format": "int32"
        },
        "capacity": {
          "$ref": "Capacity",
          "description": "The capacity configuration."
        },
        "count": {
          "format": "int64",
          "description": "The number of partitions in the topic. Must be at least 1.",
          "type": "string"
        }
      },
      "id": "PartitionConfig",
      "description": "The settings for a topic's partitions."
    },
    "RetentionConfig": {
      "properties": {
        "period": {
          "type": "string",
          "format": "google-duration",
          "description": "How long a published message is retained. If unset, messages will be retained as long as the bytes retained for each partition is below `per_partition_bytes`."
        },
        "perPartitionBytes": {
          "type": "string",
          "format": "int64",
          "description": "The provisioned storage, in bytes, per partition. If the number of bytes stored in any of the topic's partitions grows beyond this value, older messages will be dropped to make room for newer ones, regardless of the value of `period`."
        }
      },
      "id": "RetentionConfig",
      "description": "The settings for a topic's message retention.",
      "type": "object"
    },
    "ComputeMessageStatsResponse": {
      "properties": {
        "messageCount": {
          "format": "int64",
          "type": "string",
          "description": "The count of messages."
        },
        "messageBytes": {
          "format": "int64",
          "description": "The number of quota bytes accounted to these messages.",
          "type": "string"
        },
        "minimumPublishTime": {
          "description": "The minimum publish timestamp across these messages. Note that publish timestamps within a partition are not guaranteed to be non-decreasing. The timestamp will be unset if there are no messages.",
          "type": "string",
          "format": "google-datetime"
        },
        "minimumEventTime": {
          "format": "google-datetime",
          "description": "The minimum event timestamp across these messages. For the purposes of this computation, if a message does not have an event time, we use the publish time. The timestamp will be unset if there are no messages.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Response containing stats for messages in the requested topic and partition.",
      "id": "ComputeMessageStatsResponse"
    }
  },
  "rootUrl": "https://pubsublite.googleapis.com/",
  "documentationLink": "https://cloud.google.com/pubsub/lite/docs"
}
