{
  "ownerDomain": "google.com",
  "resources": {
    "projects": {
      "methods": {
        "setAgent": {
          "path": "v2/{+parent}/agent",
          "parameterOrder": [
            "parent"
          ],
          "id": "dialogflow.projects.setAgent",
          "flatPath": "v2/projects/{projectsId}/agent",
          "response": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          },
          "description": "Creates/updates the specified agent.",
          "parameters": {
            "updateMask": {
              "type": "string",
              "format": "google-fieldmask",
              "description": "Optional. The mask to control which fields get updated.",
              "location": "query"
            },
            "parent": {
              "location": "path",
              "description": "Required. The project of this agent. Format: `projects/`.",
              "required": true,
              "type": "string",
              "pattern": "^projects/[^/]+$"
            }
          },
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/dialogflow"
          ],
          "request": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          }
        },
        "getAgent": {
          "httpMethod": "GET",
          "description": "Retrieves the specified agent.",
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/dialogflow"
          ],
          "parameterOrder": [
            "parent"
          ],
          "response": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          },
          "flatPath": "v2/projects/{projectsId}/agent",
          "id": "dialogflow.projects.getAgent",
          "path": "v2/{+parent}/agent",
          "parameters": {
            "parent": {
              "description": "Required. The project that the agent to fetch is associated with. Format: `projects/`.",
              "pattern": "^projects/[^/]+$",
              "location": "path",
              "required": true,
              "type": "string"
            }
          }
        },
        "deleteAgent": {
          "response": {
            "$ref": "GoogleProtobufEmpty"
          },
          "parameterOrder": [
            "parent"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/cloud-platform",
            "https://www.googleapis.com/auth/dialogflow"
          ],
          "flatPath": "v2/projects/{projectsId}/agent",
          "parameters": {
            "parent": {
              "type": "string",
              "required": true,
              "location": "path",
              "pattern": "^projects/[^/]+$",
              "description": "Required. The project that the agent to delete is associated with. Format: `projects/`."
            }
          },
          "httpMethod": "DELETE",
          "description": "Deletes the specified agent.",
          "id": "dialogflow.projects.deleteAgent",
          "path": "v2/{+parent}/agent"
        }
      },
      "resources": {
        "agent": {
          "methods": {
            "import": {
              "parameterOrder": [
                "parent"
              ],
              "description": "Imports the specified agent from a ZIP file. Uploads new intents and entity types without deleting the existing ones. Intents and entity types with the same name are replaced with the new versions from ImportAgentRequest. After the import, the imported draft agent will be trained automatically (unless disabled in agent settings). However, once the import is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. Operation An operation which tracks when importing is complete. It only tracks when the draft agent is updated not when it is done training.",
              "request": {
                "$ref": "GoogleCloudDialogflowV2ImportAgentRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. The project that the agent to import is associated with. Format: `projects/`.",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$",
                  "required": true
                }
              },
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "id": "dialogflow.projects.agent.import",
              "flatPath": "v2/projects/{projectsId}/agent:import",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "path": "v2/{+parent}/agent:import"
            },
            "search": {
              "id": "dialogflow.projects.agent.search",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "httpMethod": "GET",
              "parameters": {
                "pageToken": {
                  "description": "The next_page_token value returned from a previous list request.",
                  "type": "string",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The project to list agents from. Format: `projects/`.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                  "location": "query"
                }
              },
              "path": "v2/{+parent}/agent:search",
              "flatPath": "v2/projects/{projectsId}/agent:search",
              "parameterOrder": [
                "parent"
              ],
              "description": "Returns the list of agents. Since there is at most one conversational agent per project, this method is useful primarily for listing all agents across projects the caller has access to. One can achieve that with a wildcard project collection id \"-\". Refer to [List Sub-Collections](https://cloud.google.com/apis/design/design_patterns#list_sub-collections).",
              "response": {
                "$ref": "GoogleCloudDialogflowV2SearchAgentsResponse"
              }
            },
            "restore": {
              "description": "Restores the specified agent from a ZIP file. Replaces the current agent version with a new one. All the intents and entity types in the older version are deleted. After the restore, the restored draft agent will be trained automatically (unless disabled in agent settings). However, once the restore is done, training may not be completed yet. Please call TrainAgent and wait for the operation it returns in order to train explicitly. Operation An operation which tracks when restoring is complete. It only tracks when the draft agent is updated not when it is done training.",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "flatPath": "v2/projects/{projectsId}/agent:restore",
              "httpMethod": "POST",
              "request": {
                "$ref": "GoogleCloudDialogflowV2RestoreAgentRequest"
              },
              "id": "dialogflow.projects.agent.restore",
              "parameters": {
                "parent": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. The project that the agent to restore is associated with. Format: `projects/`."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "path": "v2/{+parent}/agent:restore"
            },
            "getFulfillment": {
              "id": "dialogflow.projects.agent.getFulfillment",
              "flatPath": "v2/projects/{projectsId}/agent/fulfillment",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the fulfillment. Format: `projects//agent/fulfillment`.",
                  "location": "path",
                  "pattern": "^projects/[^/]+/agent/fulfillment$"
                }
              },
              "response": {
                "$ref": "GoogleCloudDialogflowV2Fulfillment"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "description": "Retrieves the fulfillment."
            },
            "train": {
              "parameterOrder": [
                "parent"
              ],
              "description": "Trains the specified agent. Operation ",
              "request": {
                "$ref": "GoogleCloudDialogflowV2TrainAgentRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "path": "v2/{+parent}/agent:train",
              "id": "dialogflow.projects.agent.train",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The project that the agent to train is associated with. Format: `projects/`.",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                }
              },
              "flatPath": "v2/projects/{projectsId}/agent:train",
              "httpMethod": "POST"
            },
            "getValidationResult": {
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2ValidationResult"
              },
              "httpMethod": "GET",
              "flatPath": "v2/projects/{projectsId}/agent/validationResult",
              "id": "dialogflow.projects.agent.getValidationResult",
              "path": "v2/{+parent}/agent/validationResult",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "description": "Gets agent validation result. Agent validation is performed during training time and is updated automatically when training is completed.",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The project that the agent is associated with. Format: `projects/`."
                },
                "languageCode": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. The language for which you want a validation result. If not specified, the agent's default language is used. [Many languages](https://cloud.google.com/dialogflow/docs/reference/language) are supported. Note: languages must be enabled in the agent before they can be used."
                }
              }
            },
            "export": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "request": {
                "$ref": "GoogleCloudDialogflowV2ExportAgentRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The project that the agent to export is associated with. Format: `projects/`.",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v2/projects/{projectsId}/agent:export",
              "id": "dialogflow.projects.agent.export",
              "path": "v2/{+parent}/agent:export",
              "description": "Exports the specified agent to a ZIP file. Operation "
            },
            "updateFulfillment": {
              "path": "v2/{+name}",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Required. The mask to control which fields get updated. If the mask is not present, all fields will be updated."
                },
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The unique identifier of the fulfillment. Format: `projects//agent/fulfillment`.",
                  "pattern": "^projects/[^/]+/agent/fulfillment$"
                }
              },
              "httpMethod": "PATCH",
              "flatPath": "v2/projects/{projectsId}/agent/fulfillment",
              "id": "dialogflow.projects.agent.updateFulfillment",
              "request": {
                "$ref": "GoogleCloudDialogflowV2Fulfillment"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "response": {
                "$ref": "GoogleCloudDialogflowV2Fulfillment"
              },
              "description": "Updates the fulfillment."
            }
          },
          "resources": {
            "intents": {
              "methods": {
                "batchUpdate": {
                  "id": "dialogflow.projects.agent.intents.batchUpdate",
                  "path": "v2/{+parent}/intents:batchUpdate",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Updates/Creates multiple intents in the specified agent. Operation ",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchUpdateIntentsRequest"
                  },
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the agent to update or create intents in. Format: `projects//agent`.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/intents:batchUpdate"
                },
                "list": {
                  "flatPath": "v2/projects/{projectsId}/agent/intents",
                  "description": "Returns the list of all intents in the specified agent.",
                  "id": "dialogflow.projects.agent.intents.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListIntentsResponse"
                  },
                  "path": "v2/{+parent}/intents",
                  "httpMethod": "GET",
                  "parameters": {
                    "intentView": {
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ],
                      "description": "Optional. The resource view to apply to the returned intent.",
                      "type": "string",
                      "location": "query",
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ]
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/agent$",
                      "type": "string",
                      "description": "Required. The agent to list all intents from. Format: `projects//agent`.",
                      "location": "path",
                      "required": true
                    },
                    "languageCode": {
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "get": {
                  "httpMethod": "GET",
                  "id": "dialogflow.projects.agent.intents.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Retrieves the specified intent.",
                  "flatPath": "v2/projects/{projectsId}/agent/intents/{intentsId}",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/intents/[^/]+$",
                      "location": "path",
                      "description": "Required. The name of the intent. Format: `projects//agent/intents/`."
                    },
                    "intentView": {
                      "description": "Optional. The resource view to apply to the returned intent.",
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ],
                      "location": "query",
                      "type": "string"
                    },
                    "languageCode": {
                      "type": "string",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "location": "query"
                    }
                  }
                },
                "patch": {
                  "flatPath": "v2/projects/{projectsId}/agent/intents/{intentsId}",
                  "id": "dialogflow.projects.agent.intents.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "description": "Updates the specified intent.",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "path": "v2/{+name}",
                  "parameters": {
                    "languageCode": {
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/intents/[^/]+$",
                      "required": true
                    },
                    "updateMask": {
                      "description": "Optional. The mask to control which fields get updated.",
                      "location": "query",
                      "type": "string",
                      "format": "google-fieldmask"
                    },
                    "intentView": {
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ],
                      "description": "Optional. The resource view to apply to the returned intent.",
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "httpMethod": "PATCH"
                },
                "create": {
                  "flatPath": "v2/projects/{projectsId}/agent/intents",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "id": "dialogflow.projects.agent.intents.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2Intent"
                  },
                  "path": "v2/{+parent}/intents",
                  "description": "Creates an intent in the specified agent.",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The agent to create a intent for. Format: `projects//agent`.",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent$"
                    },
                    "languageCode": {
                      "location": "query",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "type": "string"
                    },
                    "intentView": {
                      "enum": [
                        "INTENT_VIEW_UNSPECIFIED",
                        "INTENT_VIEW_FULL"
                      ],
                      "location": "query",
                      "type": "string",
                      "enumDescriptions": [
                        "Training phrases field is not populated in the response.",
                        "All fields are populated."
                      ],
                      "description": "Optional. The resource view to apply to the returned intent."
                    }
                  }
                },
                "batchDelete": {
                  "description": "Deletes intents in the specified agent. Operation ",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchDeleteIntentsRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the agent to delete all entities types for. Format: `projects//agent`."
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/intents:batchDelete",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "httpMethod": "POST",
                  "id": "dialogflow.projects.agent.intents.batchDelete",
                  "path": "v2/{+parent}/intents:batchDelete"
                },
                "delete": {
                  "path": "v2/{+name}",
                  "httpMethod": "DELETE",
                  "id": "dialogflow.projects.agent.intents.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the intent to delete. If this intent has direct or indirect followup intents, we also delete them. Format: `projects//agent/intents/`.",
                      "pattern": "^projects/[^/]+/agent/intents/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/intents/{intentsId}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "description": "Deletes the specified intent and its direct or indirect followup intents."
                }
              }
            },
            "entityTypes": {
              "resources": {
                "entities": {
                  "methods": {
                    "batchDelete": {
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/entities:batchDelete",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}/entities:batchDelete",
                      "id": "dialogflow.projects.agent.entityTypes.entities.batchDelete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "description": "Deletes entities in the specified entity type. Operation ",
                      "httpMethod": "POST",
                      "parameters": {
                        "parent": {
                          "required": true,
                          "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the entity type to delete entries for. Format: `projects//agent/entityTypes/`.",
                          "type": "string"
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      }
                    },
                    "batchCreate": {
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchCreateEntitiesRequest"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Creates multiple new entities in the specified entity type. Operation ",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                          "description": "Required. The name of the entity type to create entities in. Format: `projects//agent/entityTypes/`.",
                          "location": "path",
                          "required": true
                        }
                      },
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}/entities:batchCreate",
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.agent.entityTypes.entities.batchCreate",
                      "path": "v2/{+parent}/entities:batchCreate"
                    },
                    "batchUpdate": {
                      "response": {
                        "$ref": "GoogleLongrunningOperation"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "id": "dialogflow.projects.agent.entityTypes.entities.batchUpdate",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                          "description": "Required. The name of the entity type to update or create entities in. Format: `projects//agent/entityTypes/`."
                        }
                      },
                      "description": "Updates or creates multiple entities in the specified entity type. This method does not affect entities in the entity type that aren't explicitly specified in the request. Operation ",
                      "httpMethod": "POST",
                      "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}/entities:batchUpdate",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest"
                      },
                      "path": "v2/{+parent}/entities:batchUpdate"
                    }
                  }
                }
              },
              "methods": {
                "delete": {
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "path": "v2/{+name}",
                  "description": "Deletes the specified entity type.",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                      "description": "Required. The name of the entity type to delete. Format: `projects//agent/entityTypes/`.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "DELETE",
                  "id": "dialogflow.projects.agent.entityTypes.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ]
                },
                "batchDelete": {
                  "description": "Deletes entity types in the specified agent. Operation ",
                  "path": "v2/{+parent}/entityTypes:batchDelete",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest"
                  },
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^projects/[^/]+/agent$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The name of the agent to delete all entities types for. Format: `projects//agent`."
                    }
                  },
                  "id": "dialogflow.projects.agent.entityTypes.batchDelete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes:batchDelete",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                },
                "batchUpdate": {
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes:batchUpdate",
                  "path": "v2/{+parent}/entityTypes:batchUpdate",
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the agent to update or create entity types in. Format: `projects//agent`.",
                      "pattern": "^projects/[^/]+/agent$",
                      "location": "path"
                    }
                  },
                  "description": "Updates/Creates multiple entity types in the specified agent. Operation ",
                  "id": "dialogflow.projects.agent.entityTypes.batchUpdate",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "httpMethod": "POST"
                },
                "patch": {
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "id": "dialogflow.projects.agent.entityTypes.patch",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+name}",
                  "description": "Updates the specified entity type.",
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`."
                    },
                    "updateMask": {
                      "format": "google-fieldmask",
                      "type": "string",
                      "description": "Optional. The mask to control which fields get updated.",
                      "location": "query"
                    },
                    "languageCode": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
                    }
                  }
                },
                "get": {
                  "parameters": {
                    "languageCode": {
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "type": "string",
                      "location": "query"
                    },
                    "name": {
                      "pattern": "^projects/[^/]+/agent/entityTypes/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Required. The name of the entity type. Format: `projects//agent/entityTypes/`."
                    }
                  },
                  "description": "Retrieves the specified entity type.",
                  "path": "v2/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.agent.entityTypes.get",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes/{entityTypesId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  }
                },
                "create": {
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$",
                      "description": "Required. The agent to create a entity type for. Format: `projects//agent`.",
                      "required": true
                    },
                    "languageCode": {
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "path": "v2/{+parent}/entityTypes",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2EntityType"
                  },
                  "id": "dialogflow.projects.agent.entityTypes.create",
                  "description": "Creates an entity type in the specified agent.",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes"
                },
                "list": {
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListEntityTypesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The agent to list all entity types from. Format: `projects//agent`.",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent$"
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "type": "string",
                      "location": "query"
                    },
                    "languageCode": {
                      "type": "string",
                      "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
                      "location": "query"
                    }
                  },
                  "id": "dialogflow.projects.agent.entityTypes.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Returns the list of all entity types in the specified agent.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/entityTypes",
                  "flatPath": "v2/projects/{projectsId}/agent/entityTypes",
                  "httpMethod": "GET"
                }
              }
            },
            "environments": {
              "resources": {
                "users": {
                  "resources": {
                    "sessions": {
                      "resources": {
                        "contexts": {
                          "methods": {
                            "delete": {
                              "parameters": {
                                "name": {
                                  "location": "path",
                                  "required": true,
                                  "type": "string",
                                  "description": "Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$"
                                }
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                              "path": "v2/{+name}",
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.delete",
                              "httpMethod": "DELETE",
                              "response": {
                                "$ref": "GoogleProtobufEmpty"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "description": "Deletes the specified context."
                            },
                            "get": {
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.get",
                              "path": "v2/{+name}",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "description": "Retrieves the specified context.",
                              "httpMethod": "GET",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                              "parameters": {
                                "name": {
                                  "required": true,
                                  "location": "path",
                                  "type": "string",
                                  "description": "Required. The name of the context. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$"
                                }
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ]
                            },
                            "patch": {
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts/{contextsId}",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "parameterOrder": [
                                "name"
                              ],
                              "path": "v2/{+name}",
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "parameters": {
                                "name": {
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/contexts/[^/]+$",
                                  "location": "path",
                                  "type": "string",
                                  "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
                                  "required": true
                                },
                                "updateMask": {
                                  "location": "query",
                                  "type": "string",
                                  "description": "Optional. The mask to control which fields get updated.",
                                  "format": "google-fieldmask"
                                }
                              },
                              "httpMethod": "PATCH",
                              "description": "Updates the specified context.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.patch"
                            },
                            "create": {
                              "parameterOrder": [
                                "parent"
                              ],
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "path": "v2/{+parent}/contexts",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2Context"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "parameters": {
                                "parent": {
                                  "type": "string",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                  "location": "path",
                                  "required": true,
                                  "description": "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                                }
                              },
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                              "httpMethod": "POST",
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.create",
                              "description": "Creates a context. If the specified context already exists, overrides the context."
                            },
                            "list": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "description": "Returns the list of all contexts in the specified session.",
                              "parameterOrder": [
                                "parent"
                              ],
                              "path": "v2/{+parent}/contexts",
                              "httpMethod": "GET",
                              "parameters": {
                                "pageToken": {
                                  "type": "string",
                                  "description": "Optional. The next_page_token value returned from a previous list request.",
                                  "location": "query"
                                },
                                "pageSize": {
                                  "type": "integer",
                                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                                  "location": "query",
                                  "format": "int32"
                                },
                                "parent": {
                                  "description": "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "required": true,
                                  "type": "string",
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$"
                                }
                              },
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                              "id": "dialogflow.projects.agent.environments.users.sessions.contexts.list",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2ListContextsResponse"
                              }
                            }
                          }
                        },
                        "entityTypes": {
                          "methods": {
                            "create": {
                              "httpMethod": "POST",
                              "parameterOrder": [
                                "parent"
                              ],
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.create",
                              "parameters": {
                                "parent": {
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                  "description": "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "required": true,
                                  "location": "path",
                                  "type": "string"
                                }
                              },
                              "description": "Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "path": "v2/{+parent}/entityTypes"
                            },
                            "get": {
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.get",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "description": "Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "httpMethod": "GET",
                              "path": "v2/{+name}",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "parameterOrder": [
                                "name"
                              ],
                              "parameters": {
                                "name": {
                                  "required": true,
                                  "type": "string",
                                  "description": "Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                  "location": "path"
                                }
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ]
                            },
                            "patch": {
                              "description": "Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "parameterOrder": [
                                "name"
                              ],
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "httpMethod": "PATCH",
                              "path": "v2/{+name}",
                              "parameters": {
                                "updateMask": {
                                  "type": "string",
                                  "location": "query",
                                  "description": "Optional. The mask to control which fields get updated.",
                                  "format": "google-fieldmask"
                                },
                                "name": {
                                  "type": "string",
                                  "required": true,
                                  "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$",
                                  "location": "path"
                                }
                              },
                              "request": {
                                "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                              },
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.patch"
                            },
                            "delete": {
                              "path": "v2/{+name}",
                              "parameters": {
                                "name": {
                                  "description": "Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                                  "required": true,
                                  "type": "string",
                                  "location": "path",
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+/entityTypes/[^/]+$"
                                }
                              },
                              "description": "Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "parameterOrder": [
                                "name"
                              ],
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                              "response": {
                                "$ref": "GoogleProtobufEmpty"
                              },
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.delete",
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "httpMethod": "DELETE"
                            },
                            "list": {
                              "scopes": [
                                "https://www.googleapis.com/auth/cloud-platform",
                                "https://www.googleapis.com/auth/dialogflow"
                              ],
                              "path": "v2/{+parent}/entityTypes",
                              "id": "dialogflow.projects.agent.environments.users.sessions.entityTypes.list",
                              "response": {
                                "$ref": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
                              },
                              "parameterOrder": [
                                "parent"
                              ],
                              "parameters": {
                                "pageToken": {
                                  "location": "query",
                                  "type": "string",
                                  "description": "Optional. The next_page_token value returned from a previous list request."
                                },
                                "pageSize": {
                                  "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                                  "type": "integer",
                                  "format": "int32",
                                  "location": "query"
                                },
                                "parent": {
                                  "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                                  "required": true,
                                  "type": "string",
                                  "location": "path",
                                  "description": "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                                }
                              },
                              "description": "Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                              "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/entityTypes",
                              "httpMethod": "GET"
                            }
                          }
                        }
                      },
                      "methods": {
                        "detectIntent": {
                          "parameterOrder": [
                            "session"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "path": "v2/{+session}:detectIntent",
                          "response": {
                            "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
                          },
                          "request": {
                            "$ref": "GoogleCloudDialogflowV2DetectIntentRequest"
                          },
                          "httpMethod": "POST",
                          "id": "dialogflow.projects.agent.environments.users.sessions.detectIntent",
                          "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}:detectIntent",
                          "parameters": {
                            "session": {
                              "required": true,
                              "description": "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                              "type": "string",
                              "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                              "location": "path"
                            }
                          },
                          "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions)."
                        },
                        "deleteContexts": {
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/agent/environments/[^/]+/users/[^/]+/sessions/[^/]+$",
                              "required": true,
                              "type": "string",
                              "description": "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                              "location": "path"
                            }
                          },
                          "httpMethod": "DELETE",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "flatPath": "v2/projects/{projectsId}/agent/environments/{environmentsId}/users/{usersId}/sessions/{sessionsId}/contexts",
                          "path": "v2/{+parent}/contexts",
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Deletes all active contexts in the specified session.",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/dialogflow"
                          ],
                          "id": "dialogflow.projects.agent.environments.users.sessions.deleteContexts"
                        }
                      }
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/environments",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. The next_page_token value returned from a previous list request.",
                      "location": "query"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. The agent to list all environments from. Format: `projects//agent`.",
                      "pattern": "^projects/[^/]+/agent$"
                    }
                  },
                  "description": "Returns the list of all non-draft environments of the specified agent.",
                  "path": "v2/{+parent}/environments",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2ListEnvironmentsResponse"
                  },
                  "id": "dialogflow.projects.agent.environments.list"
                }
              }
            },
            "sessions": {
              "methods": {
                "detectIntent": {
                  "path": "v2/{+session}:detectIntent",
                  "id": "dialogflow.projects.agent.sessions.detectIntent",
                  "parameterOrder": [
                    "session"
                  ],
                  "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}:detectIntent",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDialogflowV2DetectIntentResponse"
                  },
                  "parameters": {
                    "session": {
                      "required": true,
                      "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                      "description": "Required. The name of the session this query is sent to. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we are using \"-\". It's up to the API caller to choose an appropriate `Session ID` and `User Id`. They can be a random number or some type of user and session identifiers (preferably hashed). The length of the `Session ID` and `User ID` must not exceed 36 characters. For more information, see the [API interactions guide](https://cloud.google.com/dialogflow/docs/api-overview). Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions).",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "GoogleCloudDialogflowV2DetectIntentRequest"
                  },
                  "httpMethod": "POST",
                  "description": "Processes a natural language query and returns structured, actionable data as a result. This method is not idempotent, because it may cause contexts and session entity types to be updated, which in turn might affect results of future queries. Note: Always use agent versions for production traffic. See [Versions and environments](https://cloud.google.com/dialogflow/es/docs/agents-versions)."
                },
                "deleteContexts": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "path": "v2/{+parent}/contexts",
                  "httpMethod": "DELETE",
                  "description": "Deletes all active contexts in the specified session.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The name of the session to delete all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                      "required": true
                    }
                  },
                  "id": "dialogflow.projects.agent.sessions.deleteContexts",
                  "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts"
                }
              },
              "resources": {
                "contexts": {
                  "methods": {
                    "delete": {
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the context to delete. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                          "location": "path"
                        }
                      },
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "id": "dialogflow.projects.agent.sessions.contexts.delete",
                      "description": "Deletes the specified context.",
                      "httpMethod": "DELETE",
                      "path": "v2/{+name}"
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts",
                      "httpMethod": "POST",
                      "id": "dialogflow.projects.agent.sessions.contexts.create",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "description": "Creates a context. If the specified context already exists, overrides the context.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v2/{+parent}/contexts",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "description": "Required. The session to create a context for. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$"
                        }
                      }
                    },
                    "list": {
                      "id": "dialogflow.projects.agent.sessions.contexts.list",
                      "description": "Returns the list of all contexts in the specified session.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListContextsResponse"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts",
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                          "description": "Required. The session to list all contexts from. Format: `projects//agent/sessions/` or `projects//agent/environments//users//sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user."
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "format": "int32",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000."
                        },
                        "pageToken": {
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "type": "string",
                          "location": "query"
                        }
                      },
                      "path": "v2/{+parent}/contexts"
                    },
                    "patch": {
                      "parameters": {
                        "updateMask": {
                          "format": "google-fieldmask",
                          "type": "string",
                          "description": "Optional. The mask to control which fields get updated.",
                          "location": "query"
                        },
                        "name": {
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$",
                          "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`"
                        }
                      },
                      "description": "Updates the specified context.",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "dialogflow.projects.agent.sessions.contexts.patch",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                      "httpMethod": "PATCH"
                    },
                    "get": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2Context"
                      },
                      "description": "Retrieves the specified context.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/contexts/{contextsId}",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "type": "string",
                          "required": true,
                          "description": "Required. The name of the context. Format: `projects//agent/sessions//contexts/` or `projects//agent/environments//users//sessions//contexts/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "location": "path",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/contexts/[^/]+$"
                        }
                      },
                      "path": "v2/{+name}",
                      "id": "dialogflow.projects.agent.sessions.contexts.get",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                },
                "entityTypes": {
                  "methods": {
                    "list": {
                      "id": "dialogflow.projects.agent.sessions.entityTypes.list",
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse"
                      },
                      "path": "v2/{+parent}/entityTypes",
                      "description": "Returns the list of all session entity types in the specified session. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. The next_page_token value returned from a previous list request.",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "location": "path",
                          "description": "Required. The session to list all session entity types from. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$"
                        },
                        "pageSize": {
                          "type": "integer",
                          "description": "Optional. The maximum number of items to return in a single page. By default 100 and at most 1000.",
                          "format": "int32",
                          "location": "query"
                        }
                      },
                      "parameterOrder": [
                        "parent"
                      ]
                    },
                    "create": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "id": "dialogflow.projects.agent.sessions.entityTypes.create",
                      "parameterOrder": [
                        "parent"
                      ],
                      "parameters": {
                        "parent": {
                          "location": "path",
                          "type": "string",
                          "description": "Required. The session to create a session entity type for. Format: `projects//agent/sessions/` or `projects//agent/environments//users// sessions/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+$",
                          "required": true
                        }
                      },
                      "path": "v2/{+parent}/entityTypes",
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes",
                      "httpMethod": "POST",
                      "description": "Creates a session entity type. If the specified session entity type already exists, overrides the session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration."
                    },
                    "get": {
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "id": "dialogflow.projects.agent.sessions.entityTypes.get",
                      "description": "Retrieves the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "description": "Required. The name of the session entity type. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}"
                    },
                    "delete": {
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "id": "dialogflow.projects.agent.sessions.entityTypes.delete",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "path": "v2/{+name}",
                      "description": "Deletes the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration.",
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "description": "Required. The name of the entity type to delete. Format: `projects//agent/sessions//entityTypes/` or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user.",
                          "required": true
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ]
                    },
                    "patch": {
                      "response": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "path": "v2/{+name}",
                      "httpMethod": "PATCH",
                      "id": "dialogflow.projects.agent.sessions.entityTypes.patch",
                      "parameters": {
                        "name": {
                          "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented.",
                          "required": true,
                          "pattern": "^projects/[^/]+/agent/sessions/[^/]+/entityTypes/[^/]+$",
                          "type": "string",
                          "location": "path"
                        },
                        "updateMask": {
                          "location": "query",
                          "type": "string",
                          "format": "google-fieldmask",
                          "description": "Optional. The mask to control which fields get updated."
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/dialogflow"
                      ],
                      "flatPath": "v2/projects/{projectsId}/agent/sessions/{sessionsId}/entityTypes/{entityTypesId}",
                      "parameterOrder": [
                        "name"
                      ],
                      "request": {
                        "$ref": "GoogleCloudDialogflowV2SessionEntityType"
                      },
                      "description": "Updates the specified session entity type. This method doesn't work with Google Assistant integration. Contact Dialogflow support if you need to use session entities with Google Assistant integration."
                    }
                  }
                }
              }
            }
          }
        },
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "cancel": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "description": "The name of the operation resource to be cancelled.",
                      "location": "path"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel",
                  "path": "v2/{+name}:cancel",
                  "id": "dialogflow.projects.locations.operations.cancel"
                },
                "get": {
                  "parameters": {
                    "name": {
                      "location": "path",
                      "description": "The name of the operation resource.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$"
                    }
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "httpMethod": "GET",
                  "path": "v2/{+name}",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.operations.get",
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}"
                },
                "list": {
                  "path": "v2/{+name}/operations",
                  "response": {
                    "$ref": "GoogleLongrunningListOperationsResponse"
                  },
                  "parameters": {
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "description": "The standard list page size.",
                      "type": "integer"
                    },
                    "filter": {
                      "description": "The standard list filter.",
                      "type": "string",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list page token."
                    },
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation's parent resource.",
                      "location": "path"
                    }
                  },
                  "flatPath": "v2/projects/{projectsId}/locations/{locationsId}/operations",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/dialogflow"
                  ],
                  "id": "dialogflow.projects.locations.operations.list",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            }
          }
        },
        "operations": {
          "methods": {
            "list": {
              "path": "v2/{+name}/operations",
              "httpMethod": "GET",
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v2/projects/{projectsId}/operations",
              "id": "dialogflow.projects.operations.list",
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "The standard list page token."
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "The name of the operation's parent resource."
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                }
              }
            },
            "cancel": {
              "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the operation resource to be cancelled.",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/operations/[^/]+$"
                }
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "id": "dialogflow.projects.operations.cancel",
              "flatPath": "v2/projects/{projectsId}/operations/{operationsId}:cancel",
              "path": "v2/{+name}:cancel",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              }
            },
            "get": {
              "flatPath": "v2/projects/{projectsId}/operations/{operationsId}",
              "httpMethod": "GET",
              "id": "dialogflow.projects.operations.get",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "parameters": {
                "name": {
                  "description": "The name of the operation resource.",
                  "required": true,
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "type": "string",
                  "location": "path"
                }
              },
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "path": "v2/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/dialogflow"
              ],
              "parameterOrder": [
                "name"
              ]
            }
          }
        }
      }
    }
  },
  "rootUrl": "https://dialogflow.googleapis.com/",
  "version": "v2",
  "name": "dialogflow",
  "protocol": "rest",
  "id": "dialogflow:v2",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "Dialogflow",
  "version_module": true,
  "servicePath": "",
  "documentationLink": "https://cloud.google.com/dialogflow/",
  "ownerName": "Google",
  "mtlsRootUrl": "https://dialogflow.mtls.googleapis.com/",
  "description": "Builds conversational interfaces (for example, chatbots, and voice-powered apps and devices).",
  "schemas": {
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton": {
      "description": "The button object that appears at the bottom of a card.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton",
      "properties": {
        "title": {
          "type": "string",
          "description": "Required. The title of the button."
        },
        "openUriAction": {
          "description": "Required. Action to take when a user taps on the button.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue": {
      "description": "Represents a value for an intent parameter.",
      "properties": {
        "resolvedValue": {
          "type": "any",
          "description": "Always present. Structured value for the parameter extracted from user utterance."
        },
        "originalValue": {
          "description": "Always present. Original text value extracted from user utterance.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue"
    },
    "GoogleCloudDialogflowV2ExportAgentResponse": {
      "type": "object",
      "description": "The response message for Agents.ExportAgent.",
      "id": "GoogleCloudDialogflowV2ExportAgentResponse",
      "properties": {
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.",
          "type": "string"
        },
        "agentContent": {
          "description": "Zip compressed raw byte content for agent.",
          "format": "byte",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageText": {
      "properties": {
        "allowPlaybackInterruption": {
          "readOnly": true,
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean"
        },
        "text": {
          "items": {
            "type": "string"
          },
          "description": "Required. A collection of text responses.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageText",
      "description": "The text response message.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCardButton": {
      "description": "The button object that appears at the bottom of a card.",
      "properties": {
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction",
          "description": "Required. Action to take when a user taps on the button."
        },
        "title": {
          "type": "string",
          "description": "Required. The title of the button."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCardButton",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText": {
      "type": "object",
      "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
      "properties": {
        "ssml": {
          "description": "The SSML text to be synthesized. For more information, see [SSML](/speech/text-to-speech/docs/ssml).",
          "type": "string"
        },
        "text": {
          "description": "The raw text to be synthesized.",
          "type": "string"
        },
        "allowPlaybackInterruption": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request."
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText"
    },
    "GoogleCloudDialogflowV2TrainAgentRequest": {
      "description": "The request message for Agents.TrainAgent.",
      "properties": {},
      "type": "object",
      "id": "GoogleCloudDialogflowV2TrainAgentRequest"
    },
    "GoogleCloudDialogflowV2DetectIntentRequest": {
      "description": "The request to detect user's intent.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2DetectIntentRequest",
      "properties": {
        "outputAudioConfigMask": {
          "type": "string",
          "description": "Mask for output_audio_config indicating which settings in this request-level config should override speech synthesizer settings defined at agent-level. If unspecified or empty, output_audio_config replaces the agent-level config in its entirety.",
          "format": "google-fieldmask"
        },
        "queryInput": {
          "$ref": "GoogleCloudDialogflowV2QueryInput",
          "description": "Required. The input specification. It can be set to: 1. an audio config which instructs the speech recognizer how to process the speech audio, 2. a conversational query in the form of text, or 3. an event that specifies which intent to trigger."
        },
        "queryParams": {
          "$ref": "GoogleCloudDialogflowV2QueryParameters",
          "description": "The parameters of this query."
        },
        "outputAudioConfig": {
          "$ref": "GoogleCloudDialogflowV2OutputAudioConfig",
          "description": "Instructs the speech synthesizer how to generate the output audio. If this field is not set and agent-level speech synthesizer is not configured, no output audio is generated."
        },
        "inputAudio": {
          "type": "string",
          "description": "The natural language speech audio to be processed. This field should be populated iff `query_input` is set to an input audio config. A single request can contain up to 1 minute of speech audio data.",
          "format": "byte"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow": {
      "properties": {
        "cells": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell"
          },
          "type": "array",
          "description": "Optional. List of cells that make up this row."
        },
        "dividerAfter": {
          "description": "Optional. Whether to add a visual divider after this row.",
          "type": "boolean"
        }
      },
      "description": "Row of TableCard.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow"
    },
    "GoogleCloudDialogflowV2beta1WebhookRequest": {
      "type": "object",
      "properties": {
        "queryResult": {
          "description": "The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.",
          "$ref": "GoogleCloudDialogflowV2beta1QueryResult"
        },
        "alternativeQueryResults": {
          "description": "Alternative query results from KnowledgeService.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1QueryResult"
          },
          "type": "array"
        },
        "originalDetectIntentRequest": {
          "$ref": "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest",
          "description": "Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call."
        },
        "session": {
          "type": "string",
          "description": "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Supported formats: - `projects//agent/sessions/, - `projects//locations//agent/sessions/`, - `projects//agent/environments//users//sessions/`, - `projects//locations//agent/environments//users//sessions/`,"
        },
        "responseId": {
          "description": "The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1WebhookRequest",
      "description": "The request message for a webhook call."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect": {
      "type": "object",
      "description": "The card for presenting a carousel of options to select from.",
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem"
          },
          "description": "Required. Carousel items."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect"
    },
    "GoogleCloudDialogflowV2beta1SentimentAnalysisResult": {
      "id": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult",
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
      "type": "object",
      "properties": {
        "queryTextSentiment": {
          "description": "The sentiment analysis result for `query_text`.",
          "$ref": "GoogleCloudDialogflowV2beta1Sentiment"
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageQuickReplies": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageQuickReplies",
      "description": "The quick replies response message.",
      "properties": {
        "quickReplies": {
          "type": "array",
          "description": "Optional. The collection of quick replies.",
          "items": {
            "type": "string"
          }
        },
        "title": {
          "type": "string",
          "description": "Optional. The title of the collection of quick replies."
        }
      }
    },
    "GoogleCloudDialogflowV2SessionEntityType": {
      "properties": {
        "entityOverrideMode": {
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition.",
          "type": "string",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ]
        },
        "entities": {
          "description": "Required. The collection of entities associated with this session entity type.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          }
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of this session entity type. Format: `projects//agent/sessions//entityTypes/`, or `projects//agent/environments//users//sessions//entityTypes/`. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented."
        }
      },
      "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).",
      "id": "GoogleCloudDialogflowV2SessionEntityType",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia": {
      "properties": {
        "height": {
          "type": "string",
          "description": "Required for cards with vertical orientation. The height of the media within a rich card with a vertical layout. For a standalone card with horizontal layout, height is not customizable, and this field is ignored.",
          "enum": [
            "HEIGHT_UNSPECIFIED",
            "SHORT",
            "MEDIUM",
            "TALL"
          ],
          "enumDescriptions": [
            "Not specified.",
            "112 DP.",
            "168 DP.",
            "264 DP. Not available for rich card carousels when the card width is set to small."
          ]
        },
        "thumbnailUri": {
          "description": "Optional. Publicly reachable URI of the thumbnail.If you don't provide a thumbnail URI, the RBM platform displays a blank placeholder thumbnail until the user's device downloads the file. Depending on the user's setting, the file may not download automatically and may require the user to tap a download button.",
          "type": "string"
        },
        "fileUri": {
          "description": "Required. Publicly reachable URI of the file. The RBM platform determines the MIME type of the file from the content-type field in the HTTP headers when the platform fetches the file. The content-type field must be present and accurate in the HTTP response from the URL.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia",
      "description": "Rich Business Messaging (RBM) Media displayed in Cards The following media-types are currently supported: Image Types * image/jpeg * image/jpg' * image/gif * image/png Video Types * video/h263 * video/m4v * video/mp4 * video/mpeg * video/mpeg4 * video/webm"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse",
      "description": "Represents a fulfillment response to the user.",
      "properties": {
        "mergeBehavior": {
          "type": "string",
          "description": "Merge behavior for `messages`.",
          "enumDescriptions": [
            "Not specified. `APPEND` will be used.",
            "`messages` will be appended to the list of messages waiting to be sent to the user.",
            "`messages` will replace the list of messages waiting to be sent to the user."
          ],
          "enum": [
            "MERGE_BEHAVIOR_UNSPECIFIED",
            "APPEND",
            "REPLACE"
          ]
        },
        "messages": {
          "description": "The list of rich message responses to present to the user.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          }
        }
      }
    },
    "GoogleCloudDialogflowV2BatchCreateEntitiesRequest": {
      "id": "GoogleCloudDialogflowV2BatchCreateEntitiesRequest",
      "properties": {
        "entities": {
          "description": "Required. The entities to create.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          },
          "type": "array"
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
        }
      },
      "description": "The request message for EntityTypes.BatchCreateEntities.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageSuggestion": {
      "id": "GoogleCloudDialogflowV2IntentMessageSuggestion",
      "properties": {
        "title": {
          "type": "string",
          "description": "Required. The text shown the in the suggestion chip."
        }
      },
      "description": "The suggestion chip message that the user can tap to quickly post a reply to the conversation.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff": {
      "description": "Indicates that the conversation should be handed off to a live agent. Dialogflow only uses this to determine which conversations were handed off to a human agent for measurement purposes. What else to do with this signal is up to you and your handoff procedures. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates something went extremely wrong in the conversation. * In a webhook response when you determine that the customer issue can only be handled by a human.",
      "type": "object",
      "properties": {
        "metadata": {
          "type": "object",
          "description": "Custom metadata for your handoff procedure. Dialogflow doesn't impose any structure on this.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial",
      "description": "Opens the user's default dialer app with the specified phone number but does not dial automatically.",
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Required. The phone number to fill in the default dialer app. This field should be in [E.164](https://en.wikipedia.org/wiki/E.164) format. An example of a correctly formatted phone number: +15556767888."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1QueryResult": {
      "type": "object",
      "description": "Represents the result of conversational query or event processing.",
      "properties": {
        "allRequiredParamsPresent": {
          "description": "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters.",
          "type": "boolean"
        },
        "intent": {
          "description": "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`.",
          "$ref": "GoogleCloudDialogflowV2beta1Intent"
        },
        "parameters": {
          "description": "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "fulfillmentText": {
          "description": "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.",
          "type": "string"
        },
        "diagnosticInfo": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors"
        },
        "outputContexts": {
          "description": "The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          }
        },
        "sentimentAnalysisResult": {
          "description": "The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request.",
          "$ref": "GoogleCloudDialogflowV2beta1SentimentAnalysisResult"
        },
        "knowledgeAnswers": {
          "$ref": "GoogleCloudDialogflowV2beta1KnowledgeAnswers",
          "description": "The result from Knowledge Connector (if any), ordered by decreasing `KnowledgeAnswers.match_confidence`."
        },
        "webhookPayload": {
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "queryText": {
          "type": "string",
          "description": "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
        },
        "fulfillmentMessages": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          },
          "description": "The collection of rich messages to present to the user.",
          "type": "array"
        },
        "webhookSource": {
          "type": "string",
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response."
        },
        "speechRecognitionConfidence": {
          "format": "float",
          "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.",
          "type": "number"
        },
        "languageCode": {
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes.",
          "type": "string"
        },
        "intentDetectionConfidence": {
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list.",
          "format": "float",
          "type": "number"
        },
        "action": {
          "description": "The action name from the matched intent.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1QueryResult"
    },
    "GoogleCloudDialogflowV2beta1Intent": {
      "id": "GoogleCloudDialogflowV2beta1Intent",
      "type": "object",
      "description": "An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The name of this intent."
        },
        "isFallback": {
          "type": "boolean",
          "description": "Optional. Indicates whether this is a fallback intent."
        },
        "parentFollowupIntentName": {
          "description": "Optional. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "parameters": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentParameter"
          },
          "description": "Optional. The collection of parameters associated with the intent.",
          "type": "array"
        },
        "trainingPhrases": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentTrainingPhrase"
          },
          "type": "array",
          "description": "Optional. The collection of examples that the agent is trained on."
        },
        "endInteraction": {
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.",
          "type": "boolean"
        },
        "defaultResponsePlatforms": {
          "description": "Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
          "type": "array",
          "items": {
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "FACEBOOK",
              "SLACK",
              "TELEGRAM",
              "KIK",
              "SKYPE",
              "LINE",
              "VIBER",
              "ACTIONS_ON_GOOGLE",
              "TELEPHONY",
              "GOOGLE_HANGOUTS"
            ],
            "type": "string",
            "enumDescriptions": [
              "Not specified.",
              "Facebook.",
              "Slack.",
              "Telegram.",
              "Kik.",
              "Skype.",
              "Line.",
              "Viber.",
              "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
              "Telephony Gateway.",
              "Google Hangouts."
            ]
          }
        },
        "mlEnabled": {
          "type": "boolean",
          "description": "Optional. Indicates whether Machine Learning is enabled for the intent. Note: If `ml_enabled` setting is set to false, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off. DEPRECATED! Please use `ml_disabled` field instead. NOTE: If both `ml_enabled` and `ml_disabled` are either not set or false, then the default value is determined as follows: - Before April 15th, 2018 the default is: ml_enabled = false / ml_disabled = true. - After April 15th, 2018 the default is: ml_enabled = true / ml_disabled = false."
        },
        "priority": {
          "type": "integer",
          "description": "Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "format": "int32"
        },
        "mlDisabled": {
          "description": "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.",
          "type": "boolean"
        },
        "events": {
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters.",
          "type": "array"
        },
        "action": {
          "type": "string",
          "description": "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
        },
        "messages": {
          "description": "Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          },
          "type": "array"
        },
        "webhookState": {
          "type": "string",
          "enum": [
            "WEBHOOK_STATE_UNSPECIFIED",
            "WEBHOOK_STATE_ENABLED",
            "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
          ],
          "enumDescriptions": [
            "Webhook is disabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent. Also, each slot filling prompt is forwarded to the webhook."
          ],
          "description": "Optional. Indicates whether webhooks are enabled for the intent."
        },
        "outputContexts": {
          "description": "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          },
          "type": "array"
        },
        "followupIntentInfo": {
          "readOnly": true,
          "type": "array",
          "description": "Output only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo"
          }
        },
        "resetContexts": {
          "type": "boolean",
          "description": "Optional. Indicates whether to delete all contexts in the current session when this intent is matched."
        },
        "inputContextNames": {
          "description": "Optional. The list of context names required for this intent to be triggered. Formats: - `projects//agent/sessions/-/contexts/` - `projects//locations//agent/sessions/-/contexts/`",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "name": {
          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Supported formats: - `projects//agent/intents/` - `projects//locations//agent/intents/`",
          "type": "string"
        },
        "rootFollowupIntentName": {
          "description": "Output only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. Format: `projects//agent/intents/`.",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "GoogleCloudDialogflowV2IntentBatch": {
      "properties": {
        "intents": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          },
          "description": "A collection of intents.",
          "type": "array"
        }
      },
      "description": "This message is a wrapper around a collection of intents.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentBatch"
    },
    "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest": {
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
        },
        "entityTypeBatchInline": {
          "$ref": "GoogleCloudDialogflowV2EntityTypeBatch",
          "description": "The collection of entity types to update or create."
        },
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "Optional. The mask to control which fields get updated."
        },
        "entityTypeBatchUri": {
          "description": "The URI to a Google Cloud Storage file containing entity types to update or create. The file format can either be a serialized proto (of EntityBatch type) or a JSON object. Note: The URI must start with \"gs://\".",
          "type": "string"
        }
      },
      "description": "The request message for EntityTypes.BatchUpdateEntityTypes.",
      "id": "GoogleCloudDialogflowV2BatchUpdateEntityTypesRequest"
    },
    "GoogleCloudDialogflowV2beta1WebhookResponse": {
      "id": "GoogleCloudDialogflowV2beta1WebhookResponse",
      "description": "The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `\"\"` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json).",
      "properties": {
        "sessionEntityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1SessionEntityType"
          },
          "type": "array",
          "description": "Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods."
        },
        "outputContexts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Context"
          },
          "description": "Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller."
        },
        "fulfillmentMessages": {
          "description": "Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessage"
          }
        },
        "source": {
          "description": "Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.",
          "type": "string"
        },
        "endInteraction": {
          "description": "Optional. Indicates that this intent ends an interaction. Some integrations (e.g., Actions on Google or Dialogflow phone gateway) use this information to close interaction with an end user. Default is false.",
          "type": "boolean"
        },
        "payload": {
          "description": "Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "followupEventInput": {
          "description": "Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.",
          "$ref": "GoogleCloudDialogflowV2beta1EventInput"
        },
        "fulfillmentText": {
          "type": "string",
          "description": "Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse": {
      "description": "The response message for EntityTypes.BatchUpdateEntityTypes.",
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "description": "The collection of updated or created entity types.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityType"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1BatchUpdateEntityTypesResponse"
    },
    "GoogleCloudDialogflowV2BatchDeleteIntentsRequest": {
      "properties": {
        "intents": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          },
          "type": "array",
          "description": "Required. The collection of intents to delete. Only intent `name` must be filled in."
        }
      },
      "description": "The request message for Intents.BatchDeleteIntents.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2BatchDeleteIntentsRequest"
    },
    "GoogleCloudDialogflowV2beta1EntityType": {
      "description": "Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview).",
      "properties": {
        "entities": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
          },
          "description": "Optional. The collection of entity entries associated with the entity type."
        },
        "autoExpansionMode": {
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ],
          "type": "string",
          "description": "Optional. Indicates whether the entity type can be automatically expanded.",
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ]
        },
        "kind": {
          "type": "string",
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ],
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a reference value.",
            "List entity types contain a set of entries that do not map to reference values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "description": "Required. Indicates the kind of entity type."
        },
        "displayName": {
          "type": "string",
          "description": "Required. The name of the entity type."
        },
        "enableFuzzyExtraction": {
          "type": "boolean",
          "description": "Optional. Enables fuzzy entity extraction during classification."
        },
        "name": {
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Supported formats: - `projects//agent/entityTypes/` - `projects//locations//agent/entityTypes/`",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1EntityType"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageImage": {
      "description": "The image response message.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageImage",
      "properties": {
        "imageUri": {
          "description": "Optional. The public URI to an image file.",
          "type": "string"
        },
        "accessibilityText": {
          "type": "string",
          "description": "A text description of the image to be used for accessibility, e.g., screen readers. Required if image_uri is set for CarouselSelect."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentParameter": {
      "id": "GoogleCloudDialogflowV2IntentParameter",
      "type": "object",
      "description": "Represents intent parameters.",
      "properties": {
        "value": {
          "description": "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.",
          "type": "string"
        },
        "entityTypeDisplayName": {
          "type": "string",
          "description": "Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided."
        },
        "prompts": {
          "description": "Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "isList": {
          "description": "Optional. Indicates whether the parameter represents a list of values.",
          "type": "boolean"
        },
        "mandatory": {
          "type": "boolean",
          "description": "Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value."
        },
        "defaultValue": {
          "type": "string",
          "description": "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`."
        },
        "name": {
          "description": "The unique identifier of this parameter.",
          "type": "string"
        },
        "displayName": {
          "description": "Required. The name of the parameter.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2ExportAgentRequest": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2ExportAgentRequest",
      "description": "The request message for Agents.ExportAgent.",
      "properties": {
        "agentUri": {
          "type": "string",
          "description": "Required. The [Google Cloud Storage](https://cloud.google.com/storage/docs/) URI to export the agent to. The format of this URI must be `gs:///`. If left unspecified, the serialized agent is returned inline."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageSimpleResponses": {
      "type": "object",
      "properties": {
        "simpleResponses": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageSimpleResponse"
          },
          "description": "Required. The list of simple responses.",
          "type": "array"
        }
      },
      "description": "The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.",
      "id": "GoogleCloudDialogflowV2IntentMessageSimpleResponses"
    },
    "GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse": {
      "properties": {
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          },
          "type": "array",
          "description": "The collection of updated or created entity types."
        }
      },
      "description": "The response message for EntityTypes.BatchUpdateEntityTypes.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2BatchUpdateEntityTypesResponse"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction": {
      "description": "Rich Business Messaging (RBM) suggested client-side action that the user can choose from the card.",
      "type": "object",
      "properties": {
        "shareLocation": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation",
          "description": "Suggested client side action: Share user location"
        },
        "dial": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionDial",
          "description": "Suggested client side action: Dial a phone number"
        },
        "openUrl": {
          "description": "Suggested client side action: Open a URI on device",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri"
        },
        "text": {
          "description": "Text to display alongside the action.",
          "type": "string"
        },
        "postbackData": {
          "type": "string",
          "description": "Opaque payload that the Dialogflow receives in a user event when the user taps the suggested action. This data will be also forwarded to webhook to allow performing custom business logic."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction"
    },
    "GoogleCloudDialogflowV2IntentMessageTableCardRow": {
      "description": "Row of TableCard.",
      "type": "object",
      "properties": {
        "cells": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageTableCardCell"
          },
          "description": "Optional. List of cells that make up this row.",
          "type": "array"
        },
        "dividerAfter": {
          "type": "boolean",
          "description": "Optional. Whether to add a visual divider after this row."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageTableCardRow"
    },
    "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart": {
      "properties": {
        "entityType": {
          "type": "string",
          "description": "Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase."
        },
        "alias": {
          "type": "string",
          "description": "Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase."
        },
        "userDefined": {
          "description": "Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true.",
          "type": "boolean"
        },
        "text": {
          "description": "Required. The text for this part.",
          "type": "string"
        }
      },
      "description": "Represents a part of a training phrase.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart"
    },
    "GoogleCloudDialogflowV2BatchUpdateIntentsRequest": {
      "properties": {
        "updateMask": {
          "format": "google-fieldmask",
          "description": "Optional. The mask to control which fields get updated.",
          "type": "string"
        },
        "intentView": {
          "description": "Optional. The resource view to apply to the returned intent.",
          "enumDescriptions": [
            "Training phrases field is not populated in the response.",
            "All fields are populated."
          ],
          "type": "string",
          "enum": [
            "INTENT_VIEW_UNSPECIFIED",
            "INTENT_VIEW_FULL"
          ]
        },
        "intentBatchUri": {
          "description": "The URI to a Google Cloud Storage file containing intents to update or create. The file format can either be a serialized proto (of IntentBatch type) or JSON object. Note: The URI must start with \"gs://\".",
          "type": "string"
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity)."
        },
        "intentBatchInline": {
          "$ref": "GoogleCloudDialogflowV2IntentBatch",
          "description": "The collection of intents to update or create."
        }
      },
      "id": "GoogleCloudDialogflowV2BatchUpdateIntentsRequest",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction": {
      "properties": {
        "urlTypeHint": {
          "enumDescriptions": [
            "Unspecified",
            "Url would be an amp action",
            "URL that points directly to AMP content, or to a canonical URL which refers to AMP content via ."
          ],
          "type": "string",
          "description": "Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.",
          "enum": [
            "URL_TYPE_HINT_UNSPECIFIED",
            "AMP_ACTION",
            "AMP_CONTENT"
          ]
        },
        "url": {
          "type": "string",
          "description": "Required. URL"
        }
      },
      "type": "object",
      "description": "Actions on Google action to open a given url.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
    },
    "GoogleCloudDialogflowV2Sentiment": {
      "type": "object",
      "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.",
      "id": "GoogleCloudDialogflowV2Sentiment",
      "properties": {
        "magnitude": {
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "type": "number",
          "format": "float"
        },
        "score": {
          "type": "number",
          "format": "float",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment)."
        }
      }
    },
    "GoogleCloudDialogflowV2VoiceSelectionParams": {
      "description": "Description of which voice to use for speech synthesis.",
      "properties": {
        "name": {
          "type": "string",
          "description": "Optional. The name of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and ssml_gender."
        },
        "ssmlGender": {
          "description": "Optional. The preferred gender of the voice. If not set, the service will choose a voice based on the other parameters such as language_code and name. Note that this is only a preference, not requirement. If a voice of the appropriate gender is not available, the synthesizer should substitute a voice with a different gender rather than failing the request.",
          "enumDescriptions": [
            "An unspecified gender, which means that the client doesn't care which gender the selected voice will have.",
            "A male voice.",
            "A female voice.",
            "A gender-neutral voice."
          ],
          "type": "string",
          "enum": [
            "SSML_VOICE_GENDER_UNSPECIFIED",
            "SSML_VOICE_GENDER_MALE",
            "SSML_VOICE_GENDER_FEMALE",
            "SSML_VOICE_GENDER_NEUTRAL"
          ]
        }
      },
      "id": "GoogleCloudDialogflowV2VoiceSelectionParams",
      "type": "object"
    },
    "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest": {
      "id": "GoogleCloudDialogflowV2BatchDeleteEntityTypesRequest",
      "description": "The request message for EntityTypes.BatchDeleteEntityTypes.",
      "type": "object",
      "properties": {
        "entityTypeNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. The names entity types to delete. All names must point to the same agent as `parent`."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The URI of the app or site to open when the user taps the suggestion chip."
        },
        "destinationName": {
          "description": "Required. The name of the app or site this chip is linking to.",
          "type": "string"
        }
      },
      "description": "The suggestion chip message that allows the user to jump out to the app or website associated with this agent.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageTableCard": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCard",
      "description": "Table card for Actions on Google.",
      "properties": {
        "rows": {
          "description": "Optional. Rows in this table of data.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageTableCardRow"
          },
          "type": "array"
        },
        "columnProperties": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageColumnProperties"
          },
          "type": "array",
          "description": "Optional. Display properties for the columns in this table."
        },
        "subtitle": {
          "description": "Optional. Subtitle to the title.",
          "type": "string"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Image which should be displayed on the card."
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the card."
        },
        "buttons": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          },
          "description": "Optional. List of buttons for the card."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem": {
      "properties": {
        "title": {
          "description": "Required. Title of the carousel item.",
          "type": "string"
        },
        "info": {
          "description": "Required. Additional info about the option item.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo"
        },
        "description": {
          "description": "Optional. The body text of the card.",
          "type": "string"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. The image to display."
        }
      },
      "description": "An item in the carousel.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem"
    },
    "GoogleCloudDialogflowV2beta1IntentMessage": {
      "description": "Corresponds to the `Response` field in the Dialogflow console.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessage",
      "properties": {
        "basicCard": {
          "description": "Displays a basic card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCard"
        },
        "telephonyPlayAudio": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio",
          "description": "Plays audio from a file in Telephony Gateway."
        },
        "telephonyTransferCall": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall",
          "description": "Transfers the call in Telephony Gateway."
        },
        "linkOutSuggestion": {
          "description": "Displays a link out suggestion chip for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageLinkOutSuggestion"
        },
        "telephonySynthesizeSpeech": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech",
          "description": "Synthesizes speech in Telephony Gateway."
        },
        "simpleResponses": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses",
          "description": "Returns a voice or text-only response for Actions on Google."
        },
        "rbmStandaloneRichCard": {
          "description": "Standalone Rich Business Messaging (RBM) rich card response.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard"
        },
        "image": {
          "description": "Displays an image.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "A custom platform-specific response."
        },
        "platform": {
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "Facebook.",
            "Slack.",
            "Telegram.",
            "Kik.",
            "Skype.",
            "Line.",
            "Viber.",
            "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
            "Telephony Gateway.",
            "Google Hangouts."
          ],
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "FACEBOOK",
            "SLACK",
            "TELEGRAM",
            "KIK",
            "SKYPE",
            "LINE",
            "VIBER",
            "ACTIONS_ON_GOOGLE",
            "TELEPHONY",
            "GOOGLE_HANGOUTS"
          ],
          "description": "Optional. The platform that this message is intended for."
        },
        "suggestions": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSuggestions",
          "description": "Displays suggestion chips for Actions on Google."
        },
        "mediaContent": {
          "description": "The media content card for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageMediaContent"
        },
        "card": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCard",
          "description": "Displays a card."
        },
        "tableCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCard",
          "description": "Table card for Actions on Google."
        },
        "text": {
          "description": "Returns a text response.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageText"
        },
        "quickReplies": {
          "description": "Displays quick replies.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies"
        },
        "browseCarouselCard": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard",
          "description": "Browse carousel card for Actions on Google."
        },
        "rbmText": {
          "description": "Rich Business Messaging (RBM) text response. RBM allows businesses to send enriched and branded versions of SMS. See https://jibe.google.com/business-messaging.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmText"
        },
        "rbmCarouselRichCard": {
          "description": "Rich Business Messaging (RBM) carousel rich card response.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard"
        },
        "listSelect": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageListSelect",
          "description": "Displays a list card for Actions on Google."
        },
        "carouselSelect": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelect",
          "description": "Displays a carousel card for Actions on Google."
        }
      }
    },
    "GoogleCloudDialogflowV2TextInput": {
      "type": "object",
      "description": "Represents the natural language text to be processed.",
      "id": "GoogleCloudDialogflowV2TextInput",
      "properties": {
        "languageCode": {
          "description": "Required. The language of this conversational query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        },
        "text": {
          "type": "string",
          "description": "Required. The UTF-8 encoded natural language text to be processed. Text length must not exceed 256 characters."
        }
      }
    },
    "GoogleCloudDialogflowV2IntentMessageListSelectItem": {
      "properties": {
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. The image to display."
        },
        "description": {
          "description": "Optional. The main text describing the item.",
          "type": "string"
        },
        "title": {
          "description": "Required. The title of the list item.",
          "type": "string"
        },
        "info": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo",
          "description": "Required. Additional information about this option."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageListSelectItem",
      "description": "An item in the list."
    },
    "GoogleProtobufEmpty": {
      "properties": {},
      "type": "object",
      "id": "GoogleProtobufEmpty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse": {
      "description": "The simple response message containing speech or text.",
      "properties": {
        "displayText": {
          "description": "Optional. The text to display.",
          "type": "string"
        },
        "ssml": {
          "description": "One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech.",
          "type": "string"
        },
        "textToSpeech": {
          "description": "One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer": {
      "type": "object",
      "properties": {
        "answer": {
          "type": "string",
          "description": "The piece of text from the `source` knowledge base document that answers this conversational query."
        },
        "faqQuestion": {
          "description": "The corresponding FAQ question if the answer was extracted from a FAQ Document, empty otherwise.",
          "type": "string"
        },
        "matchConfidenceLevel": {
          "enum": [
            "MATCH_CONFIDENCE_LEVEL_UNSPECIFIED",
            "LOW",
            "MEDIUM",
            "HIGH"
          ],
          "description": "The system's confidence level that this knowledge answer is a good match for this conversational query. NOTE: The confidence level for a given `` pair may change without notice, as it depends on models that are constantly being improved. However, it will change less frequently than the confidence score below, and should be preferred for referencing the quality of an answer.",
          "enumDescriptions": [
            "Not specified.",
            "Indicates that the confidence is low.",
            "Indicates our confidence is medium.",
            "Indicates our confidence is high."
          ],
          "type": "string"
        },
        "source": {
          "description": "Indicates which Knowledge Document this answer was extracted from. Format: `projects//knowledgeBases//documents/`.",
          "type": "string"
        },
        "matchConfidence": {
          "description": "The system's confidence score that this Knowledge answer is a good match for this conversational query. The range is from 0.0 (completely uncertain) to 1.0 (completely certain). Note: The confidence score is likely to vary somewhat (possibly even for identical requests), as the underlying model is under constant improvement. It may be deprecated in the future. We recommend using `match_confidence_level` which should be generally more stable.",
          "type": "number",
          "format": "float"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer",
      "description": "An answer from Knowledge Connector."
    },
    "GoogleCloudDialogflowV2beta1EntityTypeEntity": {
      "id": "GoogleCloudDialogflowV2beta1EntityTypeEntity",
      "properties": {
        "value": {
          "type": "string",
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases)."
        },
        "synonyms": {
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "An **entity entry** for an associated entity type.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Context": {
      "type": "object",
      "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).",
      "id": "GoogleCloudDialogflowV2Context",
      "properties": {
        "name": {
          "description": "Required. The unique identifier of the context. Format: `projects//agent/sessions//contexts/`, or `projects//agent/environments//users//sessions//contexts/`. The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
          "type": "string"
        },
        "lifespanCount": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries."
        },
        "parameters": {
          "type": "object",
          "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1ExportAgentResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ExportAgentResponse",
      "description": "The response message for Agents.ExportAgent.",
      "properties": {
        "agentContent": {
          "type": "string",
          "description": "Uncompressed raw byte content for agent.",
          "format": "byte"
        },
        "agentUri": {
          "type": "string",
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in ExportAgentRequest."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio": {
      "description": "Plays audio from a file in Telephony Gateway.",
      "properties": {
        "audioUri": {
          "description": "Required. URI to a Google Cloud Storage object containing the audio to play, e.g., \"gs://bucket/object\". The object must contain a single channel (mono) of linear PCM audio (2 bytes / sample) at 8kHz. This object must be readable by the `service-@gcp-sa-dialogflow.iam.gserviceaccount.com` service account where is the number of the Telephony Gateway project (usually the same as the Dialogflow agent project). If the Google Cloud Storage bucket is in the Telephony Gateway project, this permission is added by default when enabling the Dialogflow V2 API. For audio from other sources, consider using the `TelephonySynthesizeSpeech` message with SSML.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyPlayAudio"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem",
      "type": "object",
      "properties": {
        "openUriAction": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction",
          "description": "Required. Action to present to the user."
        },
        "description": {
          "description": "Optional. Description of the carousel item. Maximum of four lines of text.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the carousel item. Maximum of two lines of text."
        },
        "footer": {
          "type": "string",
          "description": "Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text."
        },
        "image": {
          "description": "Optional. Hero image for the carousel item.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        }
      },
      "description": "Browsing carousel tile"
    },
    "GoogleCloudDialogflowV2beta1ExportAgentResponse": {
      "id": "GoogleCloudDialogflowV2beta1ExportAgentResponse",
      "description": "The response message for Agents.ExportAgent.",
      "properties": {
        "agentContent": {
          "format": "byte",
          "description": "Zip compressed raw byte content for agent.",
          "type": "string"
        },
        "agentUri": {
          "description": "The URI to a file containing the exported agent. This field is populated only if `agent_uri` is specified in `ExportAgentRequest`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess": {
      "description": "Indicates that the conversation succeeded, i.e., the bot handled the issue that the customer talked to it about. Dialogflow only uses this to determine which conversations should be counted as successful and doesn't process the metadata in this message in any way. Note that Dialogflow also considers conversations that get to the conversation end page as successful even if they don't return ConversationSuccess. You may set this, for example: * In the entry_fulfillment of a Page if entering the page indicates that the conversation succeeded. * In a webhook response when you determine that you handled the customer issue.",
      "properties": {
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Custom metadata. Dialogflow doesn't impose any structure on this."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of media card."
        },
        "icon": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. Icon to display above media content."
        },
        "name": {
          "description": "Required. Name of media card.",
          "type": "string"
        },
        "contentUrl": {
          "type": "string",
          "description": "Required. Url where the media is stored."
        },
        "largeImage": {
          "description": "Optional. Image to display above media content.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        }
      },
      "type": "object",
      "description": "Response media object for media content card."
    },
    "GoogleCloudDialogflowV2EntityTypeEntity": {
      "properties": {
        "value": {
          "description": "Required. The primary value associated with this entity entry. For example, if the entity type is *vegetable*, the value could be *scallions*. For `KIND_MAP` entity types: * A reference value to be used in place of synonyms. For `KIND_LIST` entity types: * A string that can contain references to other entity types (with or without aliases).",
          "type": "string"
        },
        "synonyms": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. A collection of value synonyms. For example, if the entity type is *vegetable*, and `value` is *scallions*, a synonym could be *green onions*. For `KIND_LIST` entity types: * This collection must contain exactly one synonym equal to `value`."
        }
      },
      "type": "object",
      "description": "An **entity entry** for an associated entity type.",
      "id": "GoogleCloudDialogflowV2EntityTypeEntity"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo": {
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo",
      "type": "object",
      "description": "Represents intent information communicated to the webhook.",
      "properties": {
        "parameters": {
          "description": "Parameters identified as a result of intent matching. This is a map of the name of the identified parameter to the value of the parameter identified from the user's utterance. All parameters defined in the matched intent that are identified will be surfaced here.",
          "additionalProperties": {
            "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfoIntentParameterValue"
          },
          "type": "object"
        },
        "lastMatchedIntent": {
          "type": "string",
          "description": "Always present. The unique identifier of the last matched intent. Format: `projects//locations//agents//intents/`."
        }
      }
    },
    "GoogleCloudDialogflowV2SynthesizeSpeechConfig": {
      "id": "GoogleCloudDialogflowV2SynthesizeSpeechConfig",
      "description": "Configuration of how speech should be synthesized.",
      "properties": {
        "voice": {
          "description": "Optional. The desired voice of the synthesized audio.",
          "$ref": "GoogleCloudDialogflowV2VoiceSelectionParams"
        },
        "effectsProfileId": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. An identifier which selects 'audio effects' profiles that are applied on (post synthesized) text to speech. Effects are applied on top of each other in the order they are given."
        },
        "volumeGainDb": {
          "type": "number",
          "format": "double",
          "description": "Optional. Volume gain (in dB) of the normal native volume supported by the specific voice, in the range [-96.0, 16.0]. If unset, or set to a value of 0.0 (dB), will play at normal native signal amplitude. A value of -6.0 (dB) will play at approximately half the amplitude of the normal native signal amplitude. A value of +6.0 (dB) will play at approximately twice the amplitude of the normal native signal amplitude. We strongly recommend not to exceed +10 (dB) as there's usually no effective increase in loudness for any value greater than that."
        },
        "speakingRate": {
          "format": "double",
          "description": "Optional. Speaking rate/speed, in the range [0.25, 4.0]. 1.0 is the normal native speed supported by the specific voice. 2.0 is twice as fast, and 0.5 is half as fast. If unset(0.0), defaults to the native 1.0 speed. Any other values \u003c 0.25 or \u003e 4.0 will return an error.",
          "type": "number"
        },
        "pitch": {
          "type": "number",
          "format": "double",
          "description": "Optional. Speaking pitch, in the range [-20.0, 20.0]. 20 means increase 20 semitones from the original pitch. -20 means decrease 20 semitones from the original pitch."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCardButtonOpenUriAction",
      "description": "Opens the given URI.",
      "properties": {
        "uri": {
          "description": "Required. The HTTP or HTTPS scheme URI.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1KnowledgeAnswers": {
      "properties": {
        "answers": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1KnowledgeAnswersAnswer"
          },
          "description": "A list of answers from Knowledge Connector."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1KnowledgeAnswers",
      "description": "Represents the result of querying a Knowledge base."
    },
    "GoogleCloudDialogflowV2Agent": {
      "description": "A Dialogflow agent is a virtual agent that handles conversations with your end-users. It is a natural language understanding module that understands the nuances of human language. Dialogflow translates end-user text or audio during a conversation to structured data that your apps and services can understand. You design and build a Dialogflow agent to handle the types of conversations required for your system. For more information about agents, see the [Agent guide](https://cloud.google.com/dialogflow/docs/agents-overview).",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The name of this agent."
        },
        "parent": {
          "type": "string",
          "description": "Required. The project of this agent. Format: `projects/`."
        },
        "enableLogging": {
          "type": "boolean",
          "description": "Optional. Determines whether this agent should log conversation queries."
        },
        "description": {
          "type": "string",
          "description": "Optional. The description of this agent. The maximum length is 500 characters. If exceeded, the request is rejected."
        },
        "avatarUri": {
          "type": "string",
          "description": "Optional. The URI of the agent's avatar. Avatars are used throughout the Dialogflow console and in the self-hosted [Web Demo](https://cloud.google.com/dialogflow/docs/integrations/web-demo) integration."
        },
        "matchMode": {
          "enum": [
            "MATCH_MODE_UNSPECIFIED",
            "MATCH_MODE_HYBRID",
            "MATCH_MODE_ML_ONLY"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Best for agents with a small number of examples in intents and/or wide use of templates syntax and composite entities.",
            "Can be used for agents with a large number of examples in intents, especially the ones using @sys.any or very large custom entities."
          ],
          "description": "Optional. Determines how intents are detected from user queries.",
          "type": "string"
        },
        "classificationThreshold": {
          "description": "Optional. To filter out false positive results and still get variety in matched natural language inputs for your agent, you can tune the machine learning classification threshold. If the returned score value is less than the threshold value, then a fallback intent will be triggered or, if there are no fallback intents defined, no intent will be triggered. The score values range from 0.0 (completely uncertain) to 1.0 (completely certain). If set to 0.0, the default of 0.3 is used.",
          "format": "float",
          "type": "number"
        },
        "tier": {
          "enum": [
            "TIER_UNSPECIFIED",
            "TIER_STANDARD",
            "TIER_ENTERPRISE",
            "TIER_ENTERPRISE_PLUS"
          ],
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Standard tier.",
            "Enterprise tier (Essentials).",
            "Enterprise tier (Plus)."
          ],
          "description": "Optional. The agent tier. If not specified, TIER_STANDARD is assumed.",
          "type": "string"
        },
        "apiVersion": {
          "description": "Optional. API version displayed in Dialogflow console. If not specified, V2 API is assumed. Clients are free to query different service endpoints for different API versions. However, bots connectors and webhook calls will follow the specified API version.",
          "enumDescriptions": [
            "Not specified.",
            "Legacy V1 API.",
            "V2 API.",
            "V2beta1 API."
          ],
          "enum": [
            "API_VERSION_UNSPECIFIED",
            "API_VERSION_V1",
            "API_VERSION_V2",
            "API_VERSION_V2_BETA_1"
          ],
          "type": "string"
        },
        "supportedLanguageCodes": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. The list of all languages supported by this agent (except for the `default_language_code`)."
        },
        "defaultLanguageCode": {
          "type": "string",
          "description": "Required. The default language of the agent as a language tag. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. This field cannot be set by the `Update` method."
        },
        "timeZone": {
          "type": "string",
          "description": "Required. The time zone of this agent from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris."
        }
      },
      "id": "GoogleCloudDialogflowV2Agent"
    },
    "GoogleCloudDialogflowV2QueryParameters": {
      "type": "object",
      "properties": {
        "sentimentAnalysisRequestConfig": {
          "description": "Configures the type of sentiment analysis to perform. If not provided, sentiment analysis is not performed.",
          "$ref": "GoogleCloudDialogflowV2SentimentAnalysisRequestConfig"
        },
        "resetContexts": {
          "type": "boolean",
          "description": "Specifies whether to delete all contexts in the current session before the new ones are activated."
        },
        "payload": {
          "description": "This field can be used to pass custom data to your webhook. Arbitrary JSON objects are supported. If supplied, the value is used to populate the `WebhookRequest.original_detect_intent_request.payload` field sent to your webhook.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "timeZone": {
          "description": "The time zone of this conversational query from the [time zone database](https://www.iana.org/time-zones), e.g., America/New_York, Europe/Paris. If not provided, the time zone specified in agent settings is used.",
          "type": "string"
        },
        "geoLocation": {
          "description": "The geo location of this conversational query.",
          "$ref": "GoogleTypeLatLng"
        },
        "sessionEntityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          },
          "type": "array",
          "description": "Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session of this query."
        },
        "contexts": {
          "description": "The collection of contexts to be activated before this query is executed.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          }
        },
        "webhookHeaders": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "This field can be used to pass HTTP headers for a webhook call. These headers will be sent to webhook along with the headers that have been configured through Dialogflow web console. The headers defined within this field will overwrite the headers configured through Dialogflow console if there is a conflict. Header names are case-insensitive. Google's specified headers are not allowed. Including: \"Host\", \"Content-Length\", \"Connection\", \"From\", \"User-Agent\", \"Accept-Encoding\", \"If-Modified-Since\", \"If-None-Match\", \"X-Forwarded-For\", etc."
        }
      },
      "id": "GoogleCloudDialogflowV2QueryParameters",
      "description": "Represents the parameters of the conversational query."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSuggestions": {
      "description": "The collection of suggestions.",
      "type": "object",
      "properties": {
        "suggestions": {
          "description": "Required. The list of suggested replies.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSuggestion"
          },
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSuggestions"
    },
    "GoogleCloudDialogflowV2Message": {
      "description": "Represents a message posted into a conversation.",
      "properties": {
        "content": {
          "type": "string",
          "description": "Required. The message content."
        },
        "createTime": {
          "format": "google-datetime",
          "readOnly": true,
          "type": "string",
          "description": "Output only. The time when the message was created."
        },
        "languageCode": {
          "description": "Optional. The message language. This should be a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt) language tag. Example: \"en-US\".",
          "type": "string"
        },
        "participantRole": {
          "description": "Output only. The role of the participant.",
          "enum": [
            "ROLE_UNSPECIFIED",
            "HUMAN_AGENT",
            "AUTOMATED_AGENT",
            "END_USER"
          ],
          "type": "string",
          "readOnly": true,
          "enumDescriptions": [
            "Participant role not set.",
            "Participant is a human agent.",
            "Participant is an automated agent, such as a Dialogflow agent.",
            "Participant is an end user that has called or chatted with Dialogflow services."
          ]
        },
        "messageAnnotation": {
          "readOnly": true,
          "description": "Output only. The annotation for the message.",
          "$ref": "GoogleCloudDialogflowV2MessageAnnotation"
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the message. Format: `projects//locations//conversations//messages/`."
        },
        "participant": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The participant that sends this message."
        }
      },
      "id": "GoogleCloudDialogflowV2Message",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SentimentAnalysisRequestConfig": {
      "id": "GoogleCloudDialogflowV2SentimentAnalysisRequestConfig",
      "type": "object",
      "properties": {
        "analyzeQueryTextSentiment": {
          "type": "boolean",
          "description": "Instructs the service to perform sentiment analysis on `query_text`. If not provided, sentiment analysis is not performed on `query_text`."
        }
      },
      "description": "Configures the types of sentiment analysis to perform."
    },
    "GoogleCloudDialogflowV2beta1SessionEntityType": {
      "description": "A session represents a conversation between a Dialogflow agent and an end-user. You can create special entities, called session entities, during a session. Session entities can extend or replace custom entity types and only exist during the session that they were created for. All session data, including session entities, is stored by Dialogflow for 20 minutes. For more information, see the [session entity guide](https://cloud.google.com/dialogflow/docs/entities-session).",
      "id": "GoogleCloudDialogflowV2beta1SessionEntityType",
      "properties": {
        "entityOverrideMode": {
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "The collection of session entities overrides the collection of entities in the corresponding custom entity type.",
            "The collection of session entities extends the collection of entities in the corresponding custom entity type. Note: Even in this override mode calls to `ListSessionEntityTypes`, `GetSessionEntityType`, `CreateSessionEntityType` and `UpdateSessionEntityType` only return the additional entities added in this session entity type. If you want to get the supplemented list, please call EntityTypes.GetEntityType on the custom entity type and merge."
          ],
          "enum": [
            "ENTITY_OVERRIDE_MODE_UNSPECIFIED",
            "ENTITY_OVERRIDE_MODE_OVERRIDE",
            "ENTITY_OVERRIDE_MODE_SUPPLEMENT"
          ],
          "type": "string",
          "description": "Required. Indicates whether the additional data should override or supplement the custom entity type definition."
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of this session entity type. Supported formats: - `projects//agent/sessions//entityTypes/` - `projects//locations//agent/sessions//entityTypes/` - `projects//agent/environments//users//sessions//entityTypes/` - `projects//locations//agent/environments/ /users//sessions//entityTypes/` If `Location ID` is not specified we assume default 'us' location. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. `` must be the display name of an existing entity type in the same agent that will be overridden or supplemented."
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1EntityTypeEntity"
          },
          "type": "array",
          "description": "Required. The collection of entities associated with this session entity type."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2ListIntentsResponse": {
      "id": "GoogleCloudDialogflowV2ListIntentsResponse",
      "properties": {
        "intents": {
          "description": "The list of agent intents. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          }
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "description": "The response message for Intents.ListIntents.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCard": {
      "description": "Table card for Actions on Google.",
      "properties": {
        "rows": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageTableCardRow"
          },
          "description": "Optional. Rows in this table of data."
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage",
          "description": "Optional. Image which should be displayed on the card."
        },
        "buttons": {
          "description": "Optional. List of buttons for the card.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          },
          "type": "array"
        },
        "columnProperties": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties"
          },
          "type": "array",
          "description": "Optional. Display properties for the columns in this table."
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle to the title."
        },
        "title": {
          "type": "string",
          "description": "Required. Title of the card."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCard"
    },
    "GoogleCloudDialogflowV2OutputAudioConfig": {
      "id": "GoogleCloudDialogflowV2OutputAudioConfig",
      "properties": {
        "sampleRateHertz": {
          "type": "integer",
          "format": "int32",
          "description": "The synthesis sample rate (in hertz) for this audio. If not provided, then the synthesizer will use the default sample rate based on the audio encoding. If this is different from the voice's natural sample rate, then the synthesizer will honor this request by converting to the desired sample rate (which might result in worse audio quality)."
        },
        "audioEncoding": {
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM). Audio content returned as LINEAR16 also contains a WAV header.",
            "MP3 audio at 32kbps.",
            "Opus encoded audio wrapped in an ogg container. The result will be a file which can be played natively on Android, and in browsers (at least Chrome and Firefox). The quality of the encoding is considerably higher than MP3 while using approximately the same bitrate."
          ],
          "enum": [
            "OUTPUT_AUDIO_ENCODING_UNSPECIFIED",
            "OUTPUT_AUDIO_ENCODING_LINEAR_16",
            "OUTPUT_AUDIO_ENCODING_MP3",
            "OUTPUT_AUDIO_ENCODING_OGG_OPUS"
          ],
          "type": "string",
          "description": "Required. Audio encoding of the synthesized audio content."
        },
        "synthesizeSpeechConfig": {
          "description": "Configuration of how speech should be synthesized.",
          "$ref": "GoogleCloudDialogflowV2SynthesizeSpeechConfig"
        }
      },
      "description": "Instructs the speech synthesizer on how to generate the output audio content. If this audio config is supplied in a request, it overrides all existing text-to-speech settings applied to the agent.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageSimpleResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageSimpleResponse",
      "properties": {
        "displayText": {
          "description": "Optional. The text to display.",
          "type": "string"
        },
        "ssml": {
          "type": "string",
          "description": "One of text_to_speech or ssml must be provided. Structured spoken response to the user in the SSML format. Mutually exclusive with text_to_speech."
        },
        "textToSpeech": {
          "description": "One of text_to_speech or ssml must be provided. The plain text of the speech output. Mutually exclusive with ssml.",
          "type": "string"
        }
      },
      "description": "The simple response message containing speech or text."
    },
    "GoogleCloudDialogflowV2ListEnvironmentsResponse": {
      "description": "The response message for Environments.ListEnvironments.",
      "id": "GoogleCloudDialogflowV2ListEnvironmentsResponse",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "environments": {
          "description": "The list of agent environments. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Environment"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest": {
      "type": "object",
      "description": "The request message for EntityTypes.BatchUpdateEntities.",
      "id": "GoogleCloudDialogflowV2BatchUpdateEntitiesRequest",
      "properties": {
        "languageCode": {
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
          "type": "string"
        },
        "updateMask": {
          "format": "google-fieldmask",
          "description": "Optional. The mask to control which fields get updated.",
          "type": "string"
        },
        "entities": {
          "description": "Required. The entities to update or create.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest": {
      "properties": {
        "entityValues": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Required. The reference `values` of the entities to delete. Note that these are not fully-qualified names, i.e. they don't start with `projects/`."
        },
        "languageCode": {
          "description": "Optional. The language used to access language-specific data. If not specified, the agent's default language is used. For more information, see [Multilingual intent and entity data](https://cloud.google.com/dialogflow/docs/agents-multilingual#intent-entity).",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2BatchDeleteEntitiesRequest",
      "type": "object",
      "description": "The request message for EntityTypes.BatchDeleteEntities."
    },
    "GoogleCloudDialogflowV2FulfillmentFeature": {
      "properties": {
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "SMALLTALK"
          ],
          "enumDescriptions": [
            "Feature type not specified.",
            "Fulfillment is enabled for SmallTalk."
          ],
          "type": "string",
          "description": "The type of the feature that enabled for fulfillment."
        }
      },
      "description": "Whether fulfillment is enabled for the specific feature.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2FulfillmentFeature"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall": {
      "type": "object",
      "properties": {
        "phoneNumber": {
          "type": "string",
          "description": "Required. The phone number to transfer the call to in [E.164 format](https://en.wikipedia.org/wiki/E.164). We currently only allow transferring to US numbers (+1xxxyyyzzzz)."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonyTransferCall",
      "description": "Transfers the call in Telephony Gateway."
    },
    "GoogleTypeLatLng": {
      "description": "An object that represents a latitude/longitude pair. This is expressed as a pair of doubles to represent degrees latitude and degrees longitude. Unless specified otherwise, this must conform to the WGS84 standard. Values must be within normalized ranges.",
      "type": "object",
      "id": "GoogleTypeLatLng",
      "properties": {
        "longitude": {
          "type": "number",
          "description": "The longitude in degrees. It must be in the range [-180.0, +180.0].",
          "format": "double"
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "The latitude in degrees. It must be in the range [-90.0, +90.0]."
        }
      }
    },
    "GoogleLongrunningListOperationsResponse": {
      "description": "The response message for Operations.ListOperations.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "description": "A list of operations that matches the specified filter in the request.",
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "type": "array"
        }
      },
      "id": "GoogleLongrunningListOperationsResponse"
    },
    "GoogleCloudDialogflowV2IntentTrainingPhrase": {
      "properties": {
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentTrainingPhrasePart"
          },
          "type": "array",
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set."
        },
        "type": {
          "description": "Required. The type of the training phrase.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXAMPLE",
            "TEMPLATE"
          ],
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Examples do not contain @-prefixed entity type names, but example parts can be annotated with entity types.",
            "Templates are not annotated with entity types, but they can contain @-prefixed entity type names as substrings. Template mode has been deprecated. Example mode is the only supported way to create new training phrases. If you have existing training phrases that you've created in template mode, those will continue to work."
          ]
        },
        "name": {
          "description": "Output only. The unique identifier of this training phrase.",
          "type": "string"
        },
        "timesAddedCount": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased."
        }
      },
      "description": "Represents an example that the agent is trained on.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentTrainingPhrase"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell": {
      "description": "Cell of TableCardRow.",
      "properties": {
        "text": {
          "type": "string",
          "description": "Required. Text in this cell."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTableCardCell",
      "type": "object"
    },
    "GoogleLongrunningOperation": {
      "id": "GoogleLongrunningOperation",
      "properties": {
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "GoogleCloudDialogflowV2FulfillmentGenericWebService": {
      "properties": {
        "username": {
          "type": "string",
          "description": "Optional. The user name for HTTP Basic authentication."
        },
        "password": {
          "description": "Optional. The password for HTTP Basic authentication.",
          "type": "string"
        },
        "isCloudFunction": {
          "type": "boolean",
          "description": "Optional. Indicates if generic web service is created through Cloud Functions integration. Defaults to false."
        },
        "uri": {
          "description": "Required. The fulfillment URI for receiving POST requests. It must use https protocol.",
          "type": "string"
        },
        "requestHeaders": {
          "description": "Optional. The HTTP request headers to send together with fulfillment requests.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "type": "object",
      "description": "Represents configuration for a generic web service. Dialogflow supports two mechanisms for authentications: - Basic authentication with username and password. - Authentication with additional authentication headers. More information could be found at: https://cloud.google.com/dialogflow/docs/fulfillment-configure.",
      "id": "GoogleCloudDialogflowV2FulfillmentGenericWebService"
    },
    "GoogleCloudDialogflowV2beta1IntentTrainingPhrase": {
      "properties": {
        "type": {
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "Examples do not contain @-prefixed entity type names, but example parts can be annotated with entity types.",
            "Templates are not annotated with entity types, but they can contain @-prefixed entity type names as substrings. Template mode has been deprecated. Example mode is the only supported way to create new training phrases. If you have existing training phrases that you've created in template mode, those will continue to work."
          ],
          "enum": [
            "TYPE_UNSPECIFIED",
            "EXAMPLE",
            "TEMPLATE"
          ],
          "description": "Required. The type of the training phrase.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The unique identifier of this training phrase.",
          "type": "string"
        },
        "timesAddedCount": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Indicates how many times this example was added to the intent. Each time a developer adds an existing sample by editing an intent or training, this counter is increased."
        },
        "parts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentTrainingPhrasePart"
          },
          "description": "Required. The ordered list of training phrase parts. The parts are concatenated in order to form the training phrase. Note: The API does not automatically annotate training phrases like the Dialogflow Console does. Note: Do not forget to include whitespace at part boundaries, so the training phrase is well formatted when the parts are concatenated. If the training phrase does not need to be annotated with parameters, you just need a single part with only the Part.text field set. If you want to annotate the training phrase, you must create multiple parts, where the fields of each part are populated in one of two ways: - `Part.text` is set to a part of the phrase that has no parameters. - `Part.text` is set to a part of the phrase that you want to annotate, and the `entity_type`, `alias`, and `user_defined` fields are all set.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentTrainingPhrase",
      "description": "Represents an example that the agent is trained on.",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookResponse",
      "properties": {
        "sessionInfo": {
          "description": "Information about session status. This field can be omitted by the webhook if it does not intend to modify session status.",
          "$ref": "GoogleCloudDialogflowCxV3beta1SessionInfo"
        },
        "pageInfo": {
          "description": "Information about page status. This field can be omitted by the webhook if it does not intend to modify page status.",
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfo"
        },
        "payload": {
          "description": "Value to append directly to QueryResult.webhook_payloads.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object"
        },
        "targetFlow": {
          "description": "The target flow to transition to. Format: `projects//locations//agents//flows/`.",
          "type": "string"
        },
        "fulfillmentResponse": {
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookResponseFulfillmentResponse",
          "description": "The fulfillment response to send to the user. This field can be omitted by the webhook if it does not intend to send any response to the user."
        },
        "targetPage": {
          "description": "The target page to transition to. Format: `projects//locations//agents//flows//pages/`.",
          "type": "string"
        }
      },
      "description": "The response message for a webhook call."
    },
    "GoogleCloudDialogflowV2ListContextsResponse": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2ListContextsResponse",
      "properties": {
        "contexts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "description": "The list of contexts. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "description": "The response message for Contexts.ListContexts."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem": {
      "properties": {
        "title": {
          "description": "Required. Title of the carousel item.",
          "type": "string"
        },
        "description": {
          "type": "string",
          "description": "Optional. The body text of the card."
        },
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "info": {
          "description": "Required. Additional info about the option item.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCarouselSelectItem",
      "description": "An item in the carousel.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo": {
      "description": "Represents a single followup intent in the chain.",
      "properties": {
        "followupIntentName": {
          "description": "The unique identifier of the followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "parentFollowupIntentName": {
          "description": "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentFollowupIntentInfo"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent": {
      "type": "object",
      "properties": {
        "suggestions": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          },
          "description": "Optional. List of suggestions to include in the card.",
          "type": "array"
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the card (at most 2000 bytes). At least one of the title, description or media must be set."
        },
        "media": {
          "description": "Optional. However at least one of the title, description or media must be set. Media (image, GIF or a video) to include in the card.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContentRbmMedia"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title of the card (at most 200 bytes). At least one of the title, description or media must be set."
        }
      },
      "description": "Rich Business Messaging (RBM) Card content",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment": {
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment",
      "description": "Represents one segment of audio.",
      "type": "object",
      "properties": {
        "audio": {
          "format": "byte",
          "description": "Raw audio synthesized from the Dialogflow agent's response using the output config specified in the request.",
          "type": "string"
        },
        "uri": {
          "type": "string",
          "description": "Client-specific URI that points to an audio clip accessible to the client. Dialogflow does not impose any validation on it."
        },
        "allowPlaybackInterruption": {
          "readOnly": true,
          "description": "Output only. Whether the playback of this segment can be interrupted by the end user's speech and the client should then start the next Dialogflow request.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowV2InputAudioConfig": {
      "properties": {
        "audioEncoding": {
          "enum": [
            "AUDIO_ENCODING_UNSPECIFIED",
            "AUDIO_ENCODING_LINEAR_16",
            "AUDIO_ENCODING_FLAC",
            "AUDIO_ENCODING_MULAW",
            "AUDIO_ENCODING_AMR",
            "AUDIO_ENCODING_AMR_WB",
            "AUDIO_ENCODING_OGG_OPUS",
            "AUDIO_ENCODING_SPEEX_WITH_HEADER_BYTE"
          ],
          "description": "Required. Audio encoding of the audio content to process.",
          "enumDescriptions": [
            "Not specified.",
            "Uncompressed 16-bit signed little-endian samples (Linear PCM).",
            "[`FLAC`](https://xiph.org/flac/documentation.html) (Free Lossless Audio Codec) is the recommended encoding because it is lossless (therefore recognition is not compromised) and requires only about half the bandwidth of `LINEAR16`. `FLAC` stream encoding supports 16-bit and 24-bit samples, however, not all fields in `STREAMINFO` are supported.",
            "8-bit samples that compand 14-bit audio samples using G.711 PCMU/mu-law.",
            "Adaptive Multi-Rate Narrowband codec. `sample_rate_hertz` must be 8000.",
            "Adaptive Multi-Rate Wideband codec. `sample_rate_hertz` must be 16000.",
            "Opus encoded audio frames in Ogg container ([OggOpus](https://wiki.xiph.org/OggOpus)). `sample_rate_hertz` must be 16000.",
            "Although the use of lossy encodings is not recommended, if a very low bitrate encoding is required, `OGG_OPUS` is highly preferred over Speex encoding. The [Speex](https://speex.org/) encoding supported by Dialogflow API has a header byte in each block, as in MIME type `audio/x-speex-with-header-byte`. It is a variant of the RTP Speex encoding defined in [RFC 5574](https://tools.ietf.org/html/rfc5574). The stream is a sequence of blocks, one block per RTP packet. Each block starts with a byte containing the length of the block, in bytes, followed by one or more frames of Speex data, padded to an integral number of bytes (octets) as specified in RFC 5574. In other words, each RTP header is replaced with a single byte containing the block length. Only Speex wideband is supported. `sample_rate_hertz` must be 16000."
          ],
          "type": "string"
        },
        "enableWordInfo": {
          "description": "If `true`, Dialogflow returns SpeechWordInfo in StreamingRecognitionResult with information about the recognized speech words, e.g. start and end time offsets. If false or unspecified, Speech doesn't return any word-level information.",
          "type": "boolean"
        },
        "model": {
          "description": "Which Speech model to select for the given request. Select the model best suited to your domain to get best results. If a model is not explicitly specified, then we auto-select a model based on the parameters in the InputAudioConfig. If enhanced speech model is enabled for the agent and an enhanced version of the specified model for the language does not exist, then the speech is recognized using the standard version of the specified model. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics#select-model) for more details.",
          "type": "string"
        },
        "speechContexts": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2SpeechContext"
          },
          "description": "Context information to assist speech recognition. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details.",
          "type": "array"
        },
        "sampleRateHertz": {
          "type": "integer",
          "format": "int32",
          "description": "Required. Sample rate (in Hertz) of the audio content sent in the query. Refer to [Cloud Speech API documentation](https://cloud.google.com/speech-to-text/docs/basics) for more details."
        },
        "phraseHints": {
          "description": "A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. See [the Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/basics#phrase-hints) for more details. This field is deprecated. Please use [speech_contexts]() instead. If you specify both [phrase_hints]() and [speech_contexts](), Dialogflow will treat the [phrase_hints]() as a single additional [SpeechContext]().",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "languageCode": {
          "description": "Required. The language of the supplied audio. Dialogflow does not do translations. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        },
        "modelVariant": {
          "enumDescriptions": [
            "No model variant specified. In this case Dialogflow defaults to USE_BEST_AVAILABLE.",
            "Use the best available variant of the Speech model that the caller is eligible for. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible for enhanced models.",
            "Use standard model variant even if an enhanced model is available. See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) for details about enhanced models.",
            "Use an enhanced model variant: * If an enhanced variant does not exist for the given model and request language, Dialogflow falls back to the standard variant. The [Cloud Speech documentation](https://cloud.google.com/speech-to-text/docs/enhanced-models) describes which models have enhanced variants. * If the API caller isn't eligible for enhanced models, Dialogflow returns an error. Please see the [Dialogflow docs](https://cloud.google.com/dialogflow/docs/data-logging) for how to make your project eligible."
          ],
          "type": "string",
          "description": "Which variant of the Speech model to use.",
          "enum": [
            "SPEECH_MODEL_VARIANT_UNSPECIFIED",
            "USE_BEST_AVAILABLE",
            "USE_STANDARD",
            "USE_ENHANCED"
          ]
        },
        "singleUtterance": {
          "description": "If `false` (default), recognition does not cease until the client closes the stream. If `true`, the recognizer will detect a single spoken utterance in input audio. Recognition ceases when it detects the audio's voice has stopped or paused. In this case, once a detected intent is received, the client should close the stream and start a new request with a new stream as needed. Note: This setting is relevant only for streaming methods. Note: When specified, InputAudioConfig.single_utterance takes precedence over StreamingDetectIntentRequest.single_utterance.",
          "type": "boolean"
        }
      },
      "id": "GoogleCloudDialogflowV2InputAudioConfig",
      "description": "Instructs the speech recognizer how to process the audio content.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageMediaContent": {
      "properties": {
        "mediaType": {
          "type": "string",
          "description": "Optional. What type of media is the content (ie \"audio\").",
          "enumDescriptions": [
            "Unspecified.",
            "Response media type is audio."
          ],
          "enum": [
            "RESPONSE_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO"
          ]
        },
        "mediaObjects": {
          "type": "array",
          "description": "Required. List of media objects.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageMediaContentResponseMediaObject"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageMediaContent",
      "description": "The media content card for Actions on Google.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2SentimentAnalysisResult": {
      "type": "object",
      "description": "The result of sentiment analysis. Sentiment analysis inspects user input and identifies the prevailing subjective opinion, especially to determine a user's attitude as positive, negative, or neutral. For Participants.DetectIntent, it needs to be configured in DetectIntentRequest.query_params. For Participants.StreamingDetectIntent, it needs to be configured in StreamingDetectIntentRequest.query_params. And for Participants.AnalyzeContent and Participants.StreamingAnalyzeContent, it needs to be configured in ConversationProfile.human_agent_assistant_config",
      "properties": {
        "queryTextSentiment": {
          "$ref": "GoogleCloudDialogflowV2Sentiment",
          "description": "The sentiment analysis result for `query_text`."
        }
      },
      "id": "GoogleCloudDialogflowV2SentimentAnalysisResult"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem": {
      "description": "Browsing carousel tile",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem",
      "properties": {
        "title": {
          "type": "string",
          "description": "Required. Title of the carousel item. Maximum of two lines of text."
        },
        "footer": {
          "type": "string",
          "description": "Optional. Text that appears at the bottom of the Browse Carousel Card. Maximum of one line of text."
        },
        "openUriAction": {
          "description": "Required. Action to present to the user.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
        },
        "description": {
          "description": "Optional. Description of the carousel item. Maximum of four lines of text.",
          "type": "string"
        },
        "image": {
          "description": "Optional. Hero image for the carousel item.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2QueryInput": {
      "properties": {
        "audioConfig": {
          "$ref": "GoogleCloudDialogflowV2InputAudioConfig",
          "description": "Instructs the speech recognizer how to process the speech audio."
        },
        "event": {
          "description": "The event to be processed.",
          "$ref": "GoogleCloudDialogflowV2EventInput"
        },
        "text": {
          "$ref": "GoogleCloudDialogflowV2TextInput",
          "description": "The natural language text to be processed."
        }
      },
      "description": "Represents the query input. It can contain either: 1. An audio config which instructs the speech recognizer how to process the speech audio. 2. A conversational query in the form of text,. 3. An event that specifies which intent to trigger.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2QueryInput"
    },
    "GoogleCloudDialogflowV2IntentMessageMediaContent": {
      "properties": {
        "mediaType": {
          "type": "string",
          "description": "Optional. What type of media is the content (ie \"audio\").",
          "enumDescriptions": [
            "Unspecified.",
            "Response media type is audio."
          ],
          "enum": [
            "RESPONSE_MEDIA_TYPE_UNSPECIFIED",
            "AUDIO"
          ]
        },
        "mediaObjects": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject"
          },
          "type": "array",
          "description": "Required. List of media objects."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageMediaContent",
      "description": "The media content card for Actions on Google.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2DetectIntentResponse": {
      "type": "object",
      "description": "The message returned from the DetectIntent method.",
      "id": "GoogleCloudDialogflowV2DetectIntentResponse",
      "properties": {
        "responseId": {
          "type": "string",
          "description": "The unique identifier of the response. It can be used to locate a response in the training example set or for reporting issues."
        },
        "outputAudio": {
          "format": "byte",
          "type": "string",
          "description": "The audio data bytes encoded as specified in the request. Note: The output audio is generated based on the values of default platform text responses found in the `query_result.fulfillment_messages` field. If multiple default text responses exist, they will be concatenated when generating audio. If no default platform text responses exist, the generated audio content will be empty. In some scenarios, multiple output audio fields may be present in the response structure. In these cases, only the top-most-level audio output has content."
        },
        "webhookStatus": {
          "$ref": "GoogleRpcStatus",
          "description": "Specifies the status of the webhook request."
        },
        "outputAudioConfig": {
          "$ref": "GoogleCloudDialogflowV2OutputAudioConfig",
          "description": "The config used by the speech synthesizer to generate the output audio."
        },
        "queryResult": {
          "$ref": "GoogleCloudDialogflowV2QueryResult",
          "description": "The selected results of the conversational query or event processing. See `alternative_query_results` for additional potential results."
        }
      }
    },
    "GoogleCloudDialogflowV2ListEntityTypesResponse": {
      "description": "The response message for EntityTypes.ListEntityTypes.",
      "id": "GoogleCloudDialogflowV2ListEntityTypesResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "entityTypes": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          },
          "description": "The list of agent entity types. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2WebhookRequest": {
      "properties": {
        "originalDetectIntentRequest": {
          "description": "Optional. The contents of the original request that was passed to `[Streaming]DetectIntent` call.",
          "$ref": "GoogleCloudDialogflowV2OriginalDetectIntentRequest"
        },
        "queryResult": {
          "description": "The result of the conversational query or event processing. Contains the same value as `[Streaming]DetectIntentResponse.query_result`.",
          "$ref": "GoogleCloudDialogflowV2QueryResult"
        },
        "responseId": {
          "description": "The unique identifier of the response. Contains the same value as `[Streaming]DetectIntentResponse.response_id`.",
          "type": "string"
        },
        "session": {
          "type": "string",
          "description": "The unique identifier of detectIntent request session. Can be used to identify end-user inside webhook implementation. Format: `projects//agent/sessions/`, or `projects//agent/environments//users//sessions/`."
        }
      },
      "type": "object",
      "description": "The request message for a webhook call.",
      "id": "GoogleCloudDialogflowV2WebhookRequest"
    },
    "GoogleCloudDialogflowV2QueryResult": {
      "description": "Represents the result of conversational query or event processing.",
      "properties": {
        "intent": {
          "description": "The intent that matched the conversational query. Some, not all fields are filled in this message, including but not limited to: `name`, `display_name`, `end_interaction` and `is_fallback`.",
          "$ref": "GoogleCloudDialogflowV2Intent"
        },
        "queryText": {
          "type": "string",
          "description": "The original conversational query text: - If natural language text was provided as input, `query_text` contains a copy of the input. - If natural language speech audio was provided as input, `query_text` contains the speech recognition result. If speech recognizer produced multiple alternatives, a particular one is picked. - If automatic spell correction is enabled, `query_text` will contain the corrected user input."
        },
        "intentDetectionConfidence": {
          "type": "number",
          "format": "float",
          "description": "The intent detection confidence. Values range from 0.0 (completely uncertain) to 1.0 (completely certain). This value is for informational purpose only and is only used to help match the best intent within the classification threshold. This value may change for the same end-user expression at any time due to a model retraining or change in implementation. If there are `multiple knowledge_answers` messages, this value is set to the greatest `knowledgeAnswers.match_confidence` value in the list."
        },
        "parameters": {
          "type": "object",
          "description": "The collection of extracted parameters. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "action": {
          "description": "The action name from the matched intent.",
          "type": "string"
        },
        "allRequiredParamsPresent": {
          "type": "boolean",
          "description": "This field is set to: - `false` if the matched intent has required parameters and not all of the required parameter values have been collected. - `true` if all required parameter values have been collected, or if the matched intent doesn't contain any required parameters."
        },
        "fulfillmentMessages": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "description": "The collection of rich messages to present to the user.",
          "type": "array"
        },
        "speechRecognitionConfidence": {
          "format": "float",
          "description": "The Speech recognition confidence between 0.0 and 1.0. A higher number indicates an estimated greater likelihood that the recognized words are correct. The default of 0.0 is a sentinel value indicating that confidence was not set. This field is not guaranteed to be accurate or set. In particular this field isn't set for StreamingDetectIntent since the streaming endpoint has separate confidence estimates per portion of the audio in StreamingRecognitionResult.",
          "type": "number"
        },
        "sentimentAnalysisResult": {
          "$ref": "GoogleCloudDialogflowV2SentimentAnalysisResult",
          "description": "The sentiment analysis result, which depends on the `sentiment_analysis_request_config` specified in the request."
        },
        "languageCode": {
          "type": "string",
          "description": "The language that was triggered during intent detection. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes."
        },
        "diagnosticInfo": {
          "type": "object",
          "description": "Free-form diagnostic information for the associated detect intent request. The fields of this data can change without notice, so you should not write code that depends on its structure. The data may contain: - webhook call latency - webhook errors",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "fulfillmentText": {
          "description": "The text to be pronounced to the user or shown on the screen. Note: This is a legacy field, `fulfillment_messages` should be preferred.",
          "type": "string"
        },
        "outputContexts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "description": "The collection of output contexts. If applicable, `output_contexts.parameters` contains entries with name `.original` containing the original parameter values before the query."
        },
        "webhookSource": {
          "type": "string",
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `source` field returned in the webhook response."
        },
        "webhookPayload": {
          "description": "If the query was fulfilled by a webhook call, this field is set to the value of the `payload` field returned in the webhook response.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2QueryResult"
    },
    "GoogleCloudDialogflowV2IntentTrainingPhrasePart": {
      "description": "Represents a part of a training phrase.",
      "type": "object",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Optional. The parameter name for the value extracted from the annotated part of the example. This field is required for annotated parts of the training phrase."
        },
        "text": {
          "description": "Required. The text for this part.",
          "type": "string"
        },
        "entityType": {
          "type": "string",
          "description": "Optional. The entity type name prefixed with `@`. This field is required for annotated parts of the training phrase."
        },
        "userDefined": {
          "type": "boolean",
          "description": "Optional. Indicates whether the text was manually annotated. This field is set to true when the Dialogflow Console is used to manually annotate the part. When creating an annotated part with the API, you must set this to true."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentTrainingPhrasePart"
    },
    "GoogleCloudDialogflowV2IntentMessageCardButton": {
      "id": "GoogleCloudDialogflowV2IntentMessageCardButton",
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Optional. The text to show on the button."
        },
        "postback": {
          "type": "string",
          "description": "Optional. The text to send back to the Dialogflow API or a URI to open."
        }
      },
      "description": "Contains information about a button."
    },
    "GoogleCloudDialogflowV2IntentMessage": {
      "type": "object",
      "properties": {
        "tableCard": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageTableCard",
          "description": "Table card for Actions on Google."
        },
        "card": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageCard",
          "description": "The card response."
        },
        "carouselSelect": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageCarouselSelect",
          "description": "The carousel card response for Actions on Google."
        },
        "quickReplies": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageQuickReplies",
          "description": "The quick replies response."
        },
        "payload": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "A custom platform-specific response.",
          "type": "object"
        },
        "basicCard": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCard",
          "description": "The basic card response for Actions on Google."
        },
        "listSelect": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageListSelect",
          "description": "The list card response for Actions on Google."
        },
        "mediaContent": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageMediaContent",
          "description": "The media content card for Actions on Google."
        },
        "linkOutSuggestion": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion",
          "description": "The link out suggestion chip for Actions on Google."
        },
        "platform": {
          "enum": [
            "PLATFORM_UNSPECIFIED",
            "FACEBOOK",
            "SLACK",
            "TELEGRAM",
            "KIK",
            "SKYPE",
            "LINE",
            "VIBER",
            "ACTIONS_ON_GOOGLE",
            "GOOGLE_HANGOUTS"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default platform.",
            "Facebook.",
            "Slack.",
            "Telegram.",
            "Kik.",
            "Skype.",
            "Line.",
            "Viber.",
            "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
            "Google Hangouts."
          ],
          "description": "Optional. The platform that this message is intended for."
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "The image response."
        },
        "browseCarouselCard": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard",
          "description": "Browse carousel card for Actions on Google."
        },
        "text": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageText",
          "description": "The text response."
        },
        "suggestions": {
          "description": "The suggestion chips for Actions on Google.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageSuggestions"
        },
        "simpleResponses": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageSimpleResponses",
          "description": "The voice and text-only responses for Actions on Google."
        }
      },
      "description": "A rich response message. Corresponds to the intent `Response` field in the Dialogflow console. For more information, see [Rich response messages](https://cloud.google.com/dialogflow/docs/intents-rich-messages).",
      "id": "GoogleCloudDialogflowV2IntentMessage"
    },
    "GoogleCloudDialogflowV2RestoreAgentRequest": {
      "type": "object",
      "properties": {
        "agentContent": {
          "description": "Zip compressed raw byte content for agent.",
          "format": "byte",
          "type": "string"
        },
        "agentUri": {
          "description": "The URI to a Google Cloud Storage file containing the agent to restore. Note: The URI must start with \"gs://\".",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2RestoreAgentRequest",
      "description": "The request message for Agents.RestoreAgent."
    },
    "GoogleCloudDialogflowV2IntentMessageTableCardCell": {
      "properties": {
        "text": {
          "description": "Required. Text in this cell.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageTableCardCell",
      "description": "Cell of TableCardRow."
    },
    "GoogleCloudDialogflowV2IntentMessageImage": {
      "properties": {
        "accessibilityText": {
          "type": "string",
          "description": "Optional. A text description of the image to be used for accessibility, e.g., screen readers."
        },
        "imageUri": {
          "type": "string",
          "description": "Optional. The public URI to an image file."
        }
      },
      "type": "object",
      "description": "The image response message.",
      "id": "GoogleCloudDialogflowV2IntentMessageImage"
    },
    "GoogleCloudDialogflowV2ValidationResult": {
      "properties": {
        "validationErrors": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2ValidationError"
          },
          "type": "array",
          "description": "Contains all validation errors."
        }
      },
      "type": "object",
      "description": "Represents the output of agent validation.",
      "id": "GoogleCloudDialogflowV2ValidationResult"
    },
    "GoogleCloudDialogflowV2IntentMessageSelectItemInfo": {
      "type": "object",
      "description": "Additional info about the select item for when it is triggered in a dialog.",
      "id": "GoogleCloudDialogflowV2IntentMessageSelectItemInfo",
      "properties": {
        "key": {
          "description": "Required. A unique key that will be sent back to the agent if this response is given.",
          "type": "string"
        },
        "synonyms": {
          "description": "Optional. A list of synonyms that can also be used to trigger this item in dialog.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2WebhookResponse": {
      "type": "object",
      "properties": {
        "outputContexts": {
          "description": "Optional. The collection of output contexts that will overwrite currently active contexts for the session and reset their lifespans. When provided, Dialogflow uses this field to populate QueryResult.output_contexts sent to the integration or API caller.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "type": "array"
        },
        "payload": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Optional. This field can be used to pass custom data from your webhook to the integration or API caller. Arbitrary JSON objects are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_payload sent to the integration or API caller. This field is also used by the [Google Assistant integration](https://cloud.google.com/dialogflow/docs/integrations/aog) for rich response messages. See the format definition at [Google Assistant Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)"
        },
        "sessionEntityTypes": {
          "description": "Optional. Additional session entity types to replace or extend developer entity types with. The entity synonyms apply to all languages and persist for the session. Setting this data from a webhook overwrites the session entity types that have been set using `detectIntent`, `streamingDetectIntent` or SessionEntityType management methods.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          }
        },
        "fulfillmentMessages": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "type": "array",
          "description": "Optional. The rich response messages intended for the end-user. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_messages sent to the integration or API caller."
        },
        "followupEventInput": {
          "description": "Optional. Invokes the supplied events. When this field is set, Dialogflow ignores the `fulfillment_text`, `fulfillment_messages`, and `payload` fields.",
          "$ref": "GoogleCloudDialogflowV2EventInput"
        },
        "fulfillmentText": {
          "description": "Optional. The text response message intended for the end-user. It is recommended to use `fulfillment_messages.text.text[0]` instead. When provided, Dialogflow uses this field to populate QueryResult.fulfillment_text sent to the integration or API caller.",
          "type": "string"
        },
        "source": {
          "description": "Optional. A custom field used to identify the webhook source. Arbitrary strings are supported. When provided, Dialogflow uses this field to populate QueryResult.webhook_source sent to the integration or API caller.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2WebhookResponse",
      "description": "The response message for a webhook call. This response is validated by the Dialogflow server. If validation fails, an error will be returned in the QueryResult.diagnostic_info field. Setting JSON fields to an empty value with the wrong type is a common error. To avoid this error: - Use `\"\"` for empty strings - Use `{}` or `null` for empty objects - Use `[]` or `null` for empty arrays For more information, see the [Protocol Buffers Language Guide](https://developers.google.com/protocol-buffers/docs/proto3#json)."
    },
    "GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata": {
      "type": "object",
      "description": "Metadata associated with the long running operation for Versions.CreateVersion.",
      "id": "GoogleCloudDialogflowCxV3beta1CreateVersionOperationMetadata",
      "properties": {
        "version": {
          "description": "Name of the created version. Format: `projects//locations//agents//flows//versions/`.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1SessionInfo": {
      "description": "Represents session information communicated to and from the webhook.",
      "id": "GoogleCloudDialogflowCxV3beta1SessionInfo",
      "type": "object",
      "properties": {
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "any"
          },
          "description": "Optional for WebhookRequest. Optional for WebhookResponse. All parameters collected from forms and intents during the session. Parameters can be created, updated, or removed by the webhook. To remove a parameter from the session, the webhook should explicitly set the parameter value to null in WebhookResponse. The map is keyed by parameters' display names."
        },
        "session": {
          "type": "string",
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the session. This field can be used by the webhook to identify a user. Format: `projects//locations//agents//sessions/`."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageText": {
      "type": "object",
      "properties": {
        "text": {
          "description": "Optional. The collection of the agent's responses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageText",
      "description": "The text response message."
    },
    "GoogleCloudDialogflowV2IntentMessageCard": {
      "type": "object",
      "description": "The card response message.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. The title of the card."
        },
        "buttons": {
          "description": "Optional. The collection of card buttons.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageCardButton"
          },
          "type": "array"
        },
        "imageUri": {
          "description": "Optional. The public URI to an image file for the card.",
          "type": "string"
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageCard"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction": {
      "description": "Actions on Google action to open a given url.",
      "properties": {
        "urlTypeHint": {
          "type": "string",
          "description": "Optional. Specifies the type of viewer that is used when opening the URL. Defaults to opening via web browser.",
          "enum": [
            "URL_TYPE_HINT_UNSPECIFIED",
            "AMP_ACTION",
            "AMP_CONTENT"
          ],
          "enumDescriptions": [
            "Unspecified",
            "Url would be an amp action",
            "URL that points directly to AMP content, or to a canonical URL which refers to AMP content via ."
          ]
        },
        "url": {
          "type": "string",
          "description": "Required. URL"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItemOpenUrlAction"
    },
    "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard": {
      "id": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCard",
      "properties": {
        "items": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          },
          "description": "Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.",
          "type": "array"
        },
        "imageDisplayOptions": {
          "enumDescriptions": [
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with white bars.",
            "Image is scaled such that the image width and height match or exceed the container dimensions. This may crop the top and bottom of the image if the scaled image height is greater than the container height, or crop the left and right of the image if the scaled image width is greater than the container width. This is similar to \"Zoom Mode\" on a widescreen TV when playing a 4:3 video.",
            "Pad the gaps between image and image frame with a blurred copy of the same image."
          ],
          "type": "string",
          "enum": [
            "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED",
            "GRAY",
            "WHITE",
            "CROPPED",
            "BLURRED_BACKGROUND"
          ],
          "description": "Optional. Settings for displaying the image. Applies to every image in items."
        }
      },
      "description": "Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel",
      "type": "object"
    },
    "GoogleCloudDialogflowV2EntityType": {
      "id": "GoogleCloudDialogflowV2EntityType",
      "properties": {
        "kind": {
          "enum": [
            "KIND_UNSPECIFIED",
            "KIND_MAP",
            "KIND_LIST",
            "KIND_REGEXP"
          ],
          "description": "Required. Indicates the kind of entity type.",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Map entity types allow mapping of a group of synonyms to a reference value.",
            "List entity types contain a set of entries that do not map to reference values. However, list entity types can contain references to other entity types (with or without aliases).",
            "Regexp entity types allow to specify regular expressions in entries values."
          ],
          "type": "string"
        },
        "autoExpansionMode": {
          "enum": [
            "AUTO_EXPANSION_MODE_UNSPECIFIED",
            "AUTO_EXPANSION_MODE_DEFAULT"
          ],
          "type": "string",
          "enumDescriptions": [
            "Auto expansion disabled for the entity.",
            "Allows an agent to recognize values that have not been explicitly listed in the entity."
          ],
          "description": "Optional. Indicates whether the entity type can be automatically expanded."
        },
        "name": {
          "type": "string",
          "description": "The unique identifier of the entity type. Required for EntityTypes.UpdateEntityType and EntityTypes.BatchUpdateEntityTypes methods. Format: `projects//agent/entityTypes/`."
        },
        "entities": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityTypeEntity"
          },
          "description": "Optional. The collection of entity entries associated with the entity type.",
          "type": "array"
        },
        "displayName": {
          "description": "Required. The name of the entity type.",
          "type": "string"
        },
        "enableFuzzyExtraction": {
          "type": "boolean",
          "description": "Optional. Enables fuzzy entity extraction during classification."
        }
      },
      "type": "object",
      "description": "Each intent parameter has a type, called the entity type, which dictates exactly how data from an end-user expression is extracted. Dialogflow provides predefined system entities that can match many common types of data. For example, there are system entities for matching dates, times, colors, email addresses, and so on. You can also create your own custom entities for matching custom data. For example, you could define a vegetable entity that can match the types of vegetables available for purchase with a grocery store agent. For more information, see the [Entity guide](https://cloud.google.com/dialogflow/docs/entities-overview)."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion",
      "type": "object",
      "properties": {
        "action": {
          "description": "Predefined client side actions that user can choose",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedAction"
        },
        "reply": {
          "description": "Predefined replies for user to select instead of typing",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply"
        }
      },
      "description": "Rich Business Messaging (RBM) suggestion. Suggestions allow user to easily select/click a predefined response or perform an action (like opening a web uri)."
    },
    "GoogleCloudDialogflowV2ValidationError": {
      "id": "GoogleCloudDialogflowV2ValidationError",
      "type": "object",
      "description": "Represents a single validation error.",
      "properties": {
        "errorMessage": {
          "type": "string",
          "description": "The detailed error messsage."
        },
        "entries": {
          "description": "The names of the entries that the error is associated with. Format: - \"projects//agent\", if the error is associated with the entire agent. - \"projects//agent/intents/\", if the error is associated with certain intents. - \"projects//agent/intents//trainingPhrases/\", if the error is associated with certain intent training phrases. - \"projects//agent/intents//parameters/\", if the error is associated with certain intent parameters. - \"projects//agent/entities/\", if the error is associated with certain entities.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "severity": {
          "description": "The severity of the error.",
          "enumDescriptions": [
            "Not specified. This value should never be used.",
            "The agent doesn't follow Dialogflow best practicies.",
            "The agent may not behave as expected.",
            "The agent may experience partial failures.",
            "The agent may completely fail."
          ],
          "enum": [
            "SEVERITY_UNSPECIFIED",
            "INFO",
            "WARNING",
            "ERROR",
            "CRITICAL"
          ],
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri": {
      "description": "Opens the user's default web browser app to the specified uri If the user has an app installed that is registered as the default handler for the URL, then this app will be opened instead, and its icon will be used in the suggested action UI.",
      "properties": {
        "uri": {
          "description": "Required. The uri to open on the user device",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionOpenUri"
    },
    "GoogleCloudDialogflowV2Fulfillment": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Optional. The human-readable name of the fulfillment, unique within the agent."
        },
        "name": {
          "type": "string",
          "description": "Required. The unique identifier of the fulfillment. Format: `projects//agent/fulfillment`."
        },
        "features": {
          "type": "array",
          "description": "Optional. The field defines whether the fulfillment is enabled for certain features.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2FulfillmentFeature"
          }
        },
        "enabled": {
          "description": "Optional. Whether fulfillment is enabled.",
          "type": "boolean"
        },
        "genericWebService": {
          "description": "Configuration for a generic web service.",
          "$ref": "GoogleCloudDialogflowV2FulfillmentGenericWebService"
        }
      },
      "description": "By default, your agent responds to a matched intent with a static response. As an alternative, you can provide a more dynamic response by using fulfillment. When you enable fulfillment for an intent, Dialogflow responds to that intent by calling a service that you define. For example, if an end-user wants to schedule a haircut on Friday, your service can check your database and respond to the end-user with availability information for Friday. For more information, see the [fulfillment guide](https://cloud.google.com/dialogflow/docs/fulfillment-overview).",
      "type": "object",
      "id": "GoogleCloudDialogflowV2Fulfillment"
    },
    "GoogleCloudDialogflowV2IntentMessageBasicCard": {
      "properties": {
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        },
        "buttons": {
          "description": "Optional. The collection of card buttons.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageBasicCardButton"
          },
          "type": "array"
        },
        "image": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. The image for the card."
        },
        "formattedText": {
          "description": "Required, unless image is present. The body text of the card.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. The title of the card."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageBasicCard",
      "description": "The basic card message. Useful for displaying information."
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessage": {
      "type": "object",
      "description": "Represents a response message that can be returned by a conversational agent. Response messages are also used for output audio synthesis. The approach is as follows: * If at least one OutputAudioText response is present, then all OutputAudioText responses are linearly concatenated, and the result is used for output audio synthesis. * If the OutputAudioText responses are a mixture of text and SSML, then the concatenated result is treated as SSML; otherwise, the result is treated as either text or SSML as appropriate. The agent designer should ideally use either text or SSML consistently throughout the bot design. * Otherwise, all Text responses are linearly concatenated, and the result is used for output audio synthesis. This approach allows for more sophisticated user experience scenarios, where the text displayed to the user may differ from what is heard.",
      "properties": {
        "mixedAudio": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio",
          "readOnly": true,
          "description": "Output only. An audio response message composed of both the synthesized Dialogflow agent responses and responses defined via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user."
        },
        "liveAgentHandoff": {
          "description": "Hands off conversation to a human agent.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageLiveAgentHandoff"
        },
        "text": {
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageText",
          "description": "Returns a text response."
        },
        "outputAudioText": {
          "description": "A text or ssml response that is preferentially used for TTS output audio synthesis, as described in the comment on the ResponseMessage message.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageOutputAudioText"
        },
        "endInteraction": {
          "readOnly": true,
          "description": "Output only. A signal that indicates the interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only when the conversation reaches `END_SESSION` or `END_PAGE` page. It is not supposed to be defined by the user. It's guaranteed that there is at most one such message in each response.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction"
        },
        "payload": {
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "description": "Returns a response containing a custom, platform-specific payload."
        },
        "playAudio": {
          "description": "Signal that the client should play an audio clip hosted at a client-specific URI. Dialogflow uses this to construct mixed_audio. However, Dialogflow itself does not try to read or process the URI in any way.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio"
        },
        "conversationSuccess": {
          "description": "Indicates that the conversation succeeded.",
          "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageConversationSuccess"
        }
      },
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction": {
      "description": "Indicates that interaction with the Dialogflow agent has ended. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "type": "object",
      "properties": {},
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageEndInteraction"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech": {
      "properties": {
        "ssml": {
          "description": "The SSML to be synthesized. For more information, see [SSML](https://developers.google.com/actions/reference/ssml).",
          "type": "string"
        },
        "text": {
          "description": "The raw text to be synthesized.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageTelephonySynthesizeSpeech",
      "description": "Synthesizes speech and plays back the synthesized audio to the caller in Telephony Gateway. Telephony Gateway takes the synthesizer settings from `DetectIntentResponse.output_audio_config` which can either be set at request-level or can come from the agent-level synthesizer config.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2ListSessionEntityTypesResponse": {
      "description": "The response message for SessionEntityTypes.ListSessionEntityTypes.",
      "properties": {
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        },
        "sessionEntityTypes": {
          "description": "The list of session entity types. There will be a maximum number of items returned based on the page_size field in the request.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2SessionEntityType"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2ListSessionEntityTypesResponse",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmText": {
      "type": "object",
      "properties": {
        "rbmSuggestion": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestion"
          },
          "description": "Optional. One or more suggestions to show to the user.",
          "type": "array"
        },
        "text": {
          "type": "string",
          "description": "Required. Text sent and displayed to the user."
        }
      },
      "description": "Rich Business Messaging (RBM) text response with suggestions.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmText"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageListSelect": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageListSelect",
      "description": "The card for presenting a list of options to select from.",
      "properties": {
        "title": {
          "type": "string",
          "description": "Optional. The overall title of the list."
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle of the list."
        },
        "items": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem"
          },
          "type": "array",
          "description": "Required. List items."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2ConversationEvent": {
      "description": "Represents a notification sent to Pub/Sub subscribers for conversation lifecycle events.",
      "id": "GoogleCloudDialogflowV2ConversationEvent",
      "properties": {
        "newMessagePayload": {
          "$ref": "GoogleCloudDialogflowV2Message",
          "description": "Payload of NEW_MESSAGE event."
        },
        "type": {
          "enum": [
            "TYPE_UNSPECIFIED",
            "CONVERSATION_STARTED",
            "CONVERSATION_FINISHED",
            "HUMAN_INTERVENTION_NEEDED",
            "NEW_MESSAGE",
            "UNRECOVERABLE_ERROR"
          ],
          "type": "string",
          "description": "The type of the event that this notification refers to.",
          "enumDescriptions": [
            "Type not set.",
            "A new conversation has been opened. This is fired when a telephone call is answered, or a conversation is created via the API.",
            "An existing conversation has closed. This is fired when a telephone call is terminated, or a conversation is closed via the API.",
            "An existing conversation has received notification from Dialogflow that human intervention is required.",
            "An existing conversation has received a new message, either from API or telephony. It is configured in ConversationProfile.new_message_event_notification_config",
            "Unrecoverable error during a telephone call. In general non-recoverable errors only occur if something was misconfigured in the ConversationProfile corresponding to the call. After a non-recoverable error, Dialogflow may stop responding. We don't fire this event: * in an API call because we can directly return the error, or, * when we can recover from an error."
          ]
        },
        "errorStatus": {
          "$ref": "GoogleRpcStatus",
          "description": "More detailed information about an error. Only set for type UNRECOVERABLE_ERROR_IN_PHONE_CALL."
        },
        "conversation": {
          "description": "The unique identifier of the conversation this notification refers to. Format: `projects//conversations/`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1Sentiment": {
      "description": "The sentiment, such as positive/negative feeling or association, for a unit of analysis, such as the query text.",
      "properties": {
        "magnitude": {
          "description": "A non-negative number in the [0, +inf) range, which represents the absolute magnitude of sentiment, regardless of score (positive or negative).",
          "format": "float",
          "type": "number"
        },
        "score": {
          "format": "float",
          "description": "Sentiment score between -1.0 (negative sentiment) and 1.0 (positive sentiment).",
          "type": "number"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1Sentiment",
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio": {
      "properties": {
        "segments": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudioSegment"
          },
          "description": "Segments this audio response is composed of."
        }
      },
      "description": "Represents an audio message that is composed of both segments synthesized from the Dialogflow agent prompts and ones hosted externally at the specified URIs. The external URIs are specified via play_audio. This message is generated by Dialogflow only and not supposed to be defined by the user.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessageMixedAudio",
      "type": "object"
    },
    "GoogleCloudDialogflowV2Environment": {
      "type": "object",
      "description": "You can create multiple versions of your agent and publish them to separate environments. When you edit an agent, you are editing the draft agent. At any point, you can save the draft agent as an agent version, which is an immutable snapshot of your agent. When you save the draft agent, it is published to the default environment. When you create agent versions, you can publish them to custom environments. You can create a variety of custom environments for: - testing - development - production - etc. For more information, see the [versions and environments guide](https://cloud.google.com/dialogflow/docs/agents-versions).",
      "id": "GoogleCloudDialogflowV2Environment",
      "properties": {
        "description": {
          "description": "Optional. The developer-provided description for this environment. The maximum length is 500 characters. If exceeded, the request is rejected.",
          "type": "string"
        },
        "name": {
          "description": "Output only. The unique identifier of this agent environment. Format: `projects//agent/environments/`. For Environment ID, \"-\" is reserved for 'draft' environment.",
          "type": "string",
          "readOnly": true
        },
        "state": {
          "readOnly": true,
          "description": "Output only. The state of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
          "enumDescriptions": [
            "Not specified. This value is not used.",
            "Stopped.",
            "Loading.",
            "Running."
          ],
          "enum": [
            "STATE_UNSPECIFIED",
            "STOPPED",
            "LOADING",
            "RUNNING"
          ],
          "type": "string"
        },
        "agentVersion": {
          "type": "string",
          "description": "Optional. The agent version loaded into this environment. Format: `projects//agent/versions/`."
        },
        "updateTime": {
          "description": "Output only. The last update time of this environment. This field is read-only, i.e., it cannot be set by create and update methods.",
          "type": "string",
          "format": "google-datetime",
          "readOnly": true
        }
      }
    },
    "GoogleCloudDialogflowCxV3beta1PageInfo": {
      "description": "Represents page information communicated to and from the webhook.",
      "id": "GoogleCloudDialogflowCxV3beta1PageInfo",
      "properties": {
        "currentPage": {
          "type": "string",
          "description": "Always present for WebhookRequest. Ignored for WebhookResponse. The unique identifier of the current page. Format: `projects//locations//agents//flows//pages/`."
        },
        "formInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo",
          "description": "Optional for both WebhookRequest and WebhookResponse. Information about the form."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply": {
      "properties": {
        "text": {
          "description": "Suggested reply text.",
          "type": "string"
        },
        "postbackData": {
          "description": "Opaque payload that the Dialogflow receives in a user event when the user taps the suggested reply. This data will be also forwarded to webhook to allow performing custom business logic.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedReply",
      "description": "Rich Business Messaging (RBM) suggested reply that the user can click instead of typing in their own response."
    },
    "GoogleCloudDialogflowV2IntentMessageColumnProperties": {
      "type": "object",
      "properties": {
        "horizontalAlignment": {
          "enumDescriptions": [
            "Text is aligned to the leading edge of the column.",
            "Text is aligned to the leading edge of the column.",
            "Text is centered in the column.",
            "Text is aligned to the trailing edge of the column."
          ],
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "LEADING",
            "CENTER",
            "TRAILING"
          ],
          "description": "Optional. Defines text alignment for all cells in this column.",
          "type": "string"
        },
        "header": {
          "type": "string",
          "description": "Required. Column heading."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentMessageColumnProperties",
      "description": "Column properties for TableCard."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponses",
      "description": "The collection of simple response candidates. This message in `QueryResult.fulfillment_messages` and `WebhookResponse.fulfillment_messages` should contain only one `SimpleResponse`.",
      "properties": {
        "simpleResponses": {
          "description": "Required. The list of simple responses.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSimpleResponse"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCard",
      "description": "Browse Carousel Card for Actions on Google. https://developers.google.com/actions/assistant/responses#browsing_carousel",
      "type": "object",
      "properties": {
        "imageDisplayOptions": {
          "description": "Optional. Settings for displaying the image. Applies to every image in items.",
          "type": "string",
          "enumDescriptions": [
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with gray bars.",
            "Fill the gaps between the image and the image container with white bars.",
            "Image is scaled such that the image width and height match or exceed the container dimensions. This may crop the top and bottom of the image if the scaled image height is greater than the container height, or crop the left and right of the image if the scaled image width is greater than the container width. This is similar to \"Zoom Mode\" on a widescreen TV when playing a 4:3 video.",
            "Pad the gaps between image and image frame with a blurred copy of the same image."
          ],
          "enum": [
            "IMAGE_DISPLAY_OPTIONS_UNSPECIFIED",
            "GRAY",
            "WHITE",
            "CROPPED",
            "BLURRED_BACKGROUND"
          ]
        },
        "items": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBrowseCarouselCardBrowseCarouselCardItem"
          },
          "description": "Required. List of items in the Browse Carousel Card. Minimum of two items, maximum of ten.",
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCard": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCard",
      "description": "The card response message.",
      "properties": {
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        },
        "title": {
          "type": "string",
          "description": "Optional. The title of the card."
        },
        "buttons": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageCardButton"
          },
          "description": "Optional. The collection of card buttons.",
          "type": "array"
        },
        "imageUri": {
          "description": "Optional. The public URI to an image file for the card.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2OriginalDetectIntentRequest": {
      "description": "Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.",
      "type": "object",
      "properties": {
        "source": {
          "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers.",
          "type": "string"
        },
        "version": {
          "type": "string",
          "description": "Optional. The version of the protocol used for this request. This field is AoG-specific."
        },
        "payload": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { \"telephony\": { \"caller_id\": \"+18558363987\" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.",
          "type": "object"
        }
      },
      "id": "GoogleCloudDialogflowV2OriginalDetectIntentRequest"
    },
    "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio": {
      "type": "object",
      "description": "Specifies an audio clip to be played by the client as part of the response.",
      "id": "GoogleCloudDialogflowCxV3beta1ResponseMessagePlayAudio",
      "properties": {
        "audioUri": {
          "type": "string",
          "description": "Required. URI of the audio clip. Dialogflow does not impose any validation on this value. It is specific to the client that reads it."
        },
        "allowPlaybackInterruption": {
          "readOnly": true,
          "description": "Output only. Whether the playback of this message can be interrupted by the end user's speech and the client can then starts the next Dialogflow request.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDialogflowV2MessageAnnotation": {
      "description": "Represents the result of annotation for the message.",
      "id": "GoogleCloudDialogflowV2MessageAnnotation",
      "properties": {
        "parts": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2AnnotatedMessagePart"
          },
          "description": "The collection of annotated message parts ordered by their position in the message. You can recover the annotated message by concatenating [AnnotatedMessagePart.text]."
        },
        "containEntities": {
          "type": "boolean",
          "description": "Indicates whether the text message contains entities."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageSuggestions": {
      "id": "GoogleCloudDialogflowV2IntentMessageSuggestions",
      "properties": {
        "suggestions": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageSuggestion"
          },
          "type": "array",
          "description": "Required. The list of suggested replies."
        }
      },
      "type": "object",
      "description": "The collection of suggestions."
    },
    "GoogleCloudDialogflowV2beta1Context": {
      "type": "object",
      "description": "Dialogflow contexts are similar to natural language context. If a person says to you \"they are orange\", you need context in order to understand what \"they\" is referring to. Similarly, for Dialogflow to handle an end-user expression like that, it needs to be provided with context in order to correctly match an intent. Using contexts, you can control the flow of a conversation. You can configure contexts for an intent by setting input and output contexts, which are identified by string names. When an intent is matched, any configured output contexts for that intent become active. While any contexts are active, Dialogflow is more likely to match intents that are configured with input contexts that correspond to the currently active contexts. For more information about context, see the [Contexts guide](https://cloud.google.com/dialogflow/docs/contexts-overview).",
      "id": "GoogleCloudDialogflowV2beta1Context",
      "properties": {
        "lifespanCount": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. The number of conversational query requests after which the context expires. The default is `0`. If set to `0`, the context expires immediately. Contexts expire automatically after 20 minutes if there are no matching queries."
        },
        "parameters": {
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          },
          "type": "object",
          "description": "Optional. The collection of parameters associated with this context. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value"
        },
        "name": {
          "description": "Required. The unique identifier of the context. Supported formats: - `projects//agent/sessions//contexts/`, - `projects//locations//agent/sessions//contexts/`, - `projects//agent/environments//users//sessions//contexts/`, - `projects//locations//agent/environments//users//sessions//contexts/`, The `Context ID` is always converted to lowercase, may only contain characters in a-zA-Z0-9_-% and may be at most 250 bytes long. If `Environment ID` is not specified, we assume default 'draft' environment. If `User ID` is not specified, we assume default '-' user. The following context names are reserved for internal use by Dialogflow. You should not use these contexts or create contexts with these names: * `__system_counters__` * `*_id_dialog_context` * `*_dialog_params_size`",
          "type": "string"
        }
      }
    },
    "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies": {
      "type": "object",
      "description": "The quick replies response message.",
      "properties": {
        "title": {
          "description": "Optional. The title of the collection of quick replies.",
          "type": "string"
        },
        "quickReplies": {
          "description": "Optional. The collection of quick replies.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageQuickReplies"
    },
    "GoogleCloudDialogflowV2Intent": {
      "properties": {
        "displayName": {
          "description": "Required. The name of this intent.",
          "type": "string"
        },
        "events": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The collection of event names that trigger the intent. If the collection of input contexts is not empty, all of the contexts must be present in the active user session for an event to trigger this intent. Event names are limited to 150 characters."
        },
        "priority": {
          "type": "integer",
          "description": "Optional. The priority of this intent. Higher numbers represent higher priorities. - If the supplied value is unspecified or 0, the service translates the value to 500,000, which corresponds to the `Normal` priority in the console. - If the supplied value is negative, the intent is ignored in runtime detect intent requests.",
          "format": "int32"
        },
        "rootFollowupIntentName": {
          "type": "string",
          "description": "Read-only. The unique identifier of the root intent in the chain of followup intents. It identifies the correct followup intents chain for this intent. We populate this field only in the output. Format: `projects//agent/intents/`."
        },
        "mlDisabled": {
          "description": "Optional. Indicates whether Machine Learning is disabled for the intent. Note: If `ml_disabled` setting is set to true, then this intent is not taken into account during inference in `ML ONLY` match mode. Also, auto-markup in the UI is turned off.",
          "type": "boolean"
        },
        "webhookState": {
          "type": "string",
          "enum": [
            "WEBHOOK_STATE_UNSPECIFIED",
            "WEBHOOK_STATE_ENABLED",
            "WEBHOOK_STATE_ENABLED_FOR_SLOT_FILLING"
          ],
          "enumDescriptions": [
            "Webhook is disabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent.",
            "Webhook is enabled in the agent and in the intent. Also, each slot filling prompt is forwarded to the webhook."
          ],
          "description": "Optional. Indicates whether webhooks are enabled for the intent."
        },
        "parentFollowupIntentName": {
          "type": "string",
          "description": "Read-only after creation. The unique identifier of the parent intent in the chain of followup intents. You can set this field when creating an intent, for example with CreateIntent or BatchUpdateIntents, in order to make this intent a followup intent. It identifies the parent followup intent. Format: `projects//agent/intents/`."
        },
        "resetContexts": {
          "description": "Optional. Indicates whether to delete all contexts in the current session when this intent is matched.",
          "type": "boolean"
        },
        "isFallback": {
          "description": "Optional. Indicates whether this is a fallback intent.",
          "type": "boolean"
        },
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessage"
          },
          "type": "array",
          "description": "Optional. The collection of rich messages corresponding to the `Response` field in the Dialogflow console."
        },
        "parameters": {
          "type": "array",
          "description": "Optional. The collection of parameters associated with the intent.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentParameter"
          }
        },
        "outputContexts": {
          "description": "Optional. The collection of contexts that are activated when the intent is matched. Context messages in this collection should not set the parameters field. Setting the `lifespan_count` to 0 will reset the context when the intent is matched. Format: `projects//agent/sessions/-/contexts/`.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Context"
          },
          "type": "array"
        },
        "trainingPhrases": {
          "type": "array",
          "description": "Optional. The collection of examples that the agent is trained on.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentTrainingPhrase"
          }
        },
        "defaultResponsePlatforms": {
          "type": "array",
          "description": "Optional. The list of platforms for which the first responses will be copied from the messages in PLATFORM_UNSPECIFIED (i.e. default platform).",
          "items": {
            "enum": [
              "PLATFORM_UNSPECIFIED",
              "FACEBOOK",
              "SLACK",
              "TELEGRAM",
              "KIK",
              "SKYPE",
              "LINE",
              "VIBER",
              "ACTIONS_ON_GOOGLE",
              "GOOGLE_HANGOUTS"
            ],
            "type": "string",
            "enumDescriptions": [
              "Default platform.",
              "Facebook.",
              "Slack.",
              "Telegram.",
              "Kik.",
              "Skype.",
              "Line.",
              "Viber.",
              "Google Assistant See [Dialogflow webhook format](https://developers.google.com/assistant/actions/build/json/dialogflow-webhook-json)",
              "Google Hangouts."
            ]
          }
        },
        "followupIntentInfo": {
          "type": "array",
          "description": "Read-only. Information about all followup intents that have this intent as a direct or indirect parent. We populate this field only in the output.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentFollowupIntentInfo"
          }
        },
        "inputContextNames": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. The list of context names required for this intent to be triggered. Format: `projects//agent/sessions/-/contexts/`."
        },
        "action": {
          "type": "string",
          "description": "Optional. The name of the action associated with the intent. Note: The action name must not contain whitespaces."
        },
        "name": {
          "type": "string",
          "description": "Optional. The unique identifier of this intent. Required for Intents.UpdateIntent and Intents.BatchUpdateIntents methods. Format: `projects//agent/intents/`."
        }
      },
      "description": "An intent categorizes an end-user's intention for one conversation turn. For each agent, you define many intents, where your combined intents can handle a complete conversation. When an end-user writes or says something, referred to as an end-user expression or end-user input, Dialogflow matches the end-user input to the best intent in your agent. Matching an intent is also known as intent classification. For more information, see the [intent guide](https://cloud.google.com/dialogflow/docs/intents-overview).",
      "id": "GoogleCloudDialogflowV2Intent",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageCardButton": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageCardButton",
      "description": "Optional. Contains information about a button.",
      "properties": {
        "text": {
          "type": "string",
          "description": "Optional. The text to show on the button."
        },
        "postback": {
          "type": "string",
          "description": "Optional. The text to send back to the Dialogflow API or a URI to open."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo": {
      "type": "object",
      "properties": {
        "synonyms": {
          "items": {
            "type": "string"
          },
          "description": "Optional. A list of synonyms that can also be used to trigger this item in dialog.",
          "type": "array"
        },
        "key": {
          "description": "Required. A unique key that will be sent back to the agent if this response is given.",
          "type": "string"
        }
      },
      "description": "Additional info about the select item for when it is triggered in a dialog.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo"
    },
    "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo": {
      "id": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfo",
      "description": "Represents form information.",
      "type": "object",
      "properties": {
        "parameterInfo": {
          "description": "Optional for both WebhookRequest and WebhookResponse. The parameters contained in the form. Note that the webhook cannot add or remove any form parameter.",
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo"
          },
          "type": "array"
        }
      }
    },
    "GoogleCloudDialogflowV2EntityTypeBatch": {
      "type": "object",
      "properties": {
        "entityTypes": {
          "type": "array",
          "description": "A collection of entity types.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2EntityType"
          }
        }
      },
      "description": "This message is a wrapper around a collection of entity types.",
      "id": "GoogleCloudDialogflowV2EntityTypeBatch"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation": {
      "type": "object",
      "description": "Opens the device's location chooser so the user can pick a location to send back to the agent.",
      "properties": {},
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmSuggestedActionRbmSuggestedActionShareLocation"
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo": {
      "properties": {
        "tag": {
          "description": "Always present. The tag used to identify which fulfillment is being called.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo",
      "description": "Represents fulfillment information communicated to the webhook."
    },
    "GoogleCloudDialogflowV2SpeechContext": {
      "properties": {
        "phrases": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. A list of strings containing words and phrases that the speech recognizer should recognize with higher likelihood. This list can be used to: * improve accuracy for words and phrases you expect the user to say, e.g. typical commands for your Dialogflow agent * add additional words to the speech recognizer vocabulary * ... See the [Cloud Speech documentation](https://cloud.google.com/speech-to-text/quotas) for usage limits."
        },
        "boost": {
          "type": "number",
          "format": "float",
          "description": "Optional. Boost for this context compared to other contexts: * If the boost is positive, Dialogflow will increase the probability that the phrases in this context are recognized over similar sounding phrases. * If the boost is unspecified or non-positive, Dialogflow will not apply any boost. Dialogflow recommends that you use boosts in the range (0, 20] and that you find a value that fits your use case with binary search."
        }
      },
      "description": "Hints for the speech recognizer to help with recognition in a specific conversation state.",
      "id": "GoogleCloudDialogflowV2SpeechContext",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest": {
      "properties": {
        "version": {
          "type": "string",
          "description": "Optional. The version of the protocol used for this request. This field is AoG-specific."
        },
        "payload": {
          "description": "Optional. This field is set to the value of the `QueryParameters.payload` field passed in the request. Some integrations that query a Dialogflow agent may provide additional information in the payload. In particular, for the Dialogflow Phone Gateway integration, this field has the form: { \"telephony\": { \"caller_id\": \"+18558363987\" } } Note: The caller ID field (`caller_id`) will be redacted for Trial Edition agents and populated with the caller ID in [E.164 format](https://en.wikipedia.org/wiki/E.164) for Essentials Edition agents.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "source": {
          "type": "string",
          "description": "The source of this request, e.g., `google`, `facebook`, `slack`. It is set by Dialogflow-owned servers."
        }
      },
      "description": "Represents the contents of the original request that was passed to the `[Streaming]DetectIntent` call.",
      "id": "GoogleCloudDialogflowV2beta1OriginalDetectIntentRequest",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion": {
      "type": "object",
      "properties": {
        "uri": {
          "description": "Required. The URI of the app or site to open when the user taps the suggestion chip.",
          "type": "string"
        },
        "destinationName": {
          "type": "string",
          "description": "Required. The name of the app or site this chip is linking to."
        }
      },
      "description": "The suggestion chip message that allows the user to jump out to the app or website associated with this agent.",
      "id": "GoogleCloudDialogflowV2IntentMessageLinkOutSuggestion"
    },
    "GoogleCloudDialogflowV2BatchUpdateIntentsResponse": {
      "type": "object",
      "description": "The response message for Intents.BatchUpdateIntents.",
      "id": "GoogleCloudDialogflowV2BatchUpdateIntentsResponse",
      "properties": {
        "intents": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2Intent"
          },
          "type": "array",
          "description": "The collection of updated or created intents."
        }
      }
    },
    "GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata": {
      "properties": {
        "state": {
          "enumDescriptions": [
            "State unspecified.",
            "The operation has been created.",
            "The operation is currently running.",
            "The operation is done, either cancelled or completed."
          ],
          "readOnly": true,
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "PENDING",
            "RUNNING",
            "DONE"
          ],
          "description": "Required. Output only. The current state of this operation."
        }
      },
      "description": "Metadata in google::longrunning::Operation for Knowledge operations.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1KnowledgeOperationMetadata"
    },
    "GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse": {
      "type": "object",
      "properties": {
        "intents": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1Intent"
          },
          "description": "The collection of updated or created intents.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDialogflowV2beta1BatchUpdateIntentsResponse",
      "description": "The response message for Intents.BatchUpdateIntents."
    },
    "GoogleCloudDialogflowV2beta1EventInput": {
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1EventInput",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language."
        },
        "parameters": {
          "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          }
        },
        "name": {
          "description": "Required. The unique identifier of the event.",
          "type": "string"
        }
      },
      "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`."
    },
    "GoogleCloudDialogflowV2SearchAgentsResponse": {
      "description": "The response message for Agents.SearchAgents.",
      "type": "object",
      "properties": {
        "agents": {
          "description": "The list of agents. There will be a maximum number of items returned based on the page_size field in the request.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2Agent"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "Token to retrieve the next page of results, or empty if there are no more results in the list.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2SearchAgentsResponse"
    },
    "GoogleCloudDialogflowV2IntentMessageListSelect": {
      "id": "GoogleCloudDialogflowV2IntentMessageListSelect",
      "properties": {
        "items": {
          "description": "Required. List items.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageListSelectItem"
          }
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. Subtitle of the list."
        },
        "title": {
          "type": "string",
          "description": "Optional. The overall title of the list."
        }
      },
      "description": "The card for presenting a list of options to select from.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2IntentFollowupIntentInfo": {
      "description": "Represents a single followup intent in the chain.",
      "type": "object",
      "properties": {
        "followupIntentName": {
          "description": "The unique identifier of the followup intent. Format: `projects//agent/intents/`.",
          "type": "string"
        },
        "parentFollowupIntentName": {
          "type": "string",
          "description": "The unique identifier of the followup intent's parent. Format: `projects//agent/intents/`."
        }
      },
      "id": "GoogleCloudDialogflowV2IntentFollowupIntentInfo"
    },
    "GoogleCloudDialogflowV2IntentMessageCarouselSelect": {
      "id": "GoogleCloudDialogflowV2IntentMessageCarouselSelect",
      "type": "object",
      "description": "The card for presenting a carousel of options to select from.",
      "properties": {
        "items": {
          "description": "Required. Carousel items.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDialogflowV2IntentMessageCarouselSelectItem"
          }
        }
      }
    },
    "GoogleRpcStatus": {
      "id": "GoogleRpcStatus",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            }
          },
          "type": "array"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction": {
      "type": "object",
      "properties": {
        "uri": {
          "type": "string",
          "description": "Required. The HTTP or HTTPS scheme URI."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButtonOpenUriAction",
      "description": "Opens the given URI."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem": {
      "type": "object",
      "properties": {
        "image": {
          "description": "Optional. The image to display.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "description": {
          "type": "string",
          "description": "Optional. The main text describing the item."
        },
        "title": {
          "description": "Required. The title of the list item.",
          "type": "string"
        },
        "info": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageSelectItemInfo",
          "description": "Required. Additional information about this option."
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageListSelectItem",
      "description": "An item in the list."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard": {
      "description": "Carousel Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. If you want to show a single card with more control over the layout, please use RbmStandaloneCard instead.",
      "type": "object",
      "properties": {
        "cardWidth": {
          "enum": [
            "CARD_WIDTH_UNSPECIFIED",
            "SMALL",
            "MEDIUM"
          ],
          "enumDescriptions": [
            "Not specified.",
            "120 DP. Note that tall media cannot be used.",
            "232 DP."
          ],
          "type": "string",
          "description": "Required. The width of the cards in the carousel."
        },
        "cardContents": {
          "type": "array",
          "description": "Required. The cards in the carousel. A carousel must have at least 2 cards and at most 10.",
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent"
          }
        }
      },
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmCarouselCard"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard": {
      "properties": {
        "thumbnailImageAlignment": {
          "enumDescriptions": [
            "Not specified.",
            "Thumbnail preview is left-aligned.",
            "Thumbnail preview is right-aligned."
          ],
          "type": "string",
          "description": "Required if orientation is horizontal. Image preview alignment for standalone cards with horizontal layout.",
          "enum": [
            "THUMBNAIL_IMAGE_ALIGNMENT_UNSPECIFIED",
            "LEFT",
            "RIGHT"
          ]
        },
        "cardOrientation": {
          "enum": [
            "CARD_ORIENTATION_UNSPECIFIED",
            "HORIZONTAL",
            "VERTICAL"
          ],
          "type": "string",
          "description": "Required. Orientation of the card.",
          "enumDescriptions": [
            "Not specified.",
            "Horizontal layout.",
            "Vertical layout."
          ]
        },
        "cardContent": {
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageRbmCardContent",
          "description": "Required. Card content."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageRbmStandaloneCard",
      "description": "Standalone Rich Business Messaging (RBM) rich card. Rich cards allow you to respond to users with more vivid content, e.g. with media and suggestions. You can group multiple rich cards into one using RbmCarouselCard but carousel cards will give you less control over the card layout."
    },
    "GoogleCloudDialogflowV2AnnotatedMessagePart": {
      "type": "object",
      "properties": {
        "entityType": {
          "type": "string",
          "description": "The [Dialogflow system entity type](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. If this is empty, Dialogflow could not annotate the phrase part with a system entity."
        },
        "text": {
          "type": "string",
          "description": "A part of a message possibly annotated with an entity."
        },
        "formattedValue": {
          "type": "any",
          "description": "The [Dialogflow system entity formatted value ](https://cloud.google.com/dialogflow/docs/reference/system-entities) of this message part. For example for a system entity of type `@sys.unit-currency`, this may contain: { \"amount\": 5, \"currency\": \"USD\" } "
        }
      },
      "id": "GoogleCloudDialogflowV2AnnotatedMessagePart",
      "description": "Represents a part of a message possibly annotated with an entity. The part can be an entity or purely a part of the message between two entities or message start/end."
    },
    "GoogleCloudDialogflowV2beta1IntentMessageSuggestion": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageSuggestion",
      "type": "object",
      "properties": {
        "title": {
          "type": "string",
          "description": "Required. The text shown the in the suggestion chip."
        }
      },
      "description": "The suggestion chip message that the user can tap to quickly post a reply to the conversation."
    },
    "GoogleCloudDialogflowV2beta1IntentParameter": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The name of the parameter."
        },
        "name": {
          "description": "The unique identifier of this parameter.",
          "type": "string"
        },
        "isList": {
          "type": "boolean",
          "description": "Optional. Indicates whether the parameter represents a list of values."
        },
        "entityTypeDisplayName": {
          "type": "string",
          "description": "Optional. The name of the entity type, prefixed with `@`, that describes values of the parameter. If the parameter is required, this must be provided."
        },
        "value": {
          "description": "Optional. The definition of the parameter value. It can be: - a constant string, - a parameter value defined as `$parameter_name`, - an original parameter value defined as `$parameter_name.original`, - a parameter value from some context defined as `#context_name.parameter_name`.",
          "type": "string"
        },
        "prompts": {
          "description": "Optional. The collection of prompts that the agent can present to the user in order to collect a value for the parameter.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "defaultValue": {
          "description": "Optional. The default value to use when the `value` yields an empty result. Default values can be extracted from contexts by using the following syntax: `#context_name.parameter_name`.",
          "type": "string"
        },
        "mandatory": {
          "description": "Optional. Indicates whether the parameter is required. That is, whether the intent cannot be completed without collecting the parameter value.",
          "type": "boolean"
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowV2beta1IntentParameter",
      "description": "Represents intent parameters."
    },
    "GoogleCloudDialogflowCxV3beta1WebhookRequest": {
      "description": "The request message for a webhook call.",
      "properties": {
        "detectIntentResponseId": {
          "type": "string",
          "description": "Always present. The unique identifier of the DetectIntentResponse that will be returned to the API caller."
        },
        "sessionInfo": {
          "description": "Information about session status.",
          "$ref": "GoogleCloudDialogflowCxV3beta1SessionInfo"
        },
        "payload": {
          "type": "object",
          "description": "Custom data set in QueryParameters.payload.",
          "additionalProperties": {
            "description": "Properties of the object.",
            "type": "any"
          }
        },
        "messages": {
          "items": {
            "$ref": "GoogleCloudDialogflowCxV3beta1ResponseMessage"
          },
          "description": "The list of rich message responses to present to the user. Webhook can choose to append or replace this list in WebhookResponse.fulfillment_response;",
          "type": "array"
        },
        "intentInfo": {
          "description": "Information about the last matched intent.",
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestIntentInfo"
        },
        "fulfillmentInfo": {
          "description": "Always present. Information about the fulfillment that triggered this webhook call.",
          "$ref": "GoogleCloudDialogflowCxV3beta1WebhookRequestFulfillmentInfo"
        },
        "pageInfo": {
          "$ref": "GoogleCloudDialogflowCxV3beta1PageInfo",
          "description": "Information about page status."
        }
      },
      "type": "object",
      "id": "GoogleCloudDialogflowCxV3beta1WebhookRequest"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties": {
      "properties": {
        "header": {
          "type": "string",
          "description": "Required. Column heading."
        },
        "horizontalAlignment": {
          "enumDescriptions": [
            "Text is aligned to the leading edge of the column.",
            "Text is aligned to the leading edge of the column.",
            "Text is centered in the column.",
            "Text is aligned to the trailing edge of the column."
          ],
          "type": "string",
          "description": "Optional. Defines text alignment for all cells in this column.",
          "enum": [
            "HORIZONTAL_ALIGNMENT_UNSPECIFIED",
            "LEADING",
            "CENTER",
            "TRAILING"
          ]
        }
      },
      "type": "object",
      "description": "Column properties for TableCard.",
      "id": "GoogleCloudDialogflowV2beta1IntentMessageColumnProperties"
    },
    "GoogleCloudDialogflowV2IntentMessageText": {
      "properties": {
        "text": {
          "description": "Optional. The collection of the agent's responses.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "The text response message.",
      "type": "object",
      "id": "GoogleCloudDialogflowV2IntentMessageText"
    },
    "GoogleCloudDialogflowV2ImportAgentRequest": {
      "properties": {
        "agentContent": {
          "type": "string",
          "format": "byte",
          "description": "Zip compressed raw byte content for agent."
        },
        "agentUri": {
          "description": "The URI to a Google Cloud Storage file containing the agent to import. Note: The URI must start with \"gs://\".",
          "type": "string"
        }
      },
      "id": "GoogleCloudDialogflowV2ImportAgentRequest",
      "description": "The request message for Agents.ImportAgent.",
      "type": "object"
    },
    "GoogleCloudDialogflowV2beta1IntentMessageBasicCard": {
      "id": "GoogleCloudDialogflowV2beta1IntentMessageBasicCard",
      "description": "The basic card message. Useful for displaying information.",
      "properties": {
        "buttons": {
          "items": {
            "$ref": "GoogleCloudDialogflowV2beta1IntentMessageBasicCardButton"
          },
          "description": "Optional. The collection of card buttons.",
          "type": "array"
        },
        "image": {
          "description": "Optional. The image for the card.",
          "$ref": "GoogleCloudDialogflowV2beta1IntentMessageImage"
        },
        "title": {
          "type": "string",
          "description": "Optional. The title of the card."
        },
        "subtitle": {
          "type": "string",
          "description": "Optional. The subtitle of the card."
        },
        "formattedText": {
          "type": "string",
          "description": "Required, unless image is present. The body text of the card."
        }
      },
      "type": "object"
    },
    "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo": {
      "type": "object",
      "description": "Represents parameter information.",
      "id": "GoogleCloudDialogflowCxV3beta1PageInfoFormInfoParameterInfo",
      "properties": {
        "value": {
          "type": "any",
          "description": "Optional for both WebhookRequest and WebhookResponse. The value of the parameter. This field can be set by the webhook to change the parameter value."
        },
        "justCollected": {
          "description": "Optional for WebhookRequest. Ignored for WebhookResponse. Indicates if the parameter value was just collected on the last conversation turn.",
          "type": "boolean"
        },
        "displayName": {
          "type": "string",
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The human-readable name of the parameter, unique within the form. This field cannot be modified by the webhook."
        },
        "required": {
          "type": "boolean",
          "description": "Optional for both WebhookRequest and WebhookResponse. Indicates whether the parameter is required. Optional parameters will not trigger prompts; however, they are filled if the user specifies them. Required parameters must be filled before form filling concludes."
        },
        "state": {
          "type": "string",
          "enum": [
            "PARAMETER_STATE_UNSPECIFIED",
            "EMPTY",
            "INVALID",
            "FILLED"
          ],
          "description": "Always present for WebhookRequest. Required for WebhookResponse. The state of the parameter. This field can be set to INVALID by the webhook to invalidate the parameter; other values set by the webhook will be ignored.",
          "enumDescriptions": [
            "Not specified. This value should be never used.",
            "Indicates that the parameter does not have a value.",
            "Indicates that the parameter value is invalid. This field can be used by the webhook to invalidate the parameter and ask the server to collect it from the user again.",
            "Indicates that the parameter has a value."
          ]
        }
      }
    },
    "GoogleCloudDialogflowV2EventInput": {
      "properties": {
        "languageCode": {
          "description": "Required. The language of this query. See [Language Support](https://cloud.google.com/dialogflow/docs/reference/language) for a list of the currently supported language codes. Note that queries in the same session do not necessarily need to specify the same language.",
          "type": "string"
        },
        "name": {
          "description": "Required. The unique identifier of the event.",
          "type": "string"
        },
        "parameters": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "description": "The collection of parameters associated with the event. Depending on your protocol or client library language, this is a map, associative array, symbol table, dictionary, or JSON object composed of a collection of (MapKey, MapValue) pairs: - MapKey type: string - MapKey value: parameter name - MapValue type: - If parameter's entity type is a composite entity: map - Else: string or number, depending on parameter value type - MapValue value: - If parameter's entity type is a composite entity: map from composite entity property names to property values - Else: parameter value",
          "type": "object"
        }
      },
      "type": "object",
      "description": "Events allow for matching intents by event name instead of the natural language input. For instance, input `` can trigger a personalized welcome response. The parameter `name` may be used by the agent in the response: `\"Hello #welcome_event.name! What can I do for you today?\"`.",
      "id": "GoogleCloudDialogflowV2EventInput"
    },
    "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject": {
      "description": "Response media object for media content card.",
      "id": "GoogleCloudDialogflowV2IntentMessageMediaContentResponseMediaObject",
      "properties": {
        "largeImage": {
          "description": "Optional. Image to display above media content.",
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage"
        },
        "name": {
          "description": "Required. Name of media card.",
          "type": "string"
        },
        "description": {
          "description": "Optional. Description of media card.",
          "type": "string"
        },
        "contentUrl": {
          "type": "string",
          "description": "Required. Url where the media is stored."
        },
        "icon": {
          "$ref": "GoogleCloudDialogflowV2IntentMessageImage",
          "description": "Optional. Icon to display above media content."
        }
      },
      "type": "object"
    }
  },
  "kind": "discovery#restDescription",
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "fullyEncodeReservedExpansion": true,
  "parameters": {
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "description": "Data format for response.",
      "default": "json"
    },
    "$.xgafv": {
      "type": "string",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    }
  },
  "title": "Dialogflow API",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/dialogflow": {
          "description": "View, manage and query your Dialogflow agents"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "baseUrl": "https://dialogflow.googleapis.com/",
  "revision": "20201201"
}
