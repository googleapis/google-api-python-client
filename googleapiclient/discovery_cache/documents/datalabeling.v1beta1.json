{
  "revision": "20201216",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "protocol": "rest",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerName": "Google",
  "resources": {
    "projects": {
      "resources": {
        "datasets": {
          "resources": {
            "dataItems": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1beta1/{+parent}/dataItems",
                  "parameters": {
                    "filter": {
                      "type": "string",
                      "description": "Optional. Filter is not supported at this moment.",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by ListDataItemsResponse.next_page_token of the previous [DataLabelingService.ListDataItems] call. Return first page if empty.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/datasets/[^/]+$",
                      "description": "Required. Name of the dataset to list data items, format: projects/{project_id}/datasets/{dataset_id}",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "datalabeling.projects.datasets.dataItems.list",
                  "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/dataItems",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Lists data items in a dataset. This API can be called after data are imported into dataset. Pagination is supported.",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDatalabelingV1beta1ListDataItemsResponse"
                  }
                },
                "get": {
                  "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/dataItems/{dataItemsId}",
                  "httpMethod": "GET",
                  "id": "datalabeling.projects.datasets.dataItems.get",
                  "description": "Gets a data item in a dataset by resource name. This API can be called after data are imported into dataset.",
                  "parameters": {
                    "name": {
                      "description": "Required. The name of the data item to get, format: projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/datasets/[^/]+/dataItems/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "GoogleCloudDatalabelingV1beta1DataItem"
                  },
                  "path": "v1beta1/{+name}",
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "annotatedDatasets": {
              "resources": {
                "examples": {
                  "methods": {
                    "list": {
                      "id": "datalabeling.projects.datasets.annotatedDatasets.examples.list",
                      "path": "v1beta1/{+parent}/examples",
                      "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/examples",
                      "parameterOrder": [
                        "parent"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDatalabelingV1beta1ListExamplesResponse"
                      },
                      "description": "Lists examples in an annotated dataset. Pagination is supported.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "GET",
                      "parameters": {
                        "pageSize": {
                          "type": "integer",
                          "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
                          "location": "query",
                          "format": "int32"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+$",
                          "required": true,
                          "type": "string",
                          "location": "path",
                          "description": "Required. Example resource parent."
                        },
                        "filter": {
                          "description": "Optional. An expression for filtering Examples. For annotated datasets that have annotation spec set, filter by annotation_spec.display_name is supported. Format \"annotation_spec.display_name = {display_name}\"",
                          "location": "query",
                          "type": "string"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by ListExamplesResponse.next_page_token of the previous [DataLabelingService.ListExamples] call. Return first page if empty.",
                          "type": "string"
                        }
                      }
                    },
                    "get": {
                      "path": "v1beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+/examples/[^/]+$",
                          "description": "Required. Name of example, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}/examples/{example_id}",
                          "location": "path",
                          "type": "string",
                          "required": true
                        },
                        "filter": {
                          "type": "string",
                          "description": "Optional. An expression for filtering Examples. Filter by annotation_spec.display_name is supported. Format \"annotation_spec.display_name = {display_name}\"",
                          "location": "query"
                        }
                      },
                      "httpMethod": "GET",
                      "description": "Gets an example by resource name, including both data and annotation.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datalabeling.projects.datasets.annotatedDatasets.examples.get",
                      "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/examples/{examplesId}",
                      "response": {
                        "$ref": "GoogleCloudDatalabelingV1beta1Example"
                      }
                    }
                  }
                },
                "feedbackThreads": {
                  "resources": {
                    "feedbackMessages": {
                      "methods": {
                        "create": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/feedbackThreads/{feedbackThreadsId}/feedbackMessages",
                          "response": {
                            "$ref": "GoogleLongrunningOperation"
                          },
                          "httpMethod": "POST",
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "description": "Required. FeedbackMessage resource parent, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}.",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+/feedbackThreads/[^/]+$"
                            }
                          },
                          "id": "datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.feedbackMessages.create",
                          "request": {
                            "$ref": "GoogleCloudDatalabelingV1beta1FeedbackMessage"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "description": "Create a FeedbackMessage object.",
                          "path": "v1beta1/{+parent}/feedbackMessages"
                        },
                        "list": {
                          "parameters": {
                            "pageSize": {
                              "type": "integer",
                              "format": "int32",
                              "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
                              "location": "query"
                            },
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by ListFeedbackMessages.next_page_token of the previous [DataLabelingService.ListFeedbackMessages] call. Return first page if empty."
                            },
                            "parent": {
                              "description": "Required. FeedbackMessage resource parent. Format: \"projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}\"",
                              "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+/feedbackThreads/[^/]+$",
                              "required": true,
                              "location": "path",
                              "type": "string"
                            }
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/feedbackThreads/{feedbackThreadsId}/feedbackMessages",
                          "description": "List FeedbackMessages with pagination.",
                          "path": "v1beta1/{+parent}/feedbackMessages",
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "GoogleCloudDatalabelingV1beta1ListFeedbackMessagesResponse"
                          },
                          "id": "datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.feedbackMessages.list"
                        },
                        "delete": {
                          "httpMethod": "DELETE",
                          "description": "Delete a FeedbackMessage.",
                          "id": "datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.feedbackMessages.delete",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1beta1/{+name}",
                          "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/feedbackThreads/{feedbackThreadsId}/feedbackMessages/{feedbackMessagesId}",
                          "response": {
                            "$ref": "GoogleProtobufEmpty"
                          },
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+/feedbackThreads/[^/]+/feedbackMessages/[^/]+$",
                              "type": "string",
                              "description": "Required. Name of the FeedbackMessage that is going to be deleted. Format: 'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessages/{feedback_message_id}'.",
                              "location": "path"
                            }
                          }
                        },
                        "get": {
                          "parameterOrder": [
                            "name"
                          ],
                          "description": "Get a FeedbackMessage object.",
                          "response": {
                            "$ref": "GoogleCloudDatalabelingV1beta1FeedbackMessage"
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/feedbackThreads/{feedbackThreadsId}/feedbackMessages/{feedbackMessagesId}",
                          "path": "v1beta1/{+name}",
                          "id": "datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.feedbackMessages.get",
                          "httpMethod": "GET",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "name": {
                              "type": "string",
                              "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+/feedbackThreads/[^/]+/feedbackMessages/[^/]+$",
                              "required": true,
                              "location": "path",
                              "description": "Required. Name of the feedback. Format: 'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessages/{feedback_message_id}'."
                            }
                          }
                        }
                      }
                    }
                  },
                  "methods": {
                    "list": {
                      "httpMethod": "GET",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+$",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "description": "Required. FeedbackThread resource parent. Format: \"projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}\""
                        },
                        "pageSize": {
                          "location": "query",
                          "type": "integer",
                          "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
                          "format": "int32"
                        },
                        "pageToken": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by ListFeedbackThreads.next_page_token of the previous [DataLabelingService.ListFeedbackThreads] call. Return first page if empty."
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/feedbackThreads",
                      "response": {
                        "$ref": "GoogleCloudDatalabelingV1beta1ListFeedbackThreadsResponse"
                      },
                      "path": "v1beta1/{+parent}/feedbackThreads",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "List FeedbackThreads with pagination.",
                      "id": "datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.list"
                    },
                    "delete": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/feedbackThreads/{feedbackThreadsId}",
                      "path": "v1beta1/{+name}",
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "GoogleProtobufEmpty"
                      },
                      "id": "datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.delete",
                      "description": "Delete a FeedbackThread.",
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+/feedbackThreads/[^/]+$",
                          "description": "Required. Name of the FeedbackThread that is going to be deleted. Format: 'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}'."
                        }
                      }
                    },
                    "get": {
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/feedbackThreads/{feedbackThreadsId}",
                      "response": {
                        "$ref": "GoogleCloudDatalabelingV1beta1FeedbackThread"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "datalabeling.projects.datasets.annotatedDatasets.feedbackThreads.get",
                      "httpMethod": "GET",
                      "description": "Get a FeedbackThread object.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "location": "path",
                          "required": true,
                          "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+/feedbackThreads/[^/]+$",
                          "type": "string",
                          "description": "Required. Name of the feedback. Format: 'projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}'."
                        }
                      }
                    }
                  }
                },
                "dataItems": {
                  "methods": {
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/dataItems/{dataItemsId}",
                      "path": "v1beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "GoogleCloudDatalabelingV1beta1DataItem"
                      },
                      "description": "Gets a data item in a dataset by resource name. This API can be called after data are imported into dataset.",
                      "httpMethod": "GET",
                      "parameters": {
                        "name": {
                          "required": true,
                          "location": "path",
                          "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+/dataItems/[^/]+$",
                          "description": "Required. The name of the data item to get, format: projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}",
                          "type": "string"
                        }
                      },
                      "id": "datalabeling.projects.datasets.annotatedDatasets.dataItems.get"
                    },
                    "list": {
                      "response": {
                        "$ref": "GoogleCloudDatalabelingV1beta1ListDataItemsResponse"
                      },
                      "id": "datalabeling.projects.datasets.annotatedDatasets.dataItems.list",
                      "path": "v1beta1/{+parent}/dataItems",
                      "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}/dataItems",
                      "parameters": {
                        "pageSize": {
                          "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
                          "type": "integer",
                          "location": "query",
                          "format": "int32"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Filter is not supported at this moment."
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+$",
                          "required": true,
                          "description": "Required. Name of the dataset to list data items, format: projects/{project_id}/datasets/{dataset_id}",
                          "type": "string",
                          "location": "path"
                        },
                        "pageToken": {
                          "location": "query",
                          "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by ListDataItemsResponse.next_page_token of the previous [DataLabelingService.ListDataItems] call. Return first page if empty.",
                          "type": "string"
                        }
                      },
                      "description": "Lists data items in a dataset. This API can be called after data are imported into dataset. Pagination is supported.",
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    }
                  }
                }
              },
              "methods": {
                "list": {
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "GoogleCloudDatalabelingV1beta1ListAnnotatedDatasetsResponse"
                  },
                  "path": "v1beta1/{+parent}/annotatedDatasets",
                  "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "location": "query",
                      "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Filter is not supported at this moment."
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by ListAnnotatedDatasetsResponse.next_page_token of the previous [DataLabelingService.ListAnnotatedDatasets] call. Return first page if empty.",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. Name of the dataset to list annotated datasets, format: projects/{project_id}/datasets/{dataset_id}",
                      "pattern": "^projects/[^/]+/datasets/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists annotated datasets for a dataset. Pagination is supported.",
                  "id": "datalabeling.projects.datasets.annotatedDatasets.list"
                },
                "get": {
                  "description": "Gets an annotated dataset by resource name.",
                  "path": "v1beta1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+$",
                      "description": "Required. Name of the annotated dataset to get, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "httpMethod": "GET",
                  "id": "datalabeling.projects.datasets.annotatedDatasets.get",
                  "response": {
                    "$ref": "GoogleCloudDatalabelingV1beta1AnnotatedDataset"
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datalabeling.projects.datasets.annotatedDatasets.delete",
                  "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/annotatedDatasets/{annotatedDatasetsId}",
                  "response": {
                    "$ref": "GoogleProtobufEmpty"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. Name of the annotated dataset to delete, format: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}",
                      "pattern": "^projects/[^/]+/datasets/[^/]+/annotatedDatasets/[^/]+$"
                    }
                  },
                  "description": "Deletes an annotated dataset by resource name.",
                  "httpMethod": "DELETE",
                  "path": "v1beta1/{+name}"
                }
              }
            },
            "image": {
              "methods": {
                "label": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDatalabelingV1beta1LabelImageRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "datalabeling.projects.datasets.image.label",
                  "path": "v1beta1/{+parent}/image:label",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/image:label",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. Name of the dataset to request labeling task, format: projects/{project_id}/datasets/{dataset_id}",
                      "required": true,
                      "pattern": "^projects/[^/]+/datasets/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Starts a labeling task for image. The type of image labeling task is configured by feature in the request."
                }
              }
            },
            "evaluations": {
              "methods": {
                "get": {
                  "description": "Gets an evaluation by resource name (to search, use projects.evaluations.search).",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/datasets/[^/]+/evaluations/[^/]+$",
                      "type": "string",
                      "description": "Required. Name of the evaluation. Format: \"projects/{project_id}/datasets/ {dataset_id}/evaluations/{evaluation_id}'",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "GoogleCloudDatalabelingV1beta1Evaluation"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "datalabeling.projects.datasets.evaluations.get",
                  "httpMethod": "GET",
                  "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/evaluations/{evaluationsId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+name}"
                }
              },
              "resources": {
                "exampleComparisons": {
                  "methods": {
                    "search": {
                      "id": "datalabeling.projects.datasets.evaluations.exampleComparisons.search",
                      "response": {
                        "$ref": "GoogleCloudDatalabelingV1beta1SearchExampleComparisonsResponse"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "parent"
                      ],
                      "path": "v1beta1/{+parent}/exampleComparisons:search",
                      "request": {
                        "$ref": "GoogleCloudDatalabelingV1beta1SearchExampleComparisonsRequest"
                      },
                      "description": "Searches example comparisons from an evaluation. The return format is a list of example comparisons that show ground truth and prediction(s) for a single input. Search by providing an evaluation ID.",
                      "httpMethod": "POST",
                      "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/evaluations/{evaluationsId}/exampleComparisons:search",
                      "parameters": {
                        "parent": {
                          "pattern": "^projects/[^/]+/datasets/[^/]+/evaluations/[^/]+$",
                          "location": "path",
                          "required": true,
                          "description": "Required. Name of the Evaluation resource to search for example comparisons from. Format: \"projects/{project_id}/datasets/{dataset_id}/evaluations/ {evaluation_id}\"",
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "video": {
              "methods": {
                "label": {
                  "path": "v1beta1/{+parent}/video:label",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "GoogleCloudDatalabelingV1beta1LabelVideoRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/video:label",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "id": "datalabeling.projects.datasets.video.label",
                  "httpMethod": "POST",
                  "description": "Starts a labeling task for video. The type of video labeling task is configured by feature in the request.",
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "Required. Name of the dataset to request labeling task, format: projects/{project_id}/datasets/{dataset_id}",
                      "pattern": "^projects/[^/]+/datasets/[^/]+$"
                    }
                  }
                }
              }
            },
            "text": {
              "methods": {
                "label": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/datasets/[^/]+$",
                      "description": "Required. Name of the data set to request labeling task, format: projects/{project_id}/datasets/{dataset_id}",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}/text:label",
                  "request": {
                    "$ref": "GoogleCloudDatalabelingV1beta1LabelTextRequest"
                  },
                  "id": "datalabeling.projects.datasets.text.label",
                  "response": {
                    "$ref": "GoogleLongrunningOperation"
                  },
                  "path": "v1beta1/{+parent}/text:label",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Starts a labeling task for text. The type of text labeling task is configured by feature in the request."
                }
              }
            }
          },
          "methods": {
            "list": {
              "flatPath": "v1beta1/projects/{projectsId}/datasets",
              "path": "v1beta1/{+parent}/datasets",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1ListDatasetsResponse"
              },
              "httpMethod": "GET",
              "description": "Lists datasets under a project. Pagination is supported.",
              "id": "datalabeling.projects.datasets.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
                  "format": "int32",
                  "location": "query"
                },
                "pageToken": {
                  "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by ListDatasetsResponse.next_page_token of the previous [DataLabelingService.ListDatasets] call. Returns the first page if empty.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "description": "Required. Dataset resource parent, format: projects/{project_id}",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. Filter on dataset is not supported at this moment."
                }
              }
            },
            "create": {
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1Dataset"
              },
              "id": "datalabeling.projects.datasets.create",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. Dataset resource parent, format: projects/{project_id}",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "request": {
                "$ref": "GoogleCloudDatalabelingV1beta1CreateDatasetRequest"
              },
              "httpMethod": "POST",
              "description": "Creates dataset. If success return a Dataset resource.",
              "path": "v1beta1/{+parent}/datasets",
              "flatPath": "v1beta1/projects/{projectsId}/datasets",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1Dataset"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}",
              "description": "Gets dataset by resource name.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id}",
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/datasets/[^/]+$"
                }
              },
              "id": "datalabeling.projects.datasets.get",
              "path": "v1beta1/{+name}"
            },
            "importData": {
              "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}:importData",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Imports data into dataset based on source locations defined in request. It can be called multiple times for the same dataset. Each dataset can only have one long running operation running on it. For example, no labeling task (also long running operation) can be started while importing is still ongoing. Vice versa.",
              "id": "datalabeling.projects.datasets.importData",
              "path": "v1beta1/{+name}:importData",
              "request": {
                "$ref": "GoogleCloudDatalabelingV1beta1ImportDataRequest"
              },
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/datasets/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id}"
                }
              }
            },
            "exportData": {
              "httpMethod": "POST",
              "description": "Exports data and annotations from dataset.",
              "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}:exportData",
              "parameters": {
                "name": {
                  "pattern": "^projects/[^/]+/datasets/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id}",
                  "location": "path"
                }
              },
              "path": "v1beta1/{+name}:exportData",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "GoogleCloudDatalabelingV1beta1ExportDataRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "id": "datalabeling.projects.datasets.exportData"
            },
            "delete": {
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/datasets/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Required. Dataset resource name, format: projects/{project_id}/datasets/{dataset_id}"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "flatPath": "v1beta1/projects/{projectsId}/datasets/{datasetsId}",
              "id": "datalabeling.projects.datasets.delete",
              "description": "Deletes a dataset by resource name.",
              "httpMethod": "DELETE"
            }
          }
        },
        "evaluationJobs": {
          "methods": {
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates an evaluation job.",
              "flatPath": "v1beta1/projects/{projectsId}/evaluationJobs",
              "path": "v1beta1/{+parent}/evaluationJobs",
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1EvaluationJob"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "request": {
                "$ref": "GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "description": "Required. Evaluation job resource parent. Format: \"projects/{project_id}\"",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "id": "datalabeling.projects.evaluationJobs.create"
            },
            "get": {
              "flatPath": "v1beta1/projects/{projectsId}/evaluationJobs/{evaluationJobsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "GET",
              "id": "datalabeling.projects.evaluationJobs.get",
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1EvaluationJob"
              },
              "path": "v1beta1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/evaluationJobs/[^/]+$",
                  "description": "Required. Name of the evaluation job. Format: \"projects/{project_id} /evaluationJobs/{evaluation_job_id}\"",
                  "type": "string"
                }
              },
              "description": "Gets an evaluation job by resource name.",
              "parameterOrder": [
                "name"
              ]
            },
            "delete": {
              "flatPath": "v1beta1/projects/{projectsId}/evaluationJobs/{evaluationJobsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Required. Name of the evaluation job that is going to be deleted. Format: \"projects/{project_id}/evaluationJobs/{evaluation_job_id}\"",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+/evaluationJobs/[^/]+$"
                }
              },
              "id": "datalabeling.projects.evaluationJobs.delete",
              "description": "Stops and deletes an evaluation job.",
              "httpMethod": "DELETE",
              "path": "v1beta1/{+name}",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              }
            },
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1ListEvaluationJobsResponse"
              },
              "httpMethod": "GET",
              "flatPath": "v1beta1/projects/{projectsId}/evaluationJobs",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "description": "Lists all evaluation jobs within a project with possible filters. Pagination is supported.",
              "id": "datalabeling.projects.evaluationJobs.list",
              "path": "v1beta1/{+parent}/evaluationJobs",
              "parameters": {
                "pageSize": {
                  "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by the nextPageToken in the response to the previous request. The request returns the first page if this is empty.",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "description": "Required. Evaluation job resource parent. Format: \"projects/{project_id}\"",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$"
                },
                "filter": {
                  "description": "Optional. You can filter the jobs to list by model_id (also known as model_name, as described in EvaluationJob.modelVersion) or by evaluation job state (as described in EvaluationJob.state). To filter by both criteria, use the `AND` operator or the `OR` operator. For example, you can use the following string for your filter: \"evaluation_job.model_id = {model_name} AND evaluation_job.state = {evaluation_job_state}\"",
                  "type": "string",
                  "location": "query"
                }
              }
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1beta1/{+name}",
              "description": "Updates an evaluation job. You can only update certain fields of the job's EvaluationJobConfig: `humanAnnotationConfig.instruction`, `exampleCount`, and `exampleSamplePercentage`. If you want to change any other aspect of the evaluation job, you must delete the job and create a new one.",
              "id": "datalabeling.projects.evaluationJobs.patch",
              "request": {
                "$ref": "GoogleCloudDatalabelingV1beta1EvaluationJob"
              },
              "parameters": {
                "updateMask": {
                  "description": "Optional. Mask for which fields to update. You can only provide the following fields: * `evaluationJobConfig.humanAnnotationConfig.instruction` * `evaluationJobConfig.exampleCount` * `evaluationJobConfig.exampleSamplePercentage` You can provide more than one of these fields by separating them with commas.",
                  "format": "google-fieldmask",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/evaluationJobs/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Output only. After you create a job, Data Labeling Service assigns a name to the job with the following format: \"projects/{project_id}/evaluationJobs/ {evaluation_job_id}\""
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/evaluationJobs/{evaluationJobsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "PATCH",
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1EvaluationJob"
              }
            },
            "resume": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+/evaluationJobs/[^/]+$",
                  "type": "string",
                  "description": "Required. Name of the evaluation job that is going to be resumed. Format: \"projects/{project_id}/evaluationJobs/{evaluation_job_id}\""
                }
              },
              "description": "Resumes a paused evaluation job. A deleted evaluation job can't be resumed. Resuming a running or scheduled evaluation job is a no-op.",
              "id": "datalabeling.projects.evaluationJobs.resume",
              "flatPath": "v1beta1/projects/{projectsId}/evaluationJobs/{evaluationJobsId}:resume",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "request": {
                "$ref": "GoogleCloudDatalabelingV1beta1ResumeEvaluationJobRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "httpMethod": "POST",
              "path": "v1beta1/{+name}:resume"
            },
            "pause": {
              "path": "v1beta1/{+name}:pause",
              "parameterOrder": [
                "name"
              ],
              "description": "Pauses an evaluation job. Pausing an evaluation job that is already in a `PAUSED` state is a no-op.",
              "httpMethod": "POST",
              "id": "datalabeling.projects.evaluationJobs.pause",
              "request": {
                "$ref": "GoogleCloudDatalabelingV1beta1PauseEvaluationJobRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/evaluationJobs/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. Name of the evaluation job that is going to be paused. Format: \"projects/{project_id}/evaluationJobs/{evaluation_job_id}\""
                }
              },
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "flatPath": "v1beta1/projects/{projectsId}/evaluationJobs/{evaluationJobsId}:pause"
            }
          }
        },
        "operations": {
          "methods": {
            "get": {
              "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
              "flatPath": "v1beta1/projects/{projectsId}/operations/{operationsId}",
              "id": "datalabeling.projects.operations.get",
              "path": "v1beta1/{+name}",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The name of the operation resource.",
                  "pattern": "^projects/[^/]+/operations/[^/]+$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "cancel": {
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
              "path": "v1beta1/{+name}:cancel",
              "httpMethod": "GET",
              "id": "datalabeling.projects.operations.cancel",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^projects/[^/]+/operations/[^/]+$",
                  "type": "string",
                  "description": "The name of the operation resource to be cancelled.",
                  "required": true
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/operations/{operationsId}:cancel"
            },
            "delete": {
              "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
              "path": "v1beta1/{+name}",
              "httpMethod": "DELETE",
              "flatPath": "v1beta1/projects/{projectsId}/operations/{operationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "The name of the operation resource to be deleted.",
                  "pattern": "^projects/[^/]+/operations/[^/]+$"
                }
              },
              "id": "datalabeling.projects.operations.delete",
              "response": {
                "$ref": "GoogleProtobufEmpty"
              }
            },
            "list": {
              "path": "v1beta1/{+name}/operations",
              "response": {
                "$ref": "GoogleLongrunningListOperationsResponse"
              },
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "The standard list page token.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The standard list page size.",
                  "location": "query",
                  "format": "int32"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "description": "The name of the operation's parent resource.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^projects/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
              "id": "datalabeling.projects.operations.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/operations",
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "evaluations": {
          "methods": {
            "search": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1SearchEvaluationsResponse"
              },
              "id": "datalabeling.projects.evaluations.search",
              "path": "v1beta1/{+parent}/evaluations:search",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/evaluations:search",
              "parameters": {
                "pageToken": {
                  "type": "string",
                  "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by the nextPageToken of the response to a previous search request. If you don't specify this field, the API call requests the first page of the search.",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "description": "Required. Evaluation search parent (project ID). Format: \"projects/ {project_id}\"",
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true
                },
                "filter": {
                  "type": "string",
                  "description": "Optional. To search evaluations, you can filter by the following: * evaluation_job.evaluation_job_id (the last part of EvaluationJob.name) * evaluation_job.model_id (the {model_name} portion of EvaluationJob.modelVersion) * evaluation_job.evaluation_job_run_time_start (Minimum threshold for the evaluationJobRunTime that created the evaluation) * evaluation_job.evaluation_job_run_time_end (Maximum threshold for the evaluationJobRunTime that created the evaluation) * evaluation_job.job_state (EvaluationJob.state) * annotation_spec.display_name (the Evaluation contains a metric for the annotation spec with this displayName) To filter by multiple critiera, use the `AND` operator or the `OR` operator. The following examples shows a string that filters by several critiera: \"evaluation_job.evaluation_job_id = {evaluation_job_id} AND evaluation_job.model_id = {model_name} AND evaluation_job.evaluation_job_run_time_start = {timestamp_1} AND evaluation_job.evaluation_job_run_time_end = {timestamp_2} AND annotation_spec.display_name = {display_name}\"",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
                  "location": "query"
                }
              },
              "description": "Searches evaluations within a project.",
              "httpMethod": "GET"
            }
          }
        },
        "annotationSpecSets": {
          "methods": {
            "get": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpecSet"
              },
              "description": "Gets an annotation spec set by resource name.",
              "flatPath": "v1beta1/projects/{projectsId}/annotationSpecSets/{annotationSpecSetsId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "pattern": "^projects/[^/]+/annotationSpecSets/[^/]+$",
                  "description": "Required. AnnotationSpecSet resource name, format: projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta1/{+name}",
              "httpMethod": "GET",
              "id": "datalabeling.projects.annotationSpecSets.get"
            },
            "create": {
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpecSet"
              },
              "path": "v1beta1/{+parent}/annotationSpecSets",
              "id": "datalabeling.projects.annotationSpecSets.create",
              "description": "Creates an annotation spec set by providing a set of labels.",
              "request": {
                "$ref": "GoogleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest"
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/annotationSpecSets",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "description": "Required. AnnotationSpecSet resource parent, format: projects/{project_id}",
                  "required": true,
                  "location": "path"
                }
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "delete": {
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. AnnotationSpec resource name, format: `projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}`.",
                  "pattern": "^projects/[^/]+/annotationSpecSets/[^/]+$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/annotationSpecSets/{annotationSpecSetsId}",
              "path": "v1beta1/{+name}",
              "httpMethod": "DELETE",
              "description": "Deletes an annotation spec set by resource name.",
              "id": "datalabeling.projects.annotationSpecSets.delete"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. Filter is not supported at this moment."
                },
                "parent": {
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. Parent of AnnotationSpecSet resource, format: projects/{project_id}",
                  "type": "string",
                  "location": "path"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
                  "type": "integer"
                },
                "pageToken": {
                  "location": "query",
                  "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by ListAnnotationSpecSetsResponse.next_page_token of the previous [DataLabelingService.ListAnnotationSpecSets] call. Return first page if empty.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1ListAnnotationSpecSetsResponse"
              },
              "httpMethod": "GET",
              "description": "Lists annotation spec sets for a project. Pagination is supported.",
              "path": "v1beta1/{+parent}/annotationSpecSets",
              "flatPath": "v1beta1/projects/{projectsId}/annotationSpecSets",
              "parameterOrder": [
                "parent"
              ],
              "id": "datalabeling.projects.annotationSpecSets.list"
            }
          }
        },
        "instructions": {
          "methods": {
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/instructions/{instructionsId}",
              "id": "datalabeling.projects.instructions.delete",
              "description": "Deletes an instruction object by resource name.",
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. Instruction resource name, format: projects/{project_id}/instructions/{instruction_id}",
                  "pattern": "^projects/[^/]+/instructions/[^/]+$"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "GoogleProtobufEmpty"
              }
            },
            "create": {
              "description": "Creates an instruction for how data should be labeled.",
              "response": {
                "$ref": "GoogleLongrunningOperation"
              },
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "pattern": "^projects/[^/]+$",
                  "description": "Required. Instruction resource parent, format: projects/{project_id}",
                  "type": "string"
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/instructions",
              "request": {
                "$ref": "GoogleCloudDatalabelingV1beta1CreateInstructionRequest"
              },
              "path": "v1beta1/{+parent}/instructions",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "datalabeling.projects.instructions.create",
              "parameterOrder": [
                "parent"
              ]
            },
            "get": {
              "id": "datalabeling.projects.instructions.get",
              "path": "v1beta1/{+name}",
              "flatPath": "v1beta1/projects/{projectsId}/instructions/{instructionsId}",
              "parameters": {
                "name": {
                  "description": "Required. Instruction resource name, format: projects/{project_id}/instructions/{instruction_id}",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+/instructions/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1Instruction"
              },
              "description": "Gets an instruction by resource name.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "id": "datalabeling.projects.instructions.list",
              "description": "Lists instructions for a project. Pagination is supported.",
              "response": {
                "$ref": "GoogleCloudDatalabelingV1beta1ListInstructionsResponse"
              },
              "httpMethod": "GET",
              "parameters": {
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. Instruction resource parent, format: projects/{project_id}"
                },
                "filter": {
                  "type": "string",
                  "description": "Optional. Filter is not supported at this moment.",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by ListInstructionsResponse.next_page_token of the previous [DataLabelingService.ListInstructions] call. Return first page if empty.",
                  "location": "query"
                },
                "pageSize": {
                  "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                }
              },
              "flatPath": "v1beta1/projects/{projectsId}/instructions",
              "path": "v1beta1/{+parent}/instructions"
            }
          }
        }
      }
    }
  },
  "description": "Public API for Google Cloud AI Data Labeling Service.",
  "title": "Data Labeling API",
  "fullyEncodeReservedExpansion": true,
  "name": "datalabeling",
  "discoveryVersion": "v1",
  "documentationLink": "https://cloud.google.com/data-labeling/docs/",
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "type": "boolean",
      "default": "true"
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "description": "V1 error format.",
      "type": "string"
    },
    "uploadType": {
      "location": "query",
      "type": "string",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "alt": {
      "type": "string",
      "location": "query",
      "default": "json",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response."
    },
    "fields": {
      "type": "string",
      "location": "query",
      "description": "Selector specifying which fields to include in a partial response."
    }
  },
  "mtlsRootUrl": "https://datalabeling.mtls.googleapis.com/",
  "servicePath": "",
  "id": "datalabeling:v1beta1",
  "schemas": {
    "GoogleProtobufEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "type": "object",
      "properties": {},
      "id": "GoogleProtobufEmpty"
    },
    "GoogleCloudDatalabelingV1beta1ListDataItemsResponse": {
      "id": "GoogleCloudDatalabelingV1beta1ListDataItemsResponse",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve next page of results.",
          "type": "string"
        },
        "dataItems": {
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1DataItem"
          },
          "description": "The list of data items to return.",
          "type": "array"
        }
      },
      "description": "Results of listing data items in a dataset."
    },
    "GoogleCloudDatalabelingV1beta1EventConfig": {
      "description": "Config for video event human labeling task.",
      "id": "GoogleCloudDatalabelingV1beta1EventConfig",
      "type": "object",
      "properties": {
        "overlapLength": {
          "format": "int32",
          "type": "integer",
          "description": "The overlap length between different video clips. Users can configure is field in seconds, if not set, default value is 1s."
        },
        "annotationSpecSets": {
          "items": {
            "type": "string"
          },
          "description": "Required. The list of annotation spec set resource name. Similar to video classification, we support selecting event from multiple AnnotationSpecSet at the same time.",
          "type": "array"
        },
        "clipLength": {
          "type": "integer",
          "description": "Videos will be cut to smaller clips to make it easier for labelers to work on. Users can configure is field in seconds, if not set, default value is 60s.",
          "format": "int32"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1AnnotationMetadata": {
      "description": "Additional information associated with the annotation.",
      "id": "GoogleCloudDatalabelingV1beta1AnnotationMetadata",
      "type": "object",
      "properties": {
        "operatorMetadata": {
          "description": "Metadata related to human labeling.",
          "$ref": "GoogleCloudDatalabelingV1beta1OperatorMetadata"
        }
      }
    },
    "GoogleCloudDatalabelingV1p1alpha1OutputConfig": {
      "id": "GoogleCloudDatalabelingV1p1alpha1OutputConfig",
      "type": "object",
      "description": "The configuration of output data.",
      "properties": {
        "gcsFolderDestination": {
          "description": "Output to a folder in Cloud Storage. Should be used for image segmentation or document de-identification labeling outputs.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1GcsFolderDestination"
        },
        "gcsDestination": {
          "description": "Output to a file in Cloud Storage. Should be used for labeling output other than image segmentation.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1GcsDestination"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1ImagePolylineAnnotation": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1ImagePolylineAnnotation",
      "description": "A polyline for the image annotation.",
      "properties": {
        "normalizedPolyline": {
          "$ref": "GoogleCloudDatalabelingV1beta1NormalizedPolyline"
        },
        "annotationSpec": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec",
          "description": "Label of this polyline."
        },
        "polyline": {
          "$ref": "GoogleCloudDatalabelingV1beta1Polyline"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1LabelImageBoundingBoxOperationMetadata": {
      "type": "object",
      "description": "Details of a LabelImageBoundingBox operation metadata.",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1LabelImageBoundingBoxOperationMetadata"
    },
    "GoogleLongrunningListOperationsResponse": {
      "id": "GoogleLongrunningListOperationsResponse",
      "properties": {
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "GoogleLongrunningOperation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata",
      "description": "Details of a LabelVideoClassification operation metadata.",
      "type": "object",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1EvaluationMetrics": {
      "id": "GoogleCloudDatalabelingV1beta1EvaluationMetrics",
      "properties": {
        "objectDetectionMetrics": {
          "$ref": "GoogleCloudDatalabelingV1beta1ObjectDetectionMetrics"
        },
        "classificationMetrics": {
          "$ref": "GoogleCloudDatalabelingV1beta1ClassificationMetrics"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1VideoThumbnail": {
      "type": "object",
      "properties": {
        "timeOffset": {
          "type": "string",
          "description": "Time offset relative to the beginning of the video, corresponding to the video frame where the thumbnail has been extracted from.",
          "format": "google-duration"
        },
        "thumbnail": {
          "type": "string",
          "format": "byte",
          "description": "A byte string of the video frame."
        }
      },
      "description": "Container of information of a video thumbnail.",
      "id": "GoogleCloudDatalabelingV1beta1VideoThumbnail"
    },
    "GoogleCloudDatalabelingV1beta1VideoClassificationAnnotation": {
      "properties": {
        "timeSegment": {
          "$ref": "GoogleCloudDatalabelingV1beta1TimeSegment",
          "description": "The time segment of the video to which the annotation applies."
        },
        "annotationSpec": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec",
          "description": "Label of the segment specified by time_segment."
        }
      },
      "description": "Video classification annotation.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1VideoClassificationAnnotation"
    },
    "GoogleCloudDatalabelingV1beta1VideoClassificationConfig": {
      "description": "Config for video classification human labeling task. Currently two types of video classification are supported: 1. Assign labels on the entire video. 2. Split the video into multiple video clips based on camera shot, and assign labels on each video clip.",
      "id": "GoogleCloudDatalabelingV1beta1VideoClassificationConfig",
      "properties": {
        "applyShotDetection": {
          "type": "boolean",
          "description": "Optional. Option to apply shot detection on the video."
        },
        "annotationSpecSetConfigs": {
          "type": "array",
          "description": "Required. The list of annotation spec set configs. Since watching a video clip takes much longer time than an image, we support label with multiple AnnotationSpecSet at the same time. Labels in each AnnotationSpecSet will be shown in a group to contributors. Contributors can select one or more (depending on whether to allow multi label) from each group.",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p1alpha1CreateInstructionMetadata": {
      "id": "GoogleCloudDatalabelingV1p1alpha1CreateInstructionMetadata",
      "properties": {
        "partialFailures": {
          "description": "Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        },
        "instruction": {
          "type": "string",
          "description": "The name of the created Instruction. projects/{project_id}/instructions/{instruction_id}"
        },
        "createTime": {
          "description": "Timestamp when create instruction request was created.",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "description": "Metadata of a CreateInstruction operation.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1ConfusionMatrix": {
      "id": "GoogleCloudDatalabelingV1beta1ConfusionMatrix",
      "properties": {
        "row": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1Row"
          }
        }
      },
      "type": "object",
      "description": "Confusion matrix of the model running the classification. Only applicable when the metrics entry aggregates multiple labels. Not applicable when the entry is for a single label."
    },
    "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig": {
      "id": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig",
      "properties": {
        "labelGroup": {
          "type": "string",
          "description": "Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\\\d_-]{0,128}`."
        },
        "annotatedDatasetDescription": {
          "type": "string",
          "description": "Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long."
        },
        "userEmailAddress": {
          "type": "string",
          "description": "Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent."
        },
        "instruction": {
          "type": "string",
          "description": "Required. Instruction resource name."
        },
        "languageCode": {
          "type": "string",
          "description": "Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related. For example, French text classification."
        },
        "contributorEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/"
        },
        "questionDuration": {
          "description": "Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds.",
          "type": "string",
          "format": "google-duration"
        },
        "annotatedDatasetDisplayName": {
          "description": "Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters .",
          "type": "string"
        },
        "replicaCount": {
          "type": "integer",
          "description": "Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image related labeling, valid values are 1, 3, 5.",
          "format": "int32"
        }
      },
      "description": "Configuration for how human labeling task should be done.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata": {
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config."
        }
      },
      "description": "Details of a LabelImageOrientedBoundingBox operation metadata.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata"
    },
    "GoogleCloudDatalabelingV1beta1TextClassificationConfig": {
      "id": "GoogleCloudDatalabelingV1beta1TextClassificationConfig",
      "description": "Config for text classification human labeling task.",
      "properties": {
        "annotationSpecSet": {
          "description": "Required. Annotation spec set resource name.",
          "type": "string"
        },
        "sentimentConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1SentimentConfig",
          "description": "Optional. Configs for sentiment selection. We deprecate sentiment analysis in data labeling side as it is incompatible with uCAIP."
        },
        "allowMultiLabel": {
          "description": "Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one text segment.",
          "type": "boolean"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1Instruction": {
      "description": "Instruction of how to perform the labeling task for human operators. Currently only PDF instruction is supported.",
      "id": "GoogleCloudDatalabelingV1beta1Instruction",
      "type": "object",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. User-provided description of the instruction. The description can be up to 10000 characters long."
        },
        "name": {
          "description": "Output only. Instruction resource name, format: projects/{project_id}/instructions/{instruction_id}",
          "type": "string"
        },
        "dataType": {
          "description": "Required. The data type of this instruction.",
          "enumDescriptions": [
            "Data type is unspecified.",
            "Allowed for continuous evaluation.",
            "Video data type.",
            "Allowed for continuous evaluation.",
            "Allowed for continuous evaluation."
          ],
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "IMAGE",
            "VIDEO",
            "TEXT",
            "GENERAL_DATA"
          ],
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Creation time of instruction."
        },
        "csvInstruction": {
          "description": "Deprecated: this instruction format is not supported any more. Instruction from a CSV file, such as for classification task. The CSV file should have exact two columns, in the following format: * The first column is labeled data, such as an image reference, text. * The second column is comma separated labels associated with data.",
          "$ref": "GoogleCloudDatalabelingV1beta1CsvInstruction"
        },
        "blockingResources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. The names of any related resources that are blocking changes to the instruction."
        },
        "pdfInstruction": {
          "description": "Instruction from a PDF document. The PDF should be in a Cloud Storage bucket.",
          "$ref": "GoogleCloudDatalabelingV1beta1PdfInstruction"
        },
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the instruction. Maximum of 64 characters."
        },
        "updateTime": {
          "description": "Output only. Last update time of instruction.",
          "format": "google-datetime",
          "type": "string"
        }
      }
    },
    "GoogleRpcStatus": {
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "items": {
            "type": "object",
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            }
          },
          "type": "array"
        },
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "id": "GoogleRpcStatus",
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "GoogleCloudDatalabelingV1beta1ListFeedbackMessagesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results."
        },
        "feedbackMessages": {
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1FeedbackMessage"
          },
          "description": "The list of feedback messages to return.",
          "type": "array"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1ListFeedbackMessagesResponse",
      "description": "Results for listing FeedbackMessages.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1BoundingBoxEvaluationOptions": {
      "properties": {
        "iouThreshold": {
          "format": "float",
          "type": "number",
          "description": "Minimum [intersection-over-union (IOU)](/vision/automl/object-detection/docs/evaluate#intersection-over-union) required for 2 bounding boxes to be considered a match. This must be a number between 0 and 1."
        }
      },
      "description": "Options regarding evaluation between bounding boxes.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1BoundingBoxEvaluationOptions"
    },
    "GoogleCloudDatalabelingV1alpha1LabelVideoObjectDetectionOperationMetadata": {
      "type": "object",
      "description": "Details of a LabelVideoObjectDetection operation metadata.",
      "id": "GoogleCloudDatalabelingV1alpha1LabelVideoObjectDetectionOperationMetadata",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      }
    },
    "GoogleCloudDatalabelingV1p2alpha1ImportDataOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1p2alpha1ImportDataOperationMetadata",
      "properties": {
        "partialFailures": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details."
        },
        "dataset": {
          "description": "Output only. The name of imported dataset. \"projects/*/datasets/*\"",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp when import dataset request was created."
        }
      },
      "description": "Metadata of an ImportData operation.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1ImageClassificationAnnotation": {
      "properties": {
        "annotationSpec": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec",
          "description": "Label of image."
        }
      },
      "type": "object",
      "description": "Image classification annotation definition.",
      "id": "GoogleCloudDatalabelingV1beta1ImageClassificationAnnotation"
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata": {
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig"
        }
      },
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata",
      "description": "Details of LabelImagePolyline operation metadata.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1LabelVideoEventOperationMetadata": {
      "description": "Details of a LabelVideoEvent operation metadata.",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1LabelVideoEventOperationMetadata"
    },
    "GoogleCloudDatalabelingV1beta1LabelStats": {
      "description": "Statistics about annotation specs.",
      "type": "object",
      "properties": {
        "exampleCount": {
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          },
          "description": "Map of each annotation spec's example count. Key is the annotation spec name and value is the number of examples for that annotation spec. If the annotated dataset does not have annotation spec, the map will return a pair where the key is empty string and value is the total number of annotations.",
          "type": "object"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1LabelStats"
    },
    "GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata": {
      "type": "object",
      "description": "Metadata of an ExportData operation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Timestamp when export dataset request was created.",
          "type": "string"
        },
        "partialFailures": {
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.",
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "annotatedDataset": {
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\".",
          "type": "string"
        },
        "dataset": {
          "description": "Output only. The name of dataset to be exported. \"projects/*/datasets/*\"",
          "type": "string"
        }
      },
      "id": "GoogleCloudDatalabelingV1p1alpha1ExportDataOperationMetadata"
    },
    "GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse": {
      "description": "Response used for ImportData longrunning operation.",
      "id": "GoogleCloudDatalabelingV1p1alpha1ImportDataOperationResponse",
      "properties": {
        "dataset": {
          "type": "string",
          "description": "Ouptut only. The name of imported dataset."
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. Total number of examples requested to import"
        },
        "importCount": {
          "type": "integer",
          "description": "Output only. Number of examples imported successfully.",
          "format": "int32"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1ListExamplesResponse": {
      "id": "GoogleCloudDatalabelingV1beta1ListExamplesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve next page of results.",
          "type": "string"
        },
        "examples": {
          "type": "array",
          "description": "The list of examples to return.",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1Example"
          }
        }
      },
      "description": "Results of listing Examples in and annotated dataset.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1VideoObjectTrackingAnnotation": {
      "id": "GoogleCloudDatalabelingV1beta1VideoObjectTrackingAnnotation",
      "properties": {
        "objectTrackingFrames": {
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1ObjectTrackingFrame"
          },
          "description": "The list of frames where this object track appears.",
          "type": "array"
        },
        "timeSegment": {
          "$ref": "GoogleCloudDatalabelingV1beta1TimeSegment",
          "description": "The time segment of the video to which object tracking applies."
        },
        "annotationSpec": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec",
          "description": "Label of the object tracked in this annotation."
        }
      },
      "type": "object",
      "description": "Video object tracking annotation."
    },
    "GoogleCloudDatalabelingV1p1alpha1GenerateAnalysisReportOperationMetadata": {
      "properties": {
        "createTime": {
          "description": "Timestamp when generate report request was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "dataset": {
          "description": "The name of the dataset for which the analysis report is generated. Format: \"projects/*/datasets/*\"",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p1alpha1GenerateAnalysisReportOperationMetadata",
      "description": "Metadata of an GenerateAnalysisReport operation."
    },
    "GoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse": {
      "id": "GoogleCloudDatalabelingV1p2alpha1ExportDataOperationResponse",
      "type": "object",
      "properties": {
        "outputConfig": {
          "description": "Output only. output_config in the ExportData request.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1OutputConfig"
        },
        "exportCount": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. Number of examples exported successfully."
        },
        "totalCount": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. Total number of examples requested to export"
        },
        "dataset": {
          "description": "Ouptut only. The name of dataset. \"projects/*/datasets/*\"",
          "type": "string"
        },
        "annotatedDataset": {
          "type": "string",
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\"."
        },
        "labelStats": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelStats",
          "description": "Output only. Statistic infos of labels in the exported dataset."
        }
      },
      "description": "Response used for ExportDataset longrunning operation."
    },
    "GoogleCloudDatalabelingV1beta1RequesterFeedbackMetadata": {
      "description": "Metadata describing the feedback from the labeling task requester.",
      "id": "GoogleCloudDatalabelingV1beta1RequesterFeedbackMetadata",
      "properties": {},
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation": {
      "id": "GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation",
      "type": "object",
      "properties": {
        "annotationColors": {
          "additionalProperties": {
            "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec"
          },
          "type": "object",
          "description": "The mapping between rgb color and annotation spec. The key is the rgb color represented in format of rgb(0, 0, 0). The value is the AnnotationSpec."
        },
        "imageBytes": {
          "type": "string",
          "format": "byte",
          "description": "A byte string of a full image's color map."
        },
        "mimeType": {
          "type": "string",
          "description": "Image format."
        }
      },
      "description": "Image segmentation annotation."
    },
    "GoogleCloudDatalabelingV1p2alpha1OutputConfig": {
      "type": "object",
      "description": "The configuration of output data.",
      "id": "GoogleCloudDatalabelingV1p2alpha1OutputConfig",
      "properties": {
        "gcsDestination": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1GcsDestination",
          "description": "Output to a file in Cloud Storage. Should be used for labeling output other than image segmentation."
        },
        "gcsFolderDestination": {
          "description": "Output to a folder in Cloud Storage. Should be used for image segmentation or document de-identification labeling outputs.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1GcsFolderDestination"
        }
      }
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata": {
      "description": "Details of LabelImageBoundingPoly operation metadata.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      }
    },
    "GoogleCloudDatalabelingV1p2alpha1CreateInstructionMetadata": {
      "properties": {
        "createTime": {
          "description": "Timestamp when create instruction request was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "instruction": {
          "type": "string",
          "description": "The name of the created Instruction. projects/{project_id}/instructions/{instruction_id}"
        },
        "partialFailures": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details."
        }
      },
      "type": "object",
      "description": "Metadata of a CreateInstruction operation.",
      "id": "GoogleCloudDatalabelingV1p2alpha1CreateInstructionMetadata"
    },
    "GoogleCloudDatalabelingV1beta1CreateInstructionRequest": {
      "type": "object",
      "properties": {
        "instruction": {
          "$ref": "GoogleCloudDatalabelingV1beta1Instruction",
          "description": "Required. Instruction of how to perform the labeling task."
        }
      },
      "description": "Request message for CreateInstruction.",
      "id": "GoogleCloudDatalabelingV1beta1CreateInstructionRequest"
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelImageBoundingPolyOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelImageBoundingPolyOperationMetadata",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig"
        }
      },
      "description": "Details of LabelImageBoundingPoly operation metadata.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelStats": {
      "properties": {
        "exampleCount": {
          "description": "Map of each annotation spec's example count. Key is the annotation spec name and value is the number of examples for that annotation spec. If the annotated dataset does not have annotation spec, the map will return a pair where the key is empty string and value is the total number of annotations.",
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      },
      "description": "Statistics about annotation specs.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelStats"
    },
    "GoogleCloudDatalabelingV1beta1NormalizedBoundingPoly": {
      "id": "GoogleCloudDatalabelingV1beta1NormalizedBoundingPoly",
      "description": "Normalized bounding polygon.",
      "properties": {
        "normalizedVertices": {
          "description": "The bounding polygon normalized vertices.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1NormalizedVertex"
          }
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig": {
      "properties": {
        "annotationSpecSet": {
          "description": "Required. Annotation spec set resource name.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Config for text entity extraction human labeling task.",
      "id": "GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig"
    },
    "GoogleCloudDatalabelingV1p2alpha1GcsFolderDestination": {
      "properties": {
        "outputFolderUri": {
          "description": "Required. Cloud Storage directory to export data to.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDatalabelingV1p2alpha1GcsFolderDestination",
      "type": "object",
      "description": "Export folder destination of the data."
    },
    "GoogleCloudDatalabelingV1beta1BoundingPolyConfig": {
      "properties": {
        "annotationSpecSet": {
          "description": "Required. Annotation spec set resource name.",
          "type": "string"
        },
        "instructionMessage": {
          "description": "Optional. Instruction message showed on contributors UI.",
          "type": "string"
        }
      },
      "description": "Config for image bounding poly (and bounding box) human labeling task.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1BoundingPolyConfig"
    },
    "GoogleCloudDatalabelingV1beta1EvaluationJob": {
      "id": "GoogleCloudDatalabelingV1beta1EvaluationJob",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Output only. After you create a job, Data Labeling Service assigns a name to the job with the following format: \"projects/{project_id}/evaluationJobs/ {evaluation_job_id}\""
        },
        "annotationSpecSet": {
          "description": "Required. Name of the AnnotationSpecSet describing all the labels that your machine learning model outputs. You must create this resource before you create an evaluation job and provide its name in the following format: \"projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}\"",
          "type": "string"
        },
        "description": {
          "description": "Required. Description of the job. The description can be up to 25,000 characters long.",
          "type": "string"
        },
        "attempts": {
          "description": "Output only. Every time the evaluation job runs and an error occurs, the failed attempt is appended to this array.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1Attempt"
          }
        },
        "evaluationJobConfig": {
          "description": "Required. Configuration details for the evaluation job.",
          "$ref": "GoogleCloudDatalabelingV1beta1EvaluationJobConfig"
        },
        "createTime": {
          "description": "Output only. Timestamp of when this evaluation job was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "state": {
          "enumDescriptions": [
            "",
            "The job is scheduled to run at the configured interval. You can pause or delete the job. When the job is in this state, it samples prediction input and output from your model version into your BigQuery table as predictions occur.",
            "The job is currently running. When the job runs, Data Labeling Service does several things: 1. If you have configured your job to use Data Labeling Service for ground truth labeling, the service creates a Dataset and a labeling task for all data sampled since the last time the job ran. Human labelers provide ground truth labels for your data. Human labeling may take hours, or even days, depending on how much data has been sampled. The job remains in the `RUNNING` state during this time, and it can even be running multiple times in parallel if it gets triggered again (for example 24 hours later) before the earlier run has completed. When human labelers have finished labeling the data, the next step occurs. If you have configured your job to provide your own ground truth labels, Data Labeling Service still creates a Dataset for newly sampled data, but it expects that you have already added ground truth labels to the BigQuery table by this time. The next step occurs immediately. 2. Data Labeling Service creates an Evaluation by comparing your model version's predictions with the ground truth labels. If the job remains in this state for a long time, it continues to sample prediction data into your BigQuery table and will run again at the next interval, even if it causes the job to run multiple times in parallel.",
            "The job is not sampling prediction input and output into your BigQuery table and it will not run according to its schedule. You can resume the job.",
            "The job has this state right before it is deleted."
          ],
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "SCHEDULED",
            "RUNNING",
            "PAUSED",
            "STOPPED"
          ],
          "description": "Output only. Describes the current state of the job."
        },
        "schedule": {
          "description": "Required. Describes the interval at which the job runs. This interval must be at least 1 day, and it is rounded to the nearest day. For example, if you specify a 50-hour interval, the job runs every 2 days. You can provide the schedule in [crontab format](/scheduler/docs/configuring/cron-job-schedules) or in an [English-like format](/appengine/docs/standard/python/config/cronref#schedule_format). Regardless of what you specify, the job will run at 10:00 AM UTC. Only the interval from this schedule is used, not the specific time of day.",
          "type": "string"
        },
        "labelMissingGroundTruth": {
          "description": "Required. Whether you want Data Labeling Service to provide ground truth labels for prediction input. If you want the service to assign human labelers to annotate your data, set this to `true`. If you want to provide your own ground truth labels in the evaluation job's BigQuery table, set this to `false`.",
          "type": "boolean"
        },
        "modelVersion": {
          "type": "string",
          "description": "Required. The [AI Platform Prediction model version](/ml-engine/docs/prediction-overview) to be evaluated. Prediction input and output is sampled from this model version. When creating an evaluation job, specify the model version in the following format: \"projects/{project_id}/models/{model_name}/versions/{version_name}\" There can only be one evaluation job per model version."
        }
      },
      "description": "Defines an evaluation job that runs periodically to generate Evaluations. [Creating an evaluation job](/ml-engine/docs/continuous-evaluation/create-job) is the starting point for using continuous evaluation."
    },
    "GoogleCloudDatalabelingV1beta1SearchEvaluationsResponse": {
      "properties": {
        "evaluations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1Evaluation"
          },
          "description": "The list of evaluations matching the search."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1SearchEvaluationsResponse",
      "description": "Results of searching evaluations.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1BoundingPoly": {
      "properties": {
        "vertices": {
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1Vertex"
          },
          "description": "The bounding polygon vertices.",
          "type": "array"
        }
      },
      "description": "A bounding polygon in the image.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1BoundingPoly"
    },
    "GoogleCloudDatalabelingV1beta1GcsFolderDestination": {
      "id": "GoogleCloudDatalabelingV1beta1GcsFolderDestination",
      "properties": {
        "outputFolderUri": {
          "description": "Required. Cloud Storage directory to export data to.",
          "type": "string"
        }
      },
      "description": "Export folder destination of the data.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelVideoEventOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelVideoEventOperationMetadata",
      "description": "Details of a LabelVideoEvent operation metadata.",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1ObjectTrackingFrame": {
      "description": "Video frame level annotation for object detection and tracking.",
      "id": "GoogleCloudDatalabelingV1beta1ObjectTrackingFrame",
      "type": "object",
      "properties": {
        "timeOffset": {
          "format": "google-duration",
          "type": "string",
          "description": "The time offset of this frame relative to the beginning of the video."
        },
        "normalizedBoundingPoly": {
          "$ref": "GoogleCloudDatalabelingV1beta1NormalizedBoundingPoly"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDatalabelingV1beta1BoundingPoly"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1LabelVideoObjectDetectionOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1beta1LabelVideoObjectDetectionOperationMetadata",
      "description": "Details of a LabelVideoObjectDetection operation metadata.",
      "type": "object",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      }
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata": {
      "description": "Details of a LabelVideoObjectDetection operation metadata.",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      },
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1LabelImageClassificationOperationMetadata": {
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      },
      "description": "Metadata of a LabelImageClassification operation.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1LabelImageClassificationOperationMetadata"
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelImagePolylineOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelImagePolylineOperationMetadata",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      },
      "description": "Details of LabelImagePolyline operation metadata."
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata": {
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig"
        }
      },
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata",
      "type": "object",
      "description": "Details of a LabelVideoEvent operation metadata."
    },
    "GoogleCloudDatalabelingV1beta1CsvInstruction": {
      "description": "Deprecated: this instruction format is not supported any more. Instruction from a CSV file.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1CsvInstruction",
      "properties": {
        "gcsFileUri": {
          "description": "CSV file for the instruction. Only gcs path is allowed.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1AnnotationValue": {
      "id": "GoogleCloudDatalabelingV1beta1AnnotationValue",
      "description": "Annotation value for an example.",
      "type": "object",
      "properties": {
        "videoObjectTrackingAnnotation": {
          "description": "Annotation value for video object detection and tracking case.",
          "$ref": "GoogleCloudDatalabelingV1beta1VideoObjectTrackingAnnotation"
        },
        "videoClassificationAnnotation": {
          "description": "Annotation value for video classification case.",
          "$ref": "GoogleCloudDatalabelingV1beta1VideoClassificationAnnotation"
        },
        "imagePolylineAnnotation": {
          "$ref": "GoogleCloudDatalabelingV1beta1ImagePolylineAnnotation",
          "description": "Annotation value for image polyline cases. Polyline here is different from BoundingPoly. It is formed by line segments connected to each other but not closed form(Bounding Poly). The line segments can cross each other."
        },
        "imageSegmentationAnnotation": {
          "description": "Annotation value for image segmentation.",
          "$ref": "GoogleCloudDatalabelingV1beta1ImageSegmentationAnnotation"
        },
        "imageBoundingPolyAnnotation": {
          "$ref": "GoogleCloudDatalabelingV1beta1ImageBoundingPolyAnnotation",
          "description": "Annotation value for image bounding box, oriented bounding box and polygon cases."
        },
        "textClassificationAnnotation": {
          "description": "Annotation value for text classification case.",
          "$ref": "GoogleCloudDatalabelingV1beta1TextClassificationAnnotation"
        },
        "videoEventAnnotation": {
          "description": "Annotation value for video event case.",
          "$ref": "GoogleCloudDatalabelingV1beta1VideoEventAnnotation"
        },
        "imageClassificationAnnotation": {
          "$ref": "GoogleCloudDatalabelingV1beta1ImageClassificationAnnotation",
          "description": "Annotation value for image classification case."
        },
        "textEntityExtractionAnnotation": {
          "$ref": "GoogleCloudDatalabelingV1beta1TextEntityExtractionAnnotation",
          "description": "Annotation value for text entity extraction case."
        }
      }
    },
    "GoogleCloudDatalabelingV1alpha1LabelVideoObjectTrackingOperationMetadata": {
      "description": "Details of a LabelVideoObjectTracking operation metadata.",
      "id": "GoogleCloudDatalabelingV1alpha1LabelVideoObjectTrackingOperationMetadata",
      "type": "object",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1PauseEvaluationJobRequest": {
      "properties": {},
      "description": "Request message for PauseEvaluationJob.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1PauseEvaluationJobRequest"
    },
    "GoogleCloudDatalabelingV1alpha1LabelImageClassificationOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1alpha1LabelImageClassificationOperationMetadata",
      "description": "Metadata of a LabelImageClassification operation.",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1OperatorFeedbackMetadata": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1OperatorFeedbackMetadata",
      "properties": {},
      "description": "Metadata describing the feedback from the operator."
    },
    "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig": {
      "type": "object",
      "description": "Configuration for how human labeling task should be done.",
      "id": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
      "properties": {
        "annotatedDatasetDisplayName": {
          "type": "string",
          "description": "Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters ."
        },
        "questionDuration": {
          "format": "google-duration",
          "type": "string",
          "description": "Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds."
        },
        "replicaCount": {
          "type": "integer",
          "description": "Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image related labeling, valid values are 1, 3, 5.",
          "format": "int32"
        },
        "contributorEmails": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/"
        },
        "annotatedDatasetDescription": {
          "description": "Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long.",
          "type": "string"
        },
        "userEmailAddress": {
          "description": "Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent.",
          "type": "string"
        },
        "labelGroup": {
          "description": "Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\\\d_-]{0,128}`.",
          "type": "string"
        },
        "instruction": {
          "description": "Required. Instruction resource name.",
          "type": "string"
        },
        "languageCode": {
          "description": "Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related. For example, French text classification.",
          "type": "string"
        }
      }
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelTextClassificationOperationMetadata": {
      "type": "object",
      "description": "Details of a LabelTextClassification operation metadata.",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig"
        }
      },
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelTextClassificationOperationMetadata"
    },
    "GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse": {
      "description": "Response used for ExportDataset longrunning operation.",
      "type": "object",
      "properties": {
        "annotatedDataset": {
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\".",
          "type": "string"
        },
        "exportCount": {
          "type": "integer",
          "description": "Output only. Number of examples exported successfully.",
          "format": "int32"
        },
        "labelStats": {
          "description": "Output only. Statistic infos of labels in the exported dataset.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelStats"
        },
        "totalCount": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. Total number of examples requested to export"
        },
        "outputConfig": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1OutputConfig",
          "description": "Output only. output_config in the ExportData request."
        },
        "dataset": {
          "type": "string",
          "description": "Ouptut only. The name of dataset. \"projects/*/datasets/*\""
        }
      },
      "id": "GoogleCloudDatalabelingV1p1alpha1ExportDataOperationResponse"
    },
    "GoogleCloudDatalabelingV1beta1ClassificationMetrics": {
      "id": "GoogleCloudDatalabelingV1beta1ClassificationMetrics",
      "type": "object",
      "description": "Metrics calculated for a classification model.",
      "properties": {
        "confusionMatrix": {
          "$ref": "GoogleCloudDatalabelingV1beta1ConfusionMatrix",
          "description": "Confusion matrix of predicted labels vs. ground truth labels."
        },
        "prCurve": {
          "description": "Precision-recall curve based on ground truth labels, predicted labels, and scores for the predicted labels.",
          "$ref": "GoogleCloudDatalabelingV1beta1PrCurve"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig": {
      "description": "Annotation spec set with the setting of allowing multi labels or not.",
      "properties": {
        "allowMultiLabel": {
          "type": "boolean",
          "description": "Optional. If allow_multi_label is true, contributors are able to choose multiple labels from one annotation spec set."
        },
        "annotationSpecSet": {
          "type": "string",
          "description": "Required. Annotation spec set resource name."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1AnnotationSpecSetConfig",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1ListInstructionsResponse": {
      "type": "object",
      "properties": {
        "instructions": {
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1Instruction"
          },
          "type": "array",
          "description": "The list of Instructions to return."
        },
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1ListInstructionsResponse",
      "description": "Results of listing instructions under a project."
    },
    "GoogleCloudDatalabelingV1beta1NormalizedPolyline": {
      "properties": {
        "normalizedVertices": {
          "type": "array",
          "description": "The normalized polyline vertices.",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1NormalizedVertex"
          }
        }
      },
      "type": "object",
      "description": "Normalized polyline.",
      "id": "GoogleCloudDatalabelingV1beta1NormalizedPolyline"
    },
    "GoogleCloudDatalabelingV1beta1VideoPayload": {
      "id": "GoogleCloudDatalabelingV1beta1VideoPayload",
      "type": "object",
      "description": "Container of information of a video.",
      "properties": {
        "mimeType": {
          "description": "Video format.",
          "type": "string"
        },
        "videoUri": {
          "type": "string",
          "description": "Video uri from the user bucket."
        },
        "signedUri": {
          "description": "Signed uri of the video file in the service bucket.",
          "type": "string"
        },
        "videoThumbnails": {
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1VideoThumbnail"
          },
          "type": "array",
          "description": "The list of video thumbnails."
        },
        "frameRate": {
          "type": "number",
          "description": "FPS of the video.",
          "format": "float"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1ImportDataRequest": {
      "type": "object",
      "properties": {
        "userEmailAddress": {
          "description": "Email of the user who started the import task and should be notified by email. If empty no notification will be sent.",
          "type": "string"
        },
        "inputConfig": {
          "description": "Required. Specify the input source of the data.",
          "$ref": "GoogleCloudDatalabelingV1beta1InputConfig"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1ImportDataRequest",
      "description": "Request message for ImportData API."
    },
    "GoogleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest": {
      "properties": {
        "annotationSpecSet": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpecSet",
          "description": "Required. Annotation spec set to create. Annotation specs must be included. Only one annotation spec will be accepted for annotation specs with same display_name."
        }
      },
      "description": "Request message for CreateAnnotationSpecSet.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1CreateAnnotationSpecSetRequest"
    },
    "GoogleCloudDatalabelingV1alpha1LabelOperationMetadata": {
      "description": "Metadata of a labeling operation, such as LabelImage or LabelVideo. Next tag: 23",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1alpha1LabelOperationMetadata",
      "properties": {
        "annotatedDataset": {
          "type": "string",
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\"."
        },
        "videoObjectTrackingDetails": {
          "description": "Details of label video object tracking operation.",
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelVideoObjectTrackingOperationMetadata"
        },
        "textClassificationDetails": {
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelTextClassificationOperationMetadata",
          "description": "Details of label text classification operation."
        },
        "videoEventDetails": {
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelVideoEventOperationMetadata",
          "description": "Details of label video event operation."
        },
        "partialFailures": {
          "type": "array",
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "dataset": {
          "type": "string",
          "description": "Output only. The name of dataset to be labeled. \"projects/*/datasets/*\""
        },
        "imageBoundingBoxDetails": {
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelImageBoundingBoxOperationMetadata",
          "description": "Details of label image bounding box operation."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp when labeling request was created."
        },
        "videoClassificationDetails": {
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelVideoClassificationOperationMetadata",
          "description": "Details of label video classification operation."
        },
        "imageOrientedBoundingBoxDetails": {
          "description": "Details of label image oriented bounding box operation.",
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelImageOrientedBoundingBoxOperationMetadata"
        },
        "progressPercent": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. Progress of label operation. Range: [0, 100]."
        },
        "imageBoundingPolyDetails": {
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelImageBoundingPolyOperationMetadata",
          "description": "Details of label image bounding poly operation."
        },
        "textEntityExtractionDetails": {
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelTextEntityExtractionOperationMetadata",
          "description": "Details of label text entity extraction operation."
        },
        "imagePolylineDetails": {
          "description": "Details of label image polyline operation.",
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelImagePolylineOperationMetadata"
        },
        "videoObjectDetectionDetails": {
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelVideoObjectDetectionOperationMetadata",
          "description": "Details of label video object detection operation."
        },
        "imageSegmentationDetails": {
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelImageSegmentationOperationMetadata",
          "description": "Details of label image segmentation operation."
        },
        "imageClassificationDetails": {
          "description": "Details of label image classification operation.",
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelImageClassificationOperationMetadata"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1ListFeedbackThreadsResponse": {
      "description": "Results for listing FeedbackThreads.",
      "id": "GoogleCloudDatalabelingV1beta1ListFeedbackThreadsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results."
        },
        "feedbackThreads": {
          "description": "The list of feedback threads to return.",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1FeedbackThread"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata": {
      "type": "object",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig"
        }
      },
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata",
      "description": "Metadata of a LabelImageClassification operation."
    },
    "GoogleCloudDatalabelingV1alpha1LabelImageSegmentationOperationMetadata": {
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config."
        }
      },
      "description": "Details of a LabelImageSegmentation operation metadata.",
      "id": "GoogleCloudDatalabelingV1alpha1LabelImageSegmentationOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1LabelImageOrientedBoundingBoxOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1beta1LabelImageOrientedBoundingBoxOperationMetadata",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config.",
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig"
        }
      },
      "description": "Details of a LabelImageOrientedBoundingBox operation metadata.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1ImportDataOperationResponse": {
      "id": "GoogleCloudDatalabelingV1beta1ImportDataOperationResponse",
      "description": "Response used for ImportData longrunning operation.",
      "properties": {
        "totalCount": {
          "type": "integer",
          "description": "Output only. Total number of examples requested to import",
          "format": "int32"
        },
        "dataset": {
          "description": "Ouptut only. The name of imported dataset.",
          "type": "string"
        },
        "importCount": {
          "format": "int32",
          "description": "Output only. Number of examples imported successfully.",
          "type": "integer"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1ListAnnotatedDatasetsResponse": {
      "description": "Results of listing annotated datasets for a dataset.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve next page of results.",
          "type": "string"
        },
        "annotatedDatasets": {
          "description": "The list of annotated datasets to return.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1AnnotatedDataset"
          }
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1ListAnnotatedDatasetsResponse"
    },
    "GoogleCloudDatalabelingV1beta1ImagePayload": {
      "type": "object",
      "properties": {
        "imageThumbnail": {
          "description": "A byte string of a thumbnail image.",
          "format": "byte",
          "type": "string"
        },
        "signedUri": {
          "description": "Signed uri of the image file in the service bucket.",
          "type": "string"
        },
        "imageUri": {
          "type": "string",
          "description": "Image uri from the user bucket."
        },
        "mimeType": {
          "description": "Image format.",
          "type": "string"
        }
      },
      "description": "Container of information about an image.",
      "id": "GoogleCloudDatalabelingV1beta1ImagePayload"
    },
    "GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry": {
      "properties": {
        "recallAt5": {
          "format": "float",
          "type": "number",
          "description": "Recall value for entries with label that has highest 5 scores."
        },
        "f1Score": {
          "type": "number",
          "description": "Harmonic mean of recall and precision.",
          "format": "float"
        },
        "recall": {
          "type": "number",
          "description": "Recall value.",
          "format": "float"
        },
        "f1ScoreAt5": {
          "format": "float",
          "description": "The harmonic mean of recall_at5 and precision_at5.",
          "type": "number"
        },
        "confidenceThreshold": {
          "format": "float",
          "description": "Threshold used for this entry. For classification tasks, this is a classification threshold: a predicted label is categorized as positive or negative (in the context of this point on the PR curve) based on whether the label's score meets this threshold. For image object detection (bounding box) tasks, this is the [intersection-over-union (IOU)](/vision/automl/object-detection/docs/evaluate#intersection-over-union) threshold for the context of this point on the PR curve.",
          "type": "number"
        },
        "recallAt1": {
          "format": "float",
          "description": "Recall value for entries with label that has highest score.",
          "type": "number"
        },
        "precisionAt1": {
          "format": "float",
          "description": "Precision value for entries with label that has highest score.",
          "type": "number"
        },
        "precision": {
          "description": "Precision value.",
          "format": "float",
          "type": "number"
        },
        "f1ScoreAt1": {
          "format": "float",
          "description": "The harmonic mean of recall_at1 and precision_at1.",
          "type": "number"
        },
        "precisionAt5": {
          "format": "float",
          "type": "number",
          "description": "Precision value for entries with label that has highest 5 scores."
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry"
    },
    "GoogleCloudDatalabelingV1beta1LabelImageSegmentationOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1beta1LabelImageSegmentationOperationMetadata",
      "type": "object",
      "description": "Details of a LabelImageSegmentation operation metadata.",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config.",
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig"
        }
      }
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata": {
      "description": "Details of a LabelImageBoundingBox operation metadata.",
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelImageOrientedBoundingBoxOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelImageOrientedBoundingBoxOperationMetadata",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig"
        }
      },
      "type": "object",
      "description": "Details of a LabelImageOrientedBoundingBox operation metadata."
    },
    "GoogleCloudDatalabelingV1beta1PolylineConfig": {
      "properties": {
        "annotationSpecSet": {
          "type": "string",
          "description": "Required. Annotation spec set resource name."
        },
        "instructionMessage": {
          "description": "Optional. Instruction message showed on contributors UI.",
          "type": "string"
        }
      },
      "description": "Config for image polyline human labeling task.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1PolylineConfig"
    },
    "GoogleCloudDatalabelingV1alpha1ExportDataOperationMetadata": {
      "properties": {
        "annotatedDataset": {
          "type": "string",
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\"."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp when export dataset request was created."
        },
        "partialFailures": {
          "type": "array",
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "dataset": {
          "description": "Output only. The name of dataset to be exported. \"projects/*/datasets/*\"",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1alpha1ExportDataOperationMetadata",
      "description": "Metadata of an ExportData operation."
    },
    "GoogleCloudDatalabelingV1beta1Evaluation": {
      "description": "Describes an evaluation between a machine learning model's predictions and ground truth labels. Created when an EvaluationJob runs successfully.",
      "id": "GoogleCloudDatalabelingV1beta1Evaluation",
      "properties": {
        "config": {
          "$ref": "GoogleCloudDatalabelingV1beta1EvaluationConfig",
          "description": "Output only. Options used in the evaluation job that created this evaluation."
        },
        "evaluationJobRunTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp for when the evaluation job that created this evaluation ran."
        },
        "annotationType": {
          "type": "string",
          "enumDescriptions": [
            "",
            "Classification annotations in an image. Allowed for continuous evaluation.",
            "Bounding box annotations in an image. A form of image object detection. Allowed for continuous evaluation.",
            "Oriented bounding box. The box does not have to be parallel to horizontal line.",
            "Bounding poly annotations in an image.",
            "Polyline annotations in an image.",
            "Segmentation annotations in an image.",
            "Classification annotations in video shots.",
            "Video object tracking annotation.",
            "Video object detection annotation.",
            "Video event annotation.",
            "Classification for text. Allowed for continuous evaluation.",
            "Entity extraction for text.",
            "General classification. Allowed for continuous evaluation."
          ],
          "enum": [
            "ANNOTATION_TYPE_UNSPECIFIED",
            "IMAGE_CLASSIFICATION_ANNOTATION",
            "IMAGE_BOUNDING_BOX_ANNOTATION",
            "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION",
            "IMAGE_BOUNDING_POLY_ANNOTATION",
            "IMAGE_POLYLINE_ANNOTATION",
            "IMAGE_SEGMENTATION_ANNOTATION",
            "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION",
            "VIDEO_OBJECT_TRACKING_ANNOTATION",
            "VIDEO_OBJECT_DETECTION_ANNOTATION",
            "VIDEO_EVENT_ANNOTATION",
            "TEXT_CLASSIFICATION_ANNOTATION",
            "TEXT_ENTITY_EXTRACTION_ANNOTATION",
            "GENERAL_CLASSIFICATION_ANNOTATION"
          ],
          "description": "Output only. Type of task that the model version being evaluated performs, as defined in the evaluationJobConfig.inputConfig.annotationType field of the evaluation job that created this evaluation."
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp for when this evaluation was created."
        },
        "evaluatedItemCount": {
          "description": "Output only. The number of items in the ground truth dataset that were used for this evaluation. Only populated when the evaulation is for certain AnnotationTypes.",
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "Output only. Resource name of an evaluation. The name has the following format: \"projects/{project_id}/datasets/{dataset_id}/evaluations/ {evaluation_id}'"
        },
        "evaluationMetrics": {
          "description": "Output only. Metrics comparing predictions to ground truth labels.",
          "$ref": "GoogleCloudDatalabelingV1beta1EvaluationMetrics"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p2alpha1ImportDataOperationResponse": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p2alpha1ImportDataOperationResponse",
      "properties": {
        "importCount": {
          "type": "integer",
          "description": "Output only. Number of examples imported successfully.",
          "format": "int32"
        },
        "dataset": {
          "description": "Ouptut only. The name of imported dataset.",
          "type": "string"
        },
        "totalCount": {
          "description": "Output only. Total number of examples requested to import",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Response used for ImportData longrunning operation."
    },
    "GoogleCloudDatalabelingV1beta1ExportDataRequest": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1ExportDataRequest",
      "properties": {
        "annotatedDataset": {
          "type": "string",
          "description": "Required. Annotated dataset resource name. DataItem in Dataset and their annotations in specified annotated dataset will be exported. It's in format of projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}"
        },
        "filter": {
          "description": "Optional. Filter is not supported at this moment.",
          "type": "string"
        },
        "outputConfig": {
          "description": "Required. Specify the output destination.",
          "$ref": "GoogleCloudDatalabelingV1beta1OutputConfig"
        },
        "userEmailAddress": {
          "type": "string",
          "description": "Email of the user who started the export task and should be notified by email. If empty no notification will be sent."
        }
      },
      "description": "Request message for ExportData API."
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelImageSegmentationOperationMetadata": {
      "type": "object",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig"
        }
      },
      "description": "Details of a LabelImageSegmentation operation metadata.",
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelImageSegmentationOperationMetadata"
    },
    "GoogleCloudDatalabelingV1beta1Dataset": {
      "type": "object",
      "description": "Dataset is the resource to hold your data. You can request multiple labeling tasks for a dataset while each one will generate an AnnotatedDataset.",
      "properties": {
        "inputConfigs": {
          "description": "Output only. This is populated with the original input configs where ImportData is called. It is available only after the clients import data to this dataset.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1InputConfig"
          }
        },
        "dataItemCount": {
          "type": "string",
          "format": "int64",
          "description": "Output only. The number of data items in the dataset."
        },
        "lastMigrateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Last time that the Dataset is migrated to AI Platform V2. If any of the AnnotatedDataset is migrated, the last_migration_time in Dataset is also updated."
        },
        "description": {
          "description": "Optional. User-provided description of the annotation specification set. The description can be up to 10000 characters long.",
          "type": "string"
        },
        "blockingResources": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. The names of any related resources that are blocking changes to the dataset."
        },
        "displayName": {
          "description": "Required. The display name of the dataset. Maximum of 64 characters.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Output only. Dataset resource name, format is: projects/{project_id}/datasets/{dataset_id}"
        },
        "createTime": {
          "description": "Output only. Time the dataset is created.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1Dataset"
    },
    "GoogleCloudDatalabelingV1beta1VideoEventAnnotation": {
      "id": "GoogleCloudDatalabelingV1beta1VideoEventAnnotation",
      "description": "Video event annotation.",
      "properties": {
        "annotationSpec": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec",
          "description": "Label of the event in this annotation."
        },
        "timeSegment": {
          "$ref": "GoogleCloudDatalabelingV1beta1TimeSegment",
          "description": "The time segment of the video to which the annotation applies."
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1PdfInstruction": {
      "type": "object",
      "description": "Instruction from a PDF file.",
      "properties": {
        "gcsFileUri": {
          "description": "PDF file for the instruction. Only gcs path is allowed.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1PdfInstruction"
    },
    "GoogleCloudDatalabelingV1alpha1GcsDestination": {
      "properties": {
        "outputUri": {
          "type": "string",
          "description": "Required. The output uri of destination file."
        },
        "mimeType": {
          "description": "Required. The format of the gcs destination. Only \"text/csv\" and \"application/json\" are supported.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1alpha1GcsDestination",
      "description": "Export destination of the data.Only gcs path is allowed in output_uri."
    },
    "GoogleCloudDatalabelingV1beta1EvaluationJobConfig": {
      "type": "object",
      "description": "Configures specific details of how a continuous evaluation job works. Provide this configuration when you create an EvaluationJob.",
      "id": "GoogleCloudDatalabelingV1beta1EvaluationJobConfig",
      "properties": {
        "humanAnnotationConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
          "description": "Optional. Details for human annotation of your data. If you set labelMissingGroundTruth to `true` for this evaluation job, then you must specify this field. If you plan to provide your own ground truth labels, then omit this field. Note that you must create an Instruction resource before you can specify this field. Provide the name of the instruction resource in the `instruction` field within this configuration."
        },
        "textClassificationConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1TextClassificationConfig",
          "description": "Specify this field if your model version performs text classification. `annotationSpecSet` in this configuration must match EvaluationJob.annotationSpecSet. `allowMultiLabel` in this configuration must match `classificationMetadata.isMultiLabel` in input_config."
        },
        "bigqueryImportKeys": {
          "description": "Required. Prediction keys that tell Data Labeling Service where to find the data for evaluation in your BigQuery table. When the service samples prediction input and output from your model version and saves it to BigQuery, the data gets stored as JSON strings in the BigQuery table. These keys tell Data Labeling Service how to parse the JSON. You can provide the following entries in this field: * `data_json_key`: the data key for prediction input. You must provide either this key or `reference_json_key`. * `reference_json_key`: the data reference key for prediction input. You must provide either this key or `data_json_key`. * `label_json_key`: the label key for prediction output. Required. * `label_score_json_key`: the score key for prediction output. Required. * `bounding_box_json_key`: the bounding box key for prediction output. Required if your model version perform image object detection. Learn [how to configure prediction keys](/ml-engine/docs/continuous-evaluation/create-job#prediction-keys).",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "evaluationConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1EvaluationConfig",
          "description": "Required. Details for calculating evaluation metrics and creating Evaulations. If your model version performs image object detection, you must specify the `boundingBoxEvaluationOptions` field within this configuration. Otherwise, provide an empty object for this configuration."
        },
        "inputConfig": {
          "description": "Rquired. Details for the sampled prediction input. Within this configuration, there are requirements for several fields: * `dataType` must be one of `IMAGE`, `TEXT`, or `GENERAL_DATA`. * `annotationType` must be one of `IMAGE_CLASSIFICATION_ANNOTATION`, `TEXT_CLASSIFICATION_ANNOTATION`, `GENERAL_CLASSIFICATION_ANNOTATION`, or `IMAGE_BOUNDING_BOX_ANNOTATION` (image object detection). * If your machine learning model performs classification, you must specify `classificationMetadata.isMultiLabel`. * You must specify `bigquerySource` (not `gcsSource`).",
          "$ref": "GoogleCloudDatalabelingV1beta1InputConfig"
        },
        "exampleCount": {
          "format": "int32",
          "type": "integer",
          "description": "Required. The maximum number of predictions to sample and save to BigQuery during each evaluation interval. This limit overrides `example_sample_percentage`: even if the service has not sampled enough predictions to fulfill `example_sample_perecentage` during an interval, it stops sampling predictions when it meets this limit."
        },
        "exampleSamplePercentage": {
          "description": "Required. Fraction of predictions to sample and save to BigQuery during each evaluation interval. For example, 0.1 means 10% of predictions served by your model version get saved to BigQuery.",
          "type": "number",
          "format": "double"
        },
        "boundingPolyConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1BoundingPolyConfig",
          "description": "Specify this field if your model version performs image object detection (bounding box detection). `annotationSpecSet` in this configuration must match EvaluationJob.annotationSpecSet."
        },
        "evaluationJobAlertConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig",
          "description": "Optional. Configuration details for evaluation job alerts. Specify this field if you want to receive email alerts if the evaluation job finds that your predictions have low mean average precision during a run."
        },
        "imageClassificationConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1ImageClassificationConfig",
          "description": "Specify this field if your model version performs image classification or general classification. `annotationSpecSet` in this configuration must match EvaluationJob.annotationSpecSet. `allowMultiLabel` in this configuration must match `classificationMetadata.isMultiLabel` in input_config."
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig": {
      "properties": {
        "minAcceptableMeanAveragePrecision": {
          "description": "Required. A number between 0 and 1 that describes a minimum mean average precision threshold. When the evaluation job runs, if it calculates that your model version's predictions from the recent interval have meanAveragePrecision below this threshold, then it sends an alert to your specified email.",
          "type": "number",
          "format": "double"
        },
        "email": {
          "description": "Required. An email address to send alerts to.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1EvaluationJobAlertConfig",
      "type": "object",
      "description": "Provides details for how an evaluation job sends email alerts based on the results of a run."
    },
    "GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata": {
      "type": "object",
      "properties": {
        "lastUpdateTime": {
          "description": "When the thread is last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "thumbnail": {
          "format": "byte",
          "type": "string",
          "description": "An image thumbnail of this thread."
        },
        "status": {
          "enumDescriptions": [
            "",
            "Feedback thread is created with no reply;",
            "Feedback thread is replied at least once;"
          ],
          "type": "string",
          "enum": [
            "FEEDBACK_THREAD_STATUS_UNSPECIFIED",
            "NEW",
            "REPLIED"
          ]
        },
        "createTime": {
          "description": "When the thread is created",
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata"
    },
    "GoogleCloudDatalabelingV1alpha1LabelVideoClassificationOperationMetadata": {
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig"
        }
      },
      "id": "GoogleCloudDatalabelingV1alpha1LabelVideoClassificationOperationMetadata",
      "type": "object",
      "description": "Details of a LabelVideoClassification operation metadata."
    },
    "GoogleCloudDatalabelingV1beta1GcsSource": {
      "id": "GoogleCloudDatalabelingV1beta1GcsSource",
      "description": "Source of the Cloud Storage file to be imported.",
      "properties": {
        "mimeType": {
          "description": "Required. The format of the source file. Only \"text/csv\" is supported.",
          "type": "string"
        },
        "inputUri": {
          "type": "string",
          "description": "Required. The input URI of source file. This must be a Cloud Storage path (`gs://...`)."
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1LabelOperationMetadata": {
      "type": "object",
      "description": "Metadata of a labeling operation, such as LabelImage or LabelVideo. Next tag: 23",
      "properties": {
        "dataset": {
          "description": "Output only. The name of dataset to be labeled. \"projects/*/datasets/*\"",
          "type": "string"
        },
        "videoEventDetails": {
          "$ref": "GoogleCloudDatalabelingV1beta1LabelVideoEventOperationMetadata",
          "description": "Details of label video event operation."
        },
        "videoClassificationDetails": {
          "description": "Details of label video classification operation.",
          "$ref": "GoogleCloudDatalabelingV1beta1LabelVideoClassificationOperationMetadata"
        },
        "videoObjectTrackingDetails": {
          "description": "Details of label video object tracking operation.",
          "$ref": "GoogleCloudDatalabelingV1beta1LabelVideoObjectTrackingOperationMetadata"
        },
        "imageBoundingBoxDetails": {
          "$ref": "GoogleCloudDatalabelingV1beta1LabelImageBoundingBoxOperationMetadata",
          "description": "Details of label image bounding box operation."
        },
        "partialFailures": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details."
        },
        "progressPercent": {
          "format": "int32",
          "type": "integer",
          "description": "Output only. Progress of label operation. Range: [0, 100]."
        },
        "imageSegmentationDetails": {
          "description": "Details of label image segmentation operation.",
          "$ref": "GoogleCloudDatalabelingV1beta1LabelImageSegmentationOperationMetadata"
        },
        "imageClassificationDetails": {
          "description": "Details of label image classification operation.",
          "$ref": "GoogleCloudDatalabelingV1beta1LabelImageClassificationOperationMetadata"
        },
        "imageOrientedBoundingBoxDetails": {
          "description": "Details of label image oriented bounding box operation.",
          "$ref": "GoogleCloudDatalabelingV1beta1LabelImageOrientedBoundingBoxOperationMetadata"
        },
        "textClassificationDetails": {
          "$ref": "GoogleCloudDatalabelingV1beta1LabelTextClassificationOperationMetadata",
          "description": "Details of label text classification operation."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp when labeling request was created."
        },
        "videoObjectDetectionDetails": {
          "$ref": "GoogleCloudDatalabelingV1beta1LabelVideoObjectDetectionOperationMetadata",
          "description": "Details of label video object detection operation."
        },
        "textEntityExtractionDetails": {
          "$ref": "GoogleCloudDatalabelingV1beta1LabelTextEntityExtractionOperationMetadata",
          "description": "Details of label text entity extraction operation."
        },
        "imagePolylineDetails": {
          "$ref": "GoogleCloudDatalabelingV1beta1LabelImagePolylineOperationMetadata",
          "description": "Details of label image polyline operation."
        },
        "imageBoundingPolyDetails": {
          "$ref": "GoogleCloudDatalabelingV1beta1LabelImageBoundingPolyOperationMetadata",
          "description": "Details of label image bounding poly operation."
        },
        "annotatedDataset": {
          "type": "string",
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\"."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1LabelOperationMetadata"
    },
    "GoogleCloudDatalabelingV1beta1DataItem": {
      "type": "object",
      "description": "DataItem is a piece of data, without annotation. For example, an image.",
      "id": "GoogleCloudDatalabelingV1beta1DataItem",
      "properties": {
        "name": {
          "description": "Output only. Name of the data item, in format of: projects/{project_id}/datasets/{dataset_id}/dataItems/{data_item_id}",
          "type": "string"
        },
        "imagePayload": {
          "$ref": "GoogleCloudDatalabelingV1beta1ImagePayload",
          "description": "The image payload, a container of the image bytes/uri."
        },
        "textPayload": {
          "$ref": "GoogleCloudDatalabelingV1beta1TextPayload",
          "description": "The text payload, a container of text content."
        },
        "videoPayload": {
          "description": "The video payload, a container of the video uri.",
          "$ref": "GoogleCloudDatalabelingV1beta1VideoPayload"
        }
      }
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelImageClassificationOperationMetadata": {
      "type": "object",
      "description": "Metadata of a LabelImageClassification operation.",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig"
        }
      },
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelImageClassificationOperationMetadata"
    },
    "GoogleCloudDatalabelingV1beta1SentimentConfig": {
      "id": "GoogleCloudDatalabelingV1beta1SentimentConfig",
      "type": "object",
      "description": "Config for setting up sentiments.",
      "properties": {
        "enableLabelSentimentSelection": {
          "type": "boolean",
          "description": "If set to true, contributors will have the option to select sentiment of the label they selected, to mark it as negative or positive label. Default is false."
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1BigQuerySource": {
      "description": "The BigQuery location for input data. If used in an EvaluationJob, this is where the service saves the prediction input and output sampled from the model version.",
      "id": "GoogleCloudDatalabelingV1beta1BigQuerySource",
      "properties": {
        "inputUri": {
          "type": "string",
          "description": "Required. BigQuery URI to a table, up to 2,000 characters long. If you specify the URI of a table that does not exist, Data Labeling Service creates a table at the URI with the correct schema when you create your EvaluationJob. If you specify the URI of a table that already exists, it must have the [correct schema](/ml-engine/docs/continuous-evaluation/create-job#table-schema). Provide the table URI in the following format: \"bq://{your_project_id}/ {your_dataset_name}/{your_table_name}\" [Learn more](/ml-engine/docs/continuous-evaluation/create-job#table-schema)."
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelOperationMetadata",
      "properties": {
        "imageSegmentationDetails": {
          "description": "Details of label image segmentation operation.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata"
        },
        "imageBoundingPolyDetails": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingPolyOperationMetadata",
          "description": "Details of label image bounding poly operation."
        },
        "imageOrientedBoundingBoxDetails": {
          "description": "Details of label image oriented bounding box operation.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelImageOrientedBoundingBoxOperationMetadata"
        },
        "videoObjectDetectionDetails": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectDetectionOperationMetadata",
          "description": "Details of label video object detection operation."
        },
        "videoClassificationDetails": {
          "description": "Details of label video classification operation.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelVideoClassificationOperationMetadata"
        },
        "imageClassificationDetails": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelImageClassificationOperationMetadata",
          "description": "Details of label image classification operation."
        },
        "partialFailures": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details."
        },
        "dataset": {
          "description": "Output only. The name of dataset to be labeled. \"projects/*/datasets/*\"",
          "type": "string"
        },
        "textClassificationDetails": {
          "description": "Details of label text classification operation.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp when labeling request was created."
        },
        "videoEventDetails": {
          "description": "Details of label video event operation.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelVideoEventOperationMetadata"
        },
        "textEntityExtractionDetails": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata",
          "description": "Details of label text entity extraction operation."
        },
        "annotatedDataset": {
          "type": "string",
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\"."
        },
        "imagePolylineDetails": {
          "description": "Details of label image polyline operation.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelImagePolylineOperationMetadata"
        },
        "imageBoundingBoxDetails": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelImageBoundingBoxOperationMetadata",
          "description": "Details of label image bounding box operation."
        },
        "progressPercent": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. Progress of label operation. Range: [0, 100]."
        },
        "videoObjectTrackingDetails": {
          "description": "Details of label video object tracking operation.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata"
        }
      },
      "description": "Metadata of a labeling operation, such as LabelImage or LabelVideo. Next tag: 23",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1ConfusionMatrixEntry": {
      "type": "object",
      "properties": {
        "annotationSpec": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec",
          "description": "The annotation spec of a predicted label."
        },
        "itemCount": {
          "format": "int32",
          "description": "Number of items predicted to have this label. (The ground truth label for these items is the `Row.annotationSpec` of this entry's parent.)",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1ConfusionMatrixEntry"
    },
    "GoogleCloudDatalabelingV1beta1ListEvaluationJobsResponse": {
      "id": "GoogleCloudDatalabelingV1beta1ListEvaluationJobsResponse",
      "description": "Results for listing evaluation jobs.",
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results."
        },
        "evaluationJobs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1EvaluationJob"
          },
          "description": "The list of evaluation jobs to return."
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1OperatorMetadata": {
      "type": "object",
      "description": "General information useful for labels coming from contributors.",
      "properties": {
        "totalVotes": {
          "type": "integer",
          "format": "int32",
          "description": "The total number of contributors that answer this question."
        },
        "labelVotes": {
          "type": "integer",
          "description": "The total number of contributors that choose this label.",
          "format": "int32"
        },
        "score": {
          "description": "Confidence score corresponding to a label. For examle, if 3 contributors have answered the question and 2 of them agree on the final label, the confidence score will be 0.67 (2/3).",
          "format": "float",
          "type": "number"
        },
        "comments": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Comments from contributors."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1OperatorMetadata"
    },
    "GoogleCloudDatalabelingV1beta1ClassificationMetadata": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1ClassificationMetadata",
      "properties": {
        "isMultiLabel": {
          "type": "boolean",
          "description": "Whether the classification task is multi-label or not."
        }
      },
      "description": "Metadata for classification annotations."
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata": {
      "type": "object",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig"
        }
      },
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelTextClassificationOperationMetadata",
      "description": "Details of a LabelTextClassification operation metadata."
    },
    "GoogleLongrunningOperation": {
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "GoogleLongrunningOperation",
      "properties": {
        "response": {
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "GoogleRpcStatus"
        },
        "done": {
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
          "type": "boolean"
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1InputConfig": {
      "id": "GoogleCloudDatalabelingV1beta1InputConfig",
      "type": "object",
      "properties": {
        "gcsSource": {
          "description": "Source located in Cloud Storage.",
          "$ref": "GoogleCloudDatalabelingV1beta1GcsSource"
        },
        "textMetadata": {
          "$ref": "GoogleCloudDatalabelingV1beta1TextMetadata",
          "description": "Required for text import, as language code must be specified."
        },
        "annotationType": {
          "description": "Optional. The type of annotation to be performed on this data. You must specify this field if you are using this InputConfig in an EvaluationJob.",
          "enum": [
            "ANNOTATION_TYPE_UNSPECIFIED",
            "IMAGE_CLASSIFICATION_ANNOTATION",
            "IMAGE_BOUNDING_BOX_ANNOTATION",
            "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION",
            "IMAGE_BOUNDING_POLY_ANNOTATION",
            "IMAGE_POLYLINE_ANNOTATION",
            "IMAGE_SEGMENTATION_ANNOTATION",
            "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION",
            "VIDEO_OBJECT_TRACKING_ANNOTATION",
            "VIDEO_OBJECT_DETECTION_ANNOTATION",
            "VIDEO_EVENT_ANNOTATION",
            "TEXT_CLASSIFICATION_ANNOTATION",
            "TEXT_ENTITY_EXTRACTION_ANNOTATION",
            "GENERAL_CLASSIFICATION_ANNOTATION"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "Classification annotations in an image. Allowed for continuous evaluation.",
            "Bounding box annotations in an image. A form of image object detection. Allowed for continuous evaluation.",
            "Oriented bounding box. The box does not have to be parallel to horizontal line.",
            "Bounding poly annotations in an image.",
            "Polyline annotations in an image.",
            "Segmentation annotations in an image.",
            "Classification annotations in video shots.",
            "Video object tracking annotation.",
            "Video object detection annotation.",
            "Video event annotation.",
            "Classification for text. Allowed for continuous evaluation.",
            "Entity extraction for text.",
            "General classification. Allowed for continuous evaluation."
          ]
        },
        "bigquerySource": {
          "description": "Source located in BigQuery. You must specify this field if you are using this InputConfig in an EvaluationJob.",
          "$ref": "GoogleCloudDatalabelingV1beta1BigQuerySource"
        },
        "classificationMetadata": {
          "description": "Optional. Metadata about annotations for the input. You must specify this field if you are using this InputConfig in an EvaluationJob for a model version that performs classification.",
          "$ref": "GoogleCloudDatalabelingV1beta1ClassificationMetadata"
        },
        "dataType": {
          "type": "string",
          "enumDescriptions": [
            "Data type is unspecified.",
            "Allowed for continuous evaluation.",
            "Video data type.",
            "Allowed for continuous evaluation.",
            "Allowed for continuous evaluation."
          ],
          "description": "Required. Data type must be specifed when user tries to import data.",
          "enum": [
            "DATA_TYPE_UNSPECIFIED",
            "IMAGE",
            "VIDEO",
            "TEXT",
            "GENERAL_DATA"
          ]
        }
      },
      "description": "The configuration of input data, including data type, location, etc."
    },
    "GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest": {
      "description": "Request message for CreateEvaluationJob.",
      "type": "object",
      "properties": {
        "job": {
          "$ref": "GoogleCloudDatalabelingV1beta1EvaluationJob",
          "description": "Required. The evaluation job to create."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1CreateEvaluationJobRequest"
    },
    "GoogleCloudDatalabelingV1alpha1LabelImageBoundingBoxOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1alpha1LabelImageBoundingBoxOperationMetadata",
      "type": "object",
      "description": "Details of a LabelImageBoundingBox operation metadata.",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1ExampleComparison": {
      "properties": {
        "modelCreatedExamples": {
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1Example"
          },
          "description": "Predictions by the model for the input.",
          "type": "array"
        },
        "groundTruthExample": {
          "$ref": "GoogleCloudDatalabelingV1beta1Example",
          "description": "The ground truth output for the input."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1ExampleComparison",
      "description": "Example comparisons comparing ground truth output and predictions for a specific input.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1ObjectTrackingConfig": {
      "properties": {
        "annotationSpecSet": {
          "type": "string",
          "description": "Required. Annotation spec set resource name."
        },
        "clipLength": {
          "type": "integer",
          "format": "int32",
          "description": "Videos will be cut to smaller clips to make it easier for labelers to work on. Users can configure is field in seconds, if not set, default value is 20s."
        },
        "overlapLength": {
          "description": "The overlap length between different video clips. Users can configure is field in seconds, if not set, default value is 0.3s.",
          "type": "integer",
          "format": "int32"
        }
      },
      "type": "object",
      "description": "Config for video object tracking human labeling task.",
      "id": "GoogleCloudDatalabelingV1beta1ObjectTrackingConfig"
    },
    "GoogleCloudDatalabelingV1beta1Vertex": {
      "description": "A vertex represents a 2D point in the image. NOTE: the vertex coordinates are in the same scale as the original image.",
      "id": "GoogleCloudDatalabelingV1beta1Vertex",
      "type": "object",
      "properties": {
        "x": {
          "type": "integer",
          "format": "int32",
          "description": "X coordinate."
        },
        "y": {
          "type": "integer",
          "format": "int32",
          "description": "Y coordinate."
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1TextClassificationAnnotation": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1TextClassificationAnnotation",
      "properties": {
        "annotationSpec": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec",
          "description": "Label of the text."
        }
      },
      "description": "Text classification annotation."
    },
    "GoogleCloudDatalabelingV1beta1LabelTextClassificationOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1LabelTextClassificationOperationMetadata",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig"
        }
      },
      "description": "Details of a LabelTextClassification operation metadata."
    },
    "GoogleCloudDatalabelingV1beta1TimeSegment": {
      "type": "object",
      "properties": {
        "startTimeOffset": {
          "format": "google-duration",
          "description": "Start of the time segment (inclusive), represented as the duration since the example start.",
          "type": "string"
        },
        "endTimeOffset": {
          "type": "string",
          "format": "google-duration",
          "description": "End of the time segment (exclusive), represented as the duration since the example start."
        }
      },
      "description": "A time period inside of an example that has a time dimension (e.g. video).",
      "id": "GoogleCloudDatalabelingV1beta1TimeSegment"
    },
    "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig": {
      "id": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig",
      "properties": {
        "instruction": {
          "type": "string",
          "description": "Required. Instruction resource name."
        },
        "replicaCount": {
          "format": "int32",
          "type": "integer",
          "description": "Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image related labeling, valid values are 1, 3, 5."
        },
        "labelGroup": {
          "type": "string",
          "description": "Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\\\d_-]{0,128}`."
        },
        "annotatedDatasetDescription": {
          "type": "string",
          "description": "Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long."
        },
        "languageCode": {
          "description": "Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related. For example, French text classification.",
          "type": "string"
        },
        "contributorEmails": {
          "description": "Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "userEmailAddress": {
          "type": "string",
          "description": "Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent."
        },
        "annotatedDatasetDisplayName": {
          "description": "Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters .",
          "type": "string"
        },
        "questionDuration": {
          "type": "string",
          "format": "google-duration",
          "description": "Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds."
        }
      },
      "description": "Configuration for how human labeling task should be done.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1LabelImageRequest": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1LabelImageRequest",
      "description": "Request message for starting an image labeling task.",
      "properties": {
        "boundingPolyConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1BoundingPolyConfig",
          "description": "Configuration for bounding box and bounding poly task. One of image_classification_config, bounding_poly_config, polyline_config and segmentation_config are required."
        },
        "imageClassificationConfig": {
          "description": "Configuration for image classification task. One of image_classification_config, bounding_poly_config, polyline_config and segmentation_config are required.",
          "$ref": "GoogleCloudDatalabelingV1beta1ImageClassificationConfig"
        },
        "polylineConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1PolylineConfig",
          "description": "Configuration for polyline task. One of image_classification_config, bounding_poly_config, polyline_config and segmentation_config are required."
        },
        "basicConfig": {
          "description": "Required. Basic human annotation config.",
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig"
        },
        "feature": {
          "enumDescriptions": [
            "",
            "Label whole image with one or more of labels.",
            "Label image with bounding boxes for labels.",
            "Label oriented bounding box. The box does not have to be parallel to horizontal line.",
            "Label images with bounding poly. A bounding poly is a plane figure that is bounded by a finite chain of straight line segments closing in a loop.",
            "Label images with polyline. Polyline is formed by connected line segments which are not in closed form.",
            "Label images with segmentation. Segmentation is different from bounding poly since it is more fine-grained, pixel level annotation."
          ],
          "type": "string",
          "enum": [
            "FEATURE_UNSPECIFIED",
            "CLASSIFICATION",
            "BOUNDING_BOX",
            "ORIENTED_BOUNDING_BOX",
            "BOUNDING_POLY",
            "POLYLINE",
            "SEGMENTATION"
          ],
          "description": "Required. The type of image labeling task."
        },
        "segmentationConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1SegmentationConfig",
          "description": "Configuration for segmentation task. One of image_classification_config, bounding_poly_config, polyline_config and segmentation_config are required."
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1ExportDataOperationMetadata": {
      "type": "object",
      "description": "Metadata of an ExportData operation.",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. Timestamp when export dataset request was created.",
          "type": "string"
        },
        "partialFailures": {
          "type": "array",
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "dataset": {
          "type": "string",
          "description": "Output only. The name of dataset to be exported. \"projects/*/datasets/*\""
        },
        "annotatedDataset": {
          "type": "string",
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\"."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1ExportDataOperationMetadata"
    },
    "GoogleCloudDatalabelingV1beta1SearchExampleComparisonsRequest": {
      "id": "GoogleCloudDatalabelingV1beta1SearchExampleComparisonsRequest",
      "type": "object",
      "properties": {
        "pageToken": {
          "type": "string",
          "description": "Optional. A token identifying a page of results for the server to return. Typically obtained by the nextPageToken of the response to a previous search rquest. If you don't specify this field, the API call requests the first page of the search."
        },
        "pageSize": {
          "format": "int32",
          "description": "Optional. Requested page size. Server may return fewer results than requested. Default value is 100.",
          "type": "integer"
        }
      },
      "description": "Request message of SearchExampleComparisons."
    },
    "GoogleCloudDatalabelingV1beta1NormalizedVertex": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1NormalizedVertex",
      "description": "A vertex represents a 2D point in the image. NOTE: the normalized vertex coordinates are relative to the original image and range from 0 to 1.",
      "properties": {
        "x": {
          "description": "X coordinate.",
          "format": "float",
          "type": "number"
        },
        "y": {
          "description": "Y coordinate.",
          "type": "number",
          "format": "float"
        }
      }
    },
    "GoogleCloudDatalabelingV1alpha1ExportDataOperationResponse": {
      "properties": {
        "exportCount": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. Number of examples exported successfully."
        },
        "labelStats": {
          "description": "Output only. Statistic infos of labels in the exported dataset.",
          "$ref": "GoogleCloudDatalabelingV1alpha1LabelStats"
        },
        "outputConfig": {
          "description": "Output only. output_config in the ExportData request.",
          "$ref": "GoogleCloudDatalabelingV1alpha1OutputConfig"
        },
        "dataset": {
          "type": "string",
          "description": "Ouptut only. The name of dataset. \"projects/*/datasets/*\""
        },
        "annotatedDataset": {
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\".",
          "type": "string"
        },
        "totalCount": {
          "format": "int32",
          "description": "Output only. Total number of examples requested to export",
          "type": "integer"
        }
      },
      "id": "GoogleCloudDatalabelingV1alpha1ExportDataOperationResponse",
      "type": "object",
      "description": "Response used for ExportDataset longrunning operation."
    },
    "GoogleCloudDatalabelingV1beta1FeedbackMessage": {
      "id": "GoogleCloudDatalabelingV1beta1FeedbackMessage",
      "type": "object",
      "properties": {
        "image": {
          "description": "The image storing this feedback if the feedback is an image representing operator's comments.",
          "type": "string",
          "format": "byte"
        },
        "createTime": {
          "description": "Create time.",
          "format": "google-datetime",
          "type": "string"
        },
        "body": {
          "description": "String content of the feedback. Maximum of 10000 characters.",
          "type": "string"
        },
        "requesterFeedbackMetadata": {
          "$ref": "GoogleCloudDatalabelingV1beta1RequesterFeedbackMetadata"
        },
        "operatorFeedbackMetadata": {
          "$ref": "GoogleCloudDatalabelingV1beta1OperatorFeedbackMetadata"
        },
        "name": {
          "description": "Name of the feedback message in a feedback thread. Format: 'project/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}/feedbackMessage/{feedback_message_id}'",
          "type": "string"
        }
      },
      "description": "A feedback message inside a feedback thread."
    },
    "GoogleCloudDatalabelingV1beta1ImageBoundingPolyAnnotation": {
      "description": "Image bounding poly annotation. It represents a polygon including bounding box in the image.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1ImageBoundingPolyAnnotation",
      "properties": {
        "normalizedBoundingPoly": {
          "$ref": "GoogleCloudDatalabelingV1beta1NormalizedBoundingPoly"
        },
        "boundingPoly": {
          "$ref": "GoogleCloudDatalabelingV1beta1BoundingPoly"
        },
        "annotationSpec": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec",
          "description": "Label of object in this bounding polygon."
        }
      }
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata": {
      "description": "Details of a LabelTextEntityExtraction operation metadata.",
      "type": "object",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      },
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelTextEntityExtractionOperationMetadata"
    },
    "GoogleCloudDatalabelingV1alpha1LabelTextClassificationOperationMetadata": {
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig"
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1alpha1LabelTextClassificationOperationMetadata",
      "description": "Details of a LabelTextClassification operation metadata."
    },
    "GoogleCloudDatalabelingV1beta1ResumeEvaluationJobRequest": {
      "id": "GoogleCloudDatalabelingV1beta1ResumeEvaluationJobRequest",
      "type": "object",
      "properties": {},
      "description": "Request message ResumeEvaluationJob."
    },
    "GoogleCloudDatalabelingV1beta1PrCurve": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1PrCurve",
      "properties": {
        "annotationSpec": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec",
          "description": "The annotation spec of the label for which the precision-recall curve calculated. If this field is empty, that means the precision-recall curve is an aggregate curve for all labels."
        },
        "confidenceMetricsEntries": {
          "description": "Entries that make up the precision-recall graph. Each entry is a \"point\" on the graph drawn for a different `confidence_threshold`.",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1ConfidenceMetricsEntry"
          },
          "type": "array"
        },
        "meanAveragePrecision": {
          "format": "float",
          "type": "number",
          "description": "Mean average prcision of this curve."
        },
        "areaUnderCurve": {
          "format": "float",
          "description": "Area under the precision-recall curve. Not to be confused with area under a receiver operating characteristic (ROC) curve.",
          "type": "number"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1LabelTextEntityExtractionOperationMetadata": {
      "description": "Details of a LabelTextEntityExtraction operation metadata.",
      "id": "GoogleCloudDatalabelingV1beta1LabelTextEntityExtractionOperationMetadata",
      "type": "object",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig"
        }
      }
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelVideoObjectDetectionOperationMetadata": {
      "description": "Details of a LabelVideoObjectDetection operation metadata.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelVideoObjectDetectionOperationMetadata",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1AnnotationSpec": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1AnnotationSpec",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. The display name of the AnnotationSpec. Maximum of 64 characters."
        },
        "description": {
          "description": "Optional. User-provided description of the annotation specification. The description can be up to 10,000 characters long.",
          "type": "string"
        },
        "index": {
          "format": "int32",
          "description": "Output only. This is the integer index of the AnnotationSpec. The index for the whole AnnotationSpecSet is sequential starting from 0. For example, an AnnotationSpecSet with classes `dog` and `cat`, might contain one AnnotationSpec with `{ display_name: \"dog\", index: 0 }` and one AnnotationSpec with `{ display_name: \"cat\", index: 1 }`. This is especially useful for model training as it encodes the string labels into numeric values.",
          "type": "integer"
        }
      },
      "description": "Container of information related to one possible annotation that can be used in a labeling task. For example, an image classification task where images are labeled as `dog` or `cat` must reference an AnnotationSpec for `dog` and an AnnotationSpec for `cat`."
    },
    "GoogleCloudDatalabelingV1beta1LabelImagePolylineOperationMetadata": {
      "type": "object",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig"
        }
      },
      "description": "Details of LabelImagePolyline operation metadata.",
      "id": "GoogleCloudDatalabelingV1beta1LabelImagePolylineOperationMetadata"
    },
    "GoogleCloudDatalabelingV1beta1LabelTextRequest": {
      "description": "Request message for LabelText.",
      "type": "object",
      "properties": {
        "feature": {
          "enum": [
            "FEATURE_UNSPECIFIED",
            "TEXT_CLASSIFICATION",
            "TEXT_ENTITY_EXTRACTION"
          ],
          "enumDescriptions": [
            "",
            "Label text content to one of more labels.",
            "Label entities and their span in text."
          ],
          "type": "string",
          "description": "Required. The type of text labeling task."
        },
        "textClassificationConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1TextClassificationConfig",
          "description": "Configuration for text classification task. One of text_classification_config and text_entity_extraction_config is required."
        },
        "textEntityExtractionConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig",
          "description": "Configuration for entity extraction task. One of text_classification_config and text_entity_extraction_config is required."
        },
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
          "description": "Required. Basic human annotation config."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1LabelTextRequest"
    },
    "GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata": {
      "id": "GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata",
      "type": "object",
      "properties": {
        "polylineConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1PolylineConfig",
          "description": "Configuration for image polyline task."
        },
        "boundingPolyConfig": {
          "description": "Configuration for image bounding box and bounding poly task.",
          "$ref": "GoogleCloudDatalabelingV1beta1BoundingPolyConfig"
        },
        "objectTrackingConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1ObjectTrackingConfig",
          "description": "Configuration for video object tracking task."
        },
        "textClassificationConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1TextClassificationConfig",
          "description": "Configuration for text classification task."
        },
        "objectDetectionConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1ObjectDetectionConfig",
          "description": "Configuration for video object detection task."
        },
        "humanAnnotationConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
          "description": "HumanAnnotationConfig used when requesting the human labeling task for this AnnotatedDataset."
        },
        "textEntityExtractionConfig": {
          "description": "Configuration for text entity extraction task.",
          "$ref": "GoogleCloudDatalabelingV1beta1TextEntityExtractionConfig"
        },
        "videoClassificationConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1VideoClassificationConfig",
          "description": "Configuration for video classification task."
        },
        "imageClassificationConfig": {
          "description": "Configuration for image classification task.",
          "$ref": "GoogleCloudDatalabelingV1beta1ImageClassificationConfig"
        },
        "segmentationConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1SegmentationConfig",
          "description": "Configuration for image segmentation task."
        },
        "eventConfig": {
          "description": "Configuration for video event labeling task.",
          "$ref": "GoogleCloudDatalabelingV1beta1EventConfig"
        }
      },
      "description": "Metadata on AnnotatedDataset."
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelVideoObjectTrackingOperationMetadata": {
      "type": "object",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      },
      "description": "Details of a LabelVideoObjectTracking operation metadata.",
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelVideoObjectTrackingOperationMetadata"
    },
    "GoogleCloudDatalabelingV1beta1LabelImageBoundingPolyOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1beta1LabelImageBoundingPolyOperationMetadata",
      "description": "Details of LabelImageBoundingPoly operation metadata.",
      "type": "object",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1Annotation": {
      "description": "Annotation for Example. Each example may have one or more annotations. For example in image classification problem, each image might have one or more labels. We call labels binded with this image an Annotation.",
      "id": "GoogleCloudDatalabelingV1beta1Annotation",
      "type": "object",
      "properties": {
        "name": {
          "description": "Output only. Unique name of this annotation, format is: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset}/examples/{example_id}/annotations/{annotation_id}",
          "type": "string"
        },
        "annotationMetadata": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationMetadata",
          "description": "Output only. Annotation metadata, including information like votes for labels."
        },
        "annotationValue": {
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationValue",
          "description": "Output only. This is the actual annotation value, e.g classification, bounding box values are stored here."
        },
        "annotationSource": {
          "enum": [
            "ANNOTATION_SOURCE_UNSPECIFIED",
            "OPERATOR"
          ],
          "enumDescriptions": [
            "",
            "Answer is provided by a human contributor."
          ],
          "description": "Output only. The source of the annotation.",
          "type": "string"
        },
        "annotationSentiment": {
          "type": "string",
          "description": "Output only. Sentiment for this annotation.",
          "enumDescriptions": [
            "",
            "This annotation describes negatively about the data.",
            "This label describes positively about the data."
          ],
          "enum": [
            "ANNOTATION_SENTIMENT_UNSPECIFIED",
            "NEGATIVE",
            "POSITIVE"
          ]
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1Polyline": {
      "properties": {
        "vertices": {
          "type": "array",
          "description": "The polyline vertices.",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1Vertex"
          }
        }
      },
      "description": "A line with multiple line segments.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1Polyline"
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelOperationMetadata",
      "description": "Metadata of a labeling operation, such as LabelImage or LabelVideo. Next tag: 23",
      "properties": {
        "dataset": {
          "type": "string",
          "description": "Output only. The name of dataset to be labeled. \"projects/*/datasets/*\""
        },
        "textEntityExtractionDetails": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelTextEntityExtractionOperationMetadata",
          "description": "Details of label text entity extraction operation."
        },
        "imageOrientedBoundingBoxDetails": {
          "description": "Details of label image oriented bounding box operation.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelImageOrientedBoundingBoxOperationMetadata"
        },
        "videoClassificationDetails": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelVideoClassificationOperationMetadata",
          "description": "Details of label video classification operation."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp when labeling request was created."
        },
        "imagePolylineDetails": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelImagePolylineOperationMetadata",
          "description": "Details of label image polyline operation."
        },
        "textClassificationDetails": {
          "description": "Details of label text classification operation.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelTextClassificationOperationMetadata"
        },
        "partialFailures": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details."
        },
        "videoObjectDetectionDetails": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelVideoObjectDetectionOperationMetadata",
          "description": "Details of label video object detection operation."
        },
        "annotatedDataset": {
          "type": "string",
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\"."
        },
        "imageSegmentationDetails": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelImageSegmentationOperationMetadata",
          "description": "Details of label image segmentation operation."
        },
        "progressPercent": {
          "type": "integer",
          "description": "Output only. Progress of label operation. Range: [0, 100].",
          "format": "int32"
        },
        "imageClassificationDetails": {
          "description": "Details of label image classification operation.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelImageClassificationOperationMetadata"
        },
        "imageBoundingBoxDetails": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelImageBoundingBoxOperationMetadata",
          "description": "Details of label image bounding box operation."
        },
        "imageBoundingPolyDetails": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelImageBoundingPolyOperationMetadata",
          "description": "Details of label image bounding poly operation."
        },
        "videoObjectTrackingDetails": {
          "description": "Details of label video object tracking operation.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelVideoObjectTrackingOperationMetadata"
        },
        "videoEventDetails": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1LabelVideoEventOperationMetadata",
          "description": "Details of label video event operation."
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1ImportDataOperationMetadata": {
      "description": "Metadata of an ImportData operation.",
      "properties": {
        "dataset": {
          "description": "Output only. The name of imported dataset. \"projects/*/datasets/*\"",
          "type": "string"
        },
        "partialFailures": {
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array",
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details."
        },
        "createTime": {
          "type": "string",
          "description": "Output only. Timestamp when import dataset request was created.",
          "format": "google-datetime"
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1ImportDataOperationMetadata"
    },
    "GoogleCloudDatalabelingV1beta1AnnotatedDataset": {
      "id": "GoogleCloudDatalabelingV1beta1AnnotatedDataset",
      "properties": {
        "annotationType": {
          "type": "string",
          "description": "Output only. Type of the annotation. It is specified when starting labeling task.",
          "enum": [
            "ANNOTATION_TYPE_UNSPECIFIED",
            "IMAGE_CLASSIFICATION_ANNOTATION",
            "IMAGE_BOUNDING_BOX_ANNOTATION",
            "IMAGE_ORIENTED_BOUNDING_BOX_ANNOTATION",
            "IMAGE_BOUNDING_POLY_ANNOTATION",
            "IMAGE_POLYLINE_ANNOTATION",
            "IMAGE_SEGMENTATION_ANNOTATION",
            "VIDEO_SHOTS_CLASSIFICATION_ANNOTATION",
            "VIDEO_OBJECT_TRACKING_ANNOTATION",
            "VIDEO_OBJECT_DETECTION_ANNOTATION",
            "VIDEO_EVENT_ANNOTATION",
            "TEXT_CLASSIFICATION_ANNOTATION",
            "TEXT_ENTITY_EXTRACTION_ANNOTATION",
            "GENERAL_CLASSIFICATION_ANNOTATION"
          ],
          "enumDescriptions": [
            "",
            "Classification annotations in an image. Allowed for continuous evaluation.",
            "Bounding box annotations in an image. A form of image object detection. Allowed for continuous evaluation.",
            "Oriented bounding box. The box does not have to be parallel to horizontal line.",
            "Bounding poly annotations in an image.",
            "Polyline annotations in an image.",
            "Segmentation annotations in an image.",
            "Classification annotations in video shots.",
            "Video object tracking annotation.",
            "Video object detection annotation.",
            "Video event annotation.",
            "Classification for text. Allowed for continuous evaluation.",
            "Entity extraction for text.",
            "General classification. Allowed for continuous evaluation."
          ]
        },
        "annotationSource": {
          "enumDescriptions": [
            "",
            "Answer is provided by a human contributor."
          ],
          "description": "Output only. Source of the annotation.",
          "type": "string",
          "enum": [
            "ANNOTATION_SOURCE_UNSPECIFIED",
            "OPERATOR"
          ]
        },
        "completedExampleCount": {
          "description": "Output only. Number of examples that have annotation in the annotated dataset.",
          "format": "int64",
          "type": "string"
        },
        "exampleCount": {
          "type": "string",
          "description": "Output only. Number of examples in the annotated dataset.",
          "format": "int64"
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Time the AnnotatedDataset was created."
        },
        "description": {
          "type": "string",
          "description": "Output only. The description of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 10000 characters."
        },
        "labelStats": {
          "description": "Output only. Per label statistics.",
          "$ref": "GoogleCloudDatalabelingV1beta1LabelStats"
        },
        "displayName": {
          "description": "Output only. The display name of the AnnotatedDataset. It is specified in HumanAnnotationConfig when user starts a labeling task. Maximum of 64 characters.",
          "type": "string"
        },
        "blockingResources": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Output only. The names of any related resources that are blocking changes to the annotated dataset."
        },
        "name": {
          "type": "string",
          "description": "Output only. AnnotatedDataset resource name in format of: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}"
        },
        "metadata": {
          "description": "Output only. Additional information about AnnotatedDataset.",
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotatedDatasetMetadata"
        }
      },
      "description": "AnnotatedDataset is a set holding annotations for data in a Dataset. Each labeling task will generate an AnnotatedDataset under the Dataset that the task is requested for.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1Row": {
      "description": "A row in the confusion matrix. Each entry in this row has the same ground truth label.",
      "properties": {
        "entries": {
          "description": "A list of the confusion matrix entries. One entry for each possible predicted label.",
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1ConfusionMatrixEntry"
          }
        },
        "annotationSpec": {
          "description": "The annotation spec of the ground truth label for this row.",
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1Row",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelStats": {
      "description": "Statistics about annotation specs.",
      "properties": {
        "exampleCount": {
          "description": "Map of each annotation spec's example count. Key is the annotation spec name and value is the number of examples for that annotation spec. If the annotated dataset does not have annotation spec, the map will return a pair where the key is empty string and value is the total number of annotations.",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "type": "object"
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelStats"
    },
    "GoogleCloudDatalabelingV1beta1TextEntityExtractionAnnotation": {
      "properties": {
        "annotationSpec": {
          "description": "Label of the text entities.",
          "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec"
        },
        "sequentialSegment": {
          "description": "Position of the entity.",
          "$ref": "GoogleCloudDatalabelingV1beta1SequentialSegment"
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1TextEntityExtractionAnnotation",
      "description": "Text entity extraction annotation."
    },
    "GoogleCloudDatalabelingV1beta1EvaluationConfig": {
      "description": "Configuration details used for calculating evaluation metrics and creating an Evaluation.",
      "id": "GoogleCloudDatalabelingV1beta1EvaluationConfig",
      "type": "object",
      "properties": {
        "boundingBoxEvaluationOptions": {
          "$ref": "GoogleCloudDatalabelingV1beta1BoundingBoxEvaluationOptions",
          "description": "Only specify this field if the related model performs image object detection (`IMAGE_BOUNDING_BOX_ANNOTATION`). Describes how to evaluate bounding boxes."
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1SearchExampleComparisonsResponse": {
      "description": "Results of searching example comparisons.",
      "id": "GoogleCloudDatalabelingV1beta1SearchExampleComparisonsResponse",
      "properties": {
        "exampleComparisons": {
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1ExampleComparison"
          },
          "description": "A list of example comparisons matching the search criteria.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig": {
      "type": "object",
      "properties": {
        "instruction": {
          "description": "Required. Instruction resource name.",
          "type": "string"
        },
        "languageCode": {
          "description": "Optional. The Language of this question, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US. Only need to set this when task is language related. For example, French text classification.",
          "type": "string"
        },
        "questionDuration": {
          "description": "Optional. Maximum duration for contributors to answer a question. Maximum is 3600 seconds. Default is 3600 seconds.",
          "format": "google-duration",
          "type": "string"
        },
        "contributorEmails": {
          "description": "Optional. If you want your own labeling contributors to manage and work on this labeling request, you can set these contributors here. We will give them access to the question types in crowdcompute. Note that these emails must be registered in crowdcompute worker UI: https://crowd-compute.appspot.com/",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "replicaCount": {
          "type": "integer",
          "format": "int32",
          "description": "Optional. Replication of questions. Each question will be sent to up to this number of contributors to label. Aggregated answers will be returned. Default is set to 1. For image related labeling, valid values are 1, 3, 5."
        },
        "annotatedDatasetDisplayName": {
          "description": "Required. A human-readable name for AnnotatedDataset defined by users. Maximum of 64 characters .",
          "type": "string"
        },
        "labelGroup": {
          "type": "string",
          "description": "Optional. A human-readable label used to logically group labeling tasks. This string must match the regular expression `[a-zA-Z\\\\d_-]{0,128}`."
        },
        "annotatedDatasetDescription": {
          "type": "string",
          "description": "Optional. A human-readable description for AnnotatedDataset. The description can be up to 10000 characters long."
        },
        "userEmailAddress": {
          "type": "string",
          "description": "Email of the user who started the labeling task and should be notified by email. If empty no notification will be sent."
        }
      },
      "description": "Configuration for how human labeling task should be done.",
      "id": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig"
    },
    "GoogleCloudDatalabelingV1alpha1LabelTextEntityExtractionOperationMetadata": {
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig"
        }
      },
      "id": "GoogleCloudDatalabelingV1alpha1LabelTextEntityExtractionOperationMetadata",
      "description": "Details of a LabelTextEntityExtraction operation metadata.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1alpha1ImportDataOperationResponse": {
      "description": "Response used for ImportData longrunning operation.",
      "id": "GoogleCloudDatalabelingV1alpha1ImportDataOperationResponse",
      "properties": {
        "totalCount": {
          "description": "Output only. Total number of examples requested to import",
          "type": "integer",
          "format": "int32"
        },
        "importCount": {
          "description": "Output only. Number of examples imported successfully.",
          "format": "int32",
          "type": "integer"
        },
        "dataset": {
          "type": "string",
          "description": "Ouptut only. The name of imported dataset."
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1alpha1OutputConfig": {
      "description": "The configuration of output data.",
      "properties": {
        "gcsDestination": {
          "description": "Output to a file in Cloud Storage. Should be used for labeling output other than image segmentation.",
          "$ref": "GoogleCloudDatalabelingV1alpha1GcsDestination"
        },
        "gcsFolderDestination": {
          "$ref": "GoogleCloudDatalabelingV1alpha1GcsFolderDestination",
          "description": "Output to a folder in Cloud Storage. Should be used for image segmentation or document de-identification labeling outputs."
        }
      },
      "id": "GoogleCloudDatalabelingV1alpha1OutputConfig",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p1alpha1GcsFolderDestination": {
      "properties": {
        "outputFolderUri": {
          "description": "Required. Cloud Storage directory to export data to.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p1alpha1GcsFolderDestination",
      "description": "Export folder destination of the data."
    },
    "GoogleCloudDatalabelingV1beta1ObjectDetectionMetrics": {
      "type": "object",
      "description": "Metrics calculated for an image object detection (bounding box) model.",
      "properties": {
        "prCurve": {
          "description": "Precision-recall curve.",
          "$ref": "GoogleCloudDatalabelingV1beta1PrCurve"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1ObjectDetectionMetrics"
    },
    "GoogleCloudDatalabelingV1beta1LabelVideoRequest": {
      "id": "GoogleCloudDatalabelingV1beta1LabelVideoRequest",
      "properties": {
        "videoClassificationConfig": {
          "description": "Configuration for video classification task. One of video_classification_config, object_detection_config, object_tracking_config and event_config is required.",
          "$ref": "GoogleCloudDatalabelingV1beta1VideoClassificationConfig"
        },
        "feature": {
          "enumDescriptions": [
            "",
            "Label whole video or video segment with one or more labels.",
            "Label objects with bounding box on image frames extracted from the video.",
            "Label and track objects in video.",
            "Label the range of video for the specified events."
          ],
          "enum": [
            "FEATURE_UNSPECIFIED",
            "CLASSIFICATION",
            "OBJECT_DETECTION",
            "OBJECT_TRACKING",
            "EVENT"
          ],
          "description": "Required. The type of video labeling task.",
          "type": "string"
        },
        "objectDetectionConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1ObjectDetectionConfig",
          "description": "Configuration for video object detection task. One of video_classification_config, object_detection_config, object_tracking_config and event_config is required."
        },
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
          "description": "Required. Basic human annotation config."
        },
        "eventConfig": {
          "description": "Configuration for video event task. One of video_classification_config, object_detection_config, object_tracking_config and event_config is required.",
          "$ref": "GoogleCloudDatalabelingV1beta1EventConfig"
        },
        "objectTrackingConfig": {
          "description": "Configuration for video object tracking task. One of video_classification_config, object_detection_config, object_tracking_config and event_config is required.",
          "$ref": "GoogleCloudDatalabelingV1beta1ObjectTrackingConfig"
        }
      },
      "type": "object",
      "description": "Request message for LabelVideo."
    },
    "GoogleCloudDatalabelingV1beta1OutputConfig": {
      "properties": {
        "gcsDestination": {
          "description": "Output to a file in Cloud Storage. Should be used for labeling output other than image segmentation.",
          "$ref": "GoogleCloudDatalabelingV1beta1GcsDestination"
        },
        "gcsFolderDestination": {
          "$ref": "GoogleCloudDatalabelingV1beta1GcsFolderDestination",
          "description": "Output to a folder in Cloud Storage. Should be used for image segmentation or document de-identification labeling outputs."
        }
      },
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1OutputConfig",
      "description": "The configuration of output data."
    },
    "GoogleCloudDatalabelingV1beta1ListAnnotationSpecSetsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results."
        },
        "annotationSpecSets": {
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpecSet"
          },
          "description": "The list of annotation spec sets.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "Results of listing annotation spec set under a project.",
      "id": "GoogleCloudDatalabelingV1beta1ListAnnotationSpecSetsResponse"
    },
    "GoogleCloudDatalabelingV1beta1TextPayload": {
      "description": "Container of information about a piece of text.",
      "id": "GoogleCloudDatalabelingV1beta1TextPayload",
      "properties": {
        "textContent": {
          "type": "string",
          "description": "Text content."
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata": {
      "description": "Details of a LabelVideoObjectTracking operation metadata.",
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelVideoObjectTrackingOperationMetadata",
      "type": "object",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      }
    },
    "GoogleCloudDatalabelingV1alpha1LabelImagePolylineOperationMetadata": {
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      },
      "description": "Details of LabelImagePolyline operation metadata.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1alpha1LabelImagePolylineOperationMetadata"
    },
    "GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata": {
      "description": "Metadata of an ImportData operation.",
      "id": "GoogleCloudDatalabelingV1alpha1ImportDataOperationMetadata",
      "type": "object",
      "properties": {
        "dataset": {
          "description": "Output only. The name of imported dataset. \"projects/*/datasets/*\"",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. Timestamp when import dataset request was created."
        },
        "partialFailures": {
          "type": "array",
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      }
    },
    "GoogleCloudDatalabelingV1alpha1LabelStats": {
      "type": "object",
      "properties": {
        "exampleCount": {
          "description": "Map of each annotation spec's example count. Key is the annotation spec name and value is the number of examples for that annotation spec. If the annotated dataset does not have annotation spec, the map will return a pair where the key is empty string and value is the total number of annotations.",
          "additionalProperties": {
            "format": "int64",
            "type": "string"
          },
          "type": "object"
        }
      },
      "id": "GoogleCloudDatalabelingV1alpha1LabelStats",
      "description": "Statistics about annotation specs."
    },
    "GoogleCloudDatalabelingV1beta1LabelVideoClassificationOperationMetadata": {
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      },
      "type": "object",
      "description": "Details of a LabelVideoClassification operation metadata.",
      "id": "GoogleCloudDatalabelingV1beta1LabelVideoClassificationOperationMetadata"
    },
    "GoogleCloudDatalabelingV1p1alpha1GcsDestination": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p1alpha1GcsDestination",
      "description": "Export destination of the data.Only gcs path is allowed in output_uri.",
      "properties": {
        "outputUri": {
          "description": "Required. The output uri of destination file.",
          "type": "string"
        },
        "mimeType": {
          "type": "string",
          "description": "Required. The format of the gcs destination. Only \"text/csv\" and \"application/json\" are supported."
        }
      }
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelTextEntityExtractionOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelTextEntityExtractionOperationMetadata",
      "description": "Details of a LabelTextEntityExtraction operation metadata.",
      "type": "object",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      }
    },
    "GoogleCloudDatalabelingV1alpha1CreateInstructionMetadata": {
      "type": "object",
      "properties": {
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Timestamp when create instruction request was created."
        },
        "instruction": {
          "description": "The name of the created Instruction. projects/{project_id}/instructions/{instruction_id}",
          "type": "string"
        },
        "partialFailures": {
          "type": "array",
          "description": "Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "description": "Metadata of a CreateInstruction operation.",
      "id": "GoogleCloudDatalabelingV1alpha1CreateInstructionMetadata"
    },
    "GoogleCloudDatalabelingV1p1alpha1ImportDataOperationMetadata": {
      "properties": {
        "dataset": {
          "type": "string",
          "description": "Output only. The name of imported dataset. \"projects/*/datasets/*\""
        },
        "createTime": {
          "description": "Output only. Timestamp when import dataset request was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "partialFailures": {
          "type": "array",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details."
        }
      },
      "description": "Metadata of an ImportData operation.",
      "id": "GoogleCloudDatalabelingV1p1alpha1ImportDataOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1LabelVideoObjectTrackingOperationMetadata": {
      "description": "Details of a LabelVideoObjectTracking operation metadata.",
      "id": "GoogleCloudDatalabelingV1beta1LabelVideoObjectTrackingOperationMetadata",
      "type": "object",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      }
    },
    "GoogleCloudDatalabelingV1alpha1GcsFolderDestination": {
      "properties": {
        "outputFolderUri": {
          "description": "Required. Cloud Storage directory to export data to.",
          "type": "string"
        }
      },
      "id": "GoogleCloudDatalabelingV1alpha1GcsFolderDestination",
      "type": "object",
      "description": "Export folder destination of the data."
    },
    "GoogleCloudDatalabelingV1beta1ObjectDetectionConfig": {
      "properties": {
        "annotationSpecSet": {
          "type": "string",
          "description": "Required. Annotation spec set resource name."
        },
        "extractionFrameRate": {
          "type": "number",
          "description": "Required. Number of frames per second to be extracted from the video.",
          "format": "double"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1ObjectDetectionConfig",
      "description": "Config for video object detection human labeling task. Object detection will be conducted on the images extracted from the video, and those objects will be labeled with bounding boxes. User need to specify the number of images to be extracted per second as the extraction frame rate.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1SegmentationConfig": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1beta1SegmentationConfig",
      "properties": {
        "instructionMessage": {
          "description": "Instruction message showed on labelers UI.",
          "type": "string"
        },
        "annotationSpecSet": {
          "description": "Required. Annotation spec set resource name. format: projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}",
          "type": "string"
        }
      },
      "description": "Config for image segmentation"
    },
    "GoogleCloudDatalabelingV1beta1ListDatasetsResponse": {
      "id": "GoogleCloudDatalabelingV1beta1ListDatasetsResponse",
      "type": "object",
      "properties": {
        "datasets": {
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1Dataset"
          },
          "type": "array",
          "description": "The list of datasets to return."
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results.",
          "type": "string"
        }
      },
      "description": "Results of listing datasets within a project."
    },
    "GoogleCloudDatalabelingV1beta1ExportDataOperationResponse": {
      "id": "GoogleCloudDatalabelingV1beta1ExportDataOperationResponse",
      "type": "object",
      "properties": {
        "exportCount": {
          "type": "integer",
          "format": "int32",
          "description": "Output only. Number of examples exported successfully."
        },
        "dataset": {
          "type": "string",
          "description": "Ouptut only. The name of dataset. \"projects/*/datasets/*\""
        },
        "labelStats": {
          "$ref": "GoogleCloudDatalabelingV1beta1LabelStats",
          "description": "Output only. Statistic infos of labels in the exported dataset."
        },
        "annotatedDataset": {
          "type": "string",
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\"."
        },
        "outputConfig": {
          "$ref": "GoogleCloudDatalabelingV1beta1OutputConfig",
          "description": "Output only. output_config in the ExportData request."
        },
        "totalCount": {
          "format": "int32",
          "description": "Output only. Total number of examples requested to export",
          "type": "integer"
        }
      },
      "description": "Response used for ExportDataset longrunning operation."
    },
    "GoogleCloudDatalabelingV1beta1CreateDatasetRequest": {
      "type": "object",
      "description": "Request message for CreateDataset.",
      "id": "GoogleCloudDatalabelingV1beta1CreateDatasetRequest",
      "properties": {
        "dataset": {
          "description": "Required. The dataset to be created.",
          "$ref": "GoogleCloudDatalabelingV1beta1Dataset"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1SequentialSegment": {
      "properties": {
        "start": {
          "description": "Start position (inclusive).",
          "type": "integer",
          "format": "int32"
        },
        "end": {
          "format": "int32",
          "description": "End position (exclusive).",
          "type": "integer"
        }
      },
      "description": "Start and end position in a sequence (e.g. text segment).",
      "id": "GoogleCloudDatalabelingV1beta1SequentialSegment",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1Attempt": {
      "type": "object",
      "properties": {
        "attemptTime": {
          "type": "string",
          "format": "google-datetime"
        },
        "partialFailures": {
          "type": "array",
          "description": "Details of errors that occurred.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        }
      },
      "description": "Records a failed evaluation job run.",
      "id": "GoogleCloudDatalabelingV1beta1Attempt"
    },
    "GoogleCloudDatalabelingV1beta1ImageClassificationConfig": {
      "id": "GoogleCloudDatalabelingV1beta1ImageClassificationConfig",
      "type": "object",
      "description": "Config for image classification human labeling task.",
      "properties": {
        "answerAggregationType": {
          "type": "string",
          "enumDescriptions": [
            "",
            "Majority vote to aggregate answers.",
            "Unanimous answers will be adopted.",
            "Preserve all answers by crowd compute."
          ],
          "description": "Optional. The type of how to aggregate answers.",
          "enum": [
            "STRING_AGGREGATION_TYPE_UNSPECIFIED",
            "MAJORITY_VOTE",
            "UNANIMOUS_VOTE",
            "NO_AGGREGATION"
          ]
        },
        "annotationSpecSet": {
          "description": "Required. Annotation spec set resource name.",
          "type": "string"
        },
        "allowMultiLabel": {
          "description": "Optional. If allow_multi_label is true, contributors are able to choose multiple labels for one image.",
          "type": "boolean"
        }
      }
    },
    "GoogleCloudDatalabelingV1p2alpha1ExportDataOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1p2alpha1ExportDataOperationMetadata",
      "properties": {
        "annotatedDataset": {
          "description": "Output only. The name of annotated dataset in format \"projects/*/datasets/*/annotatedDatasets/*\".",
          "type": "string"
        },
        "dataset": {
          "type": "string",
          "description": "Output only. The name of dataset to be exported. \"projects/*/datasets/*\""
        },
        "createTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Output only. Timestamp when export dataset request was created."
        },
        "partialFailures": {
          "description": "Output only. Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.",
          "items": {
            "$ref": "GoogleRpcStatus"
          },
          "type": "array"
        }
      },
      "description": "Metadata of an ExportData operation.",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelImageBoundingBoxOperationMetadata": {
      "type": "object",
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelImageBoundingBoxOperationMetadata",
      "description": "Details of a LabelImageBoundingBox operation metadata.",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1FeedbackThread": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Name of the feedback thread. Format: 'project/{project_id}/datasets/{dataset_id}/annotatedDatasets/{annotated_dataset_id}/feedbackThreads/{feedback_thread_id}'"
        },
        "feedbackThreadMetadata": {
          "$ref": "GoogleCloudDatalabelingV1beta1FeedbackThreadMetadata",
          "description": "Metadata regarding the feedback thread."
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1FeedbackThread",
      "description": "A feedback thread of a certain labeling task on a certain annotated dataset."
    },
    "GoogleCloudDatalabelingV1p2alpha1GcsDestination": {
      "description": "Export destination of the data.Only gcs path is allowed in output_uri.",
      "id": "GoogleCloudDatalabelingV1p2alpha1GcsDestination",
      "properties": {
        "outputUri": {
          "description": "Required. The output uri of destination file.",
          "type": "string"
        },
        "mimeType": {
          "description": "Required. The format of the gcs destination. Only \"text/csv\" and \"application/json\" are supported.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1AnnotationSpecSet": {
      "id": "GoogleCloudDatalabelingV1beta1AnnotationSpecSet",
      "properties": {
        "blockingResources": {
          "type": "array",
          "description": "Output only. The names of any related resources that are blocking changes to the annotation spec set.",
          "items": {
            "type": "string"
          }
        },
        "description": {
          "type": "string",
          "description": "Optional. User-provided description of the annotation specification set. The description can be up to 10,000 characters long."
        },
        "annotationSpecs": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1AnnotationSpec"
          },
          "description": "Required. The array of AnnotationSpecs that you define when you create the AnnotationSpecSet. These are the possible labels for the labeling task."
        },
        "name": {
          "type": "string",
          "description": "Output only. The AnnotationSpecSet resource name in the following format: \"projects/{project_id}/annotationSpecSets/{annotation_spec_set_id}\""
        },
        "displayName": {
          "description": "Required. The display name for AnnotationSpecSet that you define when you create it. Maximum of 64 characters.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "An AnnotationSpecSet is a collection of label definitions. For example, in image classification tasks, you define a set of possible labels for images as an AnnotationSpecSet. An AnnotationSpecSet is immutable upon creation."
    },
    "GoogleCloudDatalabelingV1alpha1LabelVideoEventOperationMetadata": {
      "description": "Details of a LabelVideoEvent operation metadata.",
      "type": "object",
      "id": "GoogleCloudDatalabelingV1alpha1LabelVideoEventOperationMetadata",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      }
    },
    "GoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata": {
      "id": "GoogleCloudDatalabelingV1p1alpha1LabelImageSegmentationOperationMetadata",
      "type": "object",
      "description": "Details of a LabelImageSegmentation operation metadata.",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config.",
          "$ref": "GoogleCloudDatalabelingV1p1alpha1HumanAnnotationConfig"
        }
      }
    },
    "GoogleCloudDatalabelingV1beta1TextMetadata": {
      "id": "GoogleCloudDatalabelingV1beta1TextMetadata",
      "type": "object",
      "properties": {
        "languageCode": {
          "type": "string",
          "description": "The language of this text, as a [BCP-47](https://www.rfc-editor.org/rfc/bcp/bcp47.txt). Default value is en-US."
        }
      },
      "description": "Metadata for the text."
    },
    "GoogleCloudDatalabelingV1alpha1LabelImageOrientedBoundingBoxOperationMetadata": {
      "description": "Details of a LabelImageOrientedBoundingBox operation metadata.",
      "id": "GoogleCloudDatalabelingV1alpha1LabelImageOrientedBoundingBoxOperationMetadata",
      "type": "object",
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config."
        }
      }
    },
    "GoogleCloudDatalabelingV1alpha1LabelImageBoundingPolyOperationMetadata": {
      "type": "object",
      "properties": {
        "basicConfig": {
          "description": "Basic human annotation config used in labeling request.",
          "$ref": "GoogleCloudDatalabelingV1alpha1HumanAnnotationConfig"
        }
      },
      "id": "GoogleCloudDatalabelingV1alpha1LabelImageBoundingPolyOperationMetadata",
      "description": "Details of LabelImageBoundingPoly operation metadata."
    },
    "GoogleCloudDatalabelingV1beta1Example": {
      "properties": {
        "videoPayload": {
          "$ref": "GoogleCloudDatalabelingV1beta1VideoPayload",
          "description": "The video payload, a container of the video uri."
        },
        "annotations": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudDatalabelingV1beta1Annotation"
          },
          "description": "Output only. Annotations for the piece of data in Example. One piece of data can have multiple annotations."
        },
        "textPayload": {
          "description": "The text payload, a container of the text content.",
          "$ref": "GoogleCloudDatalabelingV1beta1TextPayload"
        },
        "imagePayload": {
          "$ref": "GoogleCloudDatalabelingV1beta1ImagePayload",
          "description": "The image payload, a container of the image bytes/uri."
        },
        "name": {
          "description": "Output only. Name of the example, in format of: projects/{project_id}/datasets/{dataset_id}/annotatedDatasets/ {annotated_dataset_id}/examples/{example_id}",
          "type": "string"
        }
      },
      "id": "GoogleCloudDatalabelingV1beta1Example",
      "description": "An Example is a piece of data and its annotation. For example, an image with label \"house\".",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1GcsDestination": {
      "id": "GoogleCloudDatalabelingV1beta1GcsDestination",
      "type": "object",
      "description": "Export destination of the data.Only gcs path is allowed in output_uri.",
      "properties": {
        "outputUri": {
          "type": "string",
          "description": "Required. The output uri of destination file."
        },
        "mimeType": {
          "type": "string",
          "description": "Required. The format of the gcs destination. Only \"text/csv\" and \"application/json\" are supported."
        }
      }
    },
    "GoogleCloudDatalabelingV1p2alpha1LabelVideoClassificationOperationMetadata": {
      "properties": {
        "basicConfig": {
          "$ref": "GoogleCloudDatalabelingV1p2alpha1HumanAnnotationConfig",
          "description": "Basic human annotation config used in labeling request."
        }
      },
      "description": "Details of a LabelVideoClassification operation metadata.",
      "id": "GoogleCloudDatalabelingV1p2alpha1LabelVideoClassificationOperationMetadata",
      "type": "object"
    },
    "GoogleCloudDatalabelingV1beta1CreateInstructionMetadata": {
      "type": "object",
      "description": "Metadata of a CreateInstruction operation.",
      "id": "GoogleCloudDatalabelingV1beta1CreateInstructionMetadata",
      "properties": {
        "partialFailures": {
          "type": "array",
          "description": "Partial failures encountered. E.g. single files that couldn't be read. Status details field will contain standard GCP error details.",
          "items": {
            "$ref": "GoogleRpcStatus"
          }
        },
        "createTime": {
          "type": "string",
          "description": "Timestamp when create instruction request was created.",
          "format": "google-datetime"
        },
        "instruction": {
          "description": "The name of the created Instruction. projects/{project_id}/instructions/{instruction_id}",
          "type": "string"
        }
      }
    }
  },
  "version": "v1beta1",
  "basePath": "",
  "kind": "discovery#restDescription",
  "canonicalName": "Data Labeling",
  "ownerDomain": "google.com",
  "baseUrl": "https://datalabeling.googleapis.com/",
  "batchPath": "batch",
  "rootUrl": "https://datalabeling.googleapis.com/",
  "version_module": true
}
