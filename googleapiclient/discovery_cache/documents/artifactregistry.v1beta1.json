{
  "id": "artifactregistry:v1beta1",
  "protocol": "rest",
  "servicePath": "",
  "mtlsRootUrl": "https://artifactregistry.mtls.googleapis.com/",
  "rootUrl": "https://artifactregistry.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform.read-only": {
          "description": "View your data across Google Cloud Platform services"
        },
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "revision": "20201215",
  "discoveryVersion": "v1",
  "parameters": {
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "alt": {
      "default": "json",
      "type": "string",
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query",
      "description": "V1 error format."
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "oauth_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth 2.0 token for the current user."
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    }
  },
  "documentationLink": "https://cloud.google.com/artifacts/docs/",
  "description": "Store and manage build artifacts in a scalable and integrated service built on Google infrastructure.",
  "version": "v1beta1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "schemas": {
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status",
      "type": "object",
      "properties": {
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          }
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        },
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "File": {
      "description": "Files store content that is potentially associated with Packages or Versions.",
      "id": "File",
      "properties": {
        "owner": {
          "description": "The name of the Package or Version that owns this file, if any.",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the File was last updated."
        },
        "name": {
          "description": "The name of the file, for example: \"projects/p1/locations/us-central1/repositories/repo1/files/a/b/c.txt\".",
          "type": "string"
        },
        "hashes": {
          "description": "The hashes of the file content.",
          "items": {
            "$ref": "Hash"
          },
          "type": "array"
        },
        "sizeBytes": {
          "type": "string",
          "description": "The size of the File in bytes.",
          "format": "int64"
        },
        "createTime": {
          "type": "string",
          "description": "The time when the File was created.",
          "format": "google-datetime"
        }
      },
      "type": "object"
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        }
      },
      "id": "SetIamPolicyRequest",
      "type": "object"
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "type": "array",
          "items": {
            "$ref": "Location"
          },
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The response message for Locations.ListLocations."
    },
    "Package": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The display name of the package."
        },
        "createTime": {
          "type": "string",
          "description": "The time when the package was created.",
          "format": "google-datetime"
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the package was last updated. This includes publishing a new version of the package."
        },
        "name": {
          "type": "string",
          "description": "The name of the package, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1\"."
        }
      },
      "type": "object",
      "id": "Package",
      "description": "Packages are named collections of versions."
    },
    "TestIamPermissionsResponse": {
      "id": "TestIamPermissionsResponse",
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "ListRepositoriesResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of repositories, or empty if there are no more repositories to return."
        },
        "repositories": {
          "type": "array",
          "items": {
            "$ref": "Repository"
          },
          "description": "The repositories returned."
        }
      },
      "type": "object",
      "id": "ListRepositoriesResponse",
      "description": "The response from listing repositories."
    },
    "ListVersionsResponse": {
      "type": "object",
      "id": "ListVersionsResponse",
      "description": "The response from listing versions.",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of versions, or empty if there are no more versions to return."
        },
        "versions": {
          "items": {
            "$ref": "Version"
          },
          "description": "The versions returned.",
          "type": "array"
        }
      }
    },
    "Location": {
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "description": "Service-specific metadata. For example the available capacity at the given location.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object"
        },
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "type": "string",
          "description": "The canonical id for this location. For example: `\"us-east1\"`."
        }
      }
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {}
    },
    "ListFilesResponse": {
      "properties": {
        "files": {
          "type": "array",
          "description": "The files returned.",
          "items": {
            "$ref": "File"
          }
        },
        "nextPageToken": {
          "description": "The token to retrieve the next page of files, or empty if there are no more files to return.",
          "type": "string"
        }
      },
      "description": "The response from listing files.",
      "id": "ListFilesResponse",
      "type": "object"
    },
    "ListOperationsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        },
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "ListOperationsResponse",
      "description": "The response message for Operations.ListOperations."
    },
    "Version": {
      "description": "The body of a version resource. A version resource represents a collection of components, such as files and other data. This may correspond to a version in many package management schemes.",
      "type": "object",
      "id": "Version",
      "properties": {
        "relatedTags": {
          "type": "array",
          "description": "Output only. A list of related tags. Will contain up to 100 tags that reference this version.",
          "items": {
            "$ref": "Tag"
          }
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the version was created."
        },
        "name": {
          "type": "string",
          "description": "The name of the version, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/art1\"."
        },
        "description": {
          "type": "string",
          "description": "Optional. Description of the version, as specified in its metadata."
        },
        "updateTime": {
          "description": "The time when the version was last updated.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "type": "object",
      "id": "Policy",
      "properties": {
        "version": {
          "format": "int32",
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer"
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "type": "array",
          "items": {
            "$ref": "Binding"
          }
        },
        "etag": {
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "Hash": {
      "description": "A hash of file content.",
      "id": "Hash",
      "properties": {
        "value": {
          "format": "byte",
          "type": "string",
          "description": "The hash value."
        },
        "type": {
          "type": "string",
          "description": "The algorithm used to compute the hash value.",
          "enumDescriptions": [
            "Unspecified.",
            "SHA256 hash."
          ],
          "enum": [
            "HASH_TYPE_UNSPECIFIED",
            "SHA256"
          ]
        }
      },
      "type": "object"
    },
    "ListPackagesResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of packages, or empty if there are no more packages to return."
        },
        "packages": {
          "type": "array",
          "items": {
            "$ref": "Package"
          },
          "description": "The packages returned."
        }
      },
      "description": "The response from listing packages.",
      "id": "ListPackagesResponse"
    },
    "Tag": {
      "type": "object",
      "properties": {
        "version": {
          "description": "The name of the version the tag refers to, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/sha256:5243811\"",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\"."
        }
      },
      "description": "Tags point to a version and represent an alternative name that can be used to access the version.",
      "id": "Tag"
    },
    "ListTagsResponse": {
      "id": "ListTagsResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token to retrieve the next page of tags, or empty if there are no more tags to return."
        },
        "tags": {
          "type": "array",
          "description": "The tags returned.",
          "items": {
            "$ref": "Tag"
          }
        }
      },
      "description": "The response from listing tags.",
      "type": "object"
    },
    "Expr": {
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "description": {
          "type": "string",
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI."
        },
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        }
      },
      "type": "object"
    },
    "Repository": {
      "id": "Repository",
      "type": "object",
      "properties": {
        "updateTime": {
          "type": "string",
          "description": "The time when the repository was last updated.",
          "format": "google-datetime"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The time when the repository was created."
        },
        "name": {
          "description": "The name of the repository, for example: \"projects/p1/locations/us-central1/repositories/repo1\".",
          "type": "string"
        },
        "kmsKeyName": {
          "description": "The Cloud KMS resource name of the customer managed encryption key that’s used to encrypt the contents of the Repository. Has the form: `projects/my-project/locations/my-region/keyRings/my-kr/cryptoKeys/my-key`. This value may not be changed after the Repository has been created.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels with user-defined metadata. This field may contain up to 64 entries. Label keys and values may be no longer than 63 characters. Label keys must begin with a lowercase letter and may only contain lowercase letters, numeric characters, underscores, and dashes."
        },
        "description": {
          "description": "The user-provided description of the repository.",
          "type": "string"
        },
        "format": {
          "description": "The format of packages that are stored in the repository.",
          "enumDescriptions": [
            "Unspecified package format.",
            "Docker package format."
          ],
          "enum": [
            "FORMAT_UNSPECIFIED",
            "DOCKER"
          ],
          "type": "string"
        }
      },
      "description": "A Repository for storing artifacts with a specific format."
    },
    "Binding": {
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "properties": {
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "members": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. "
        }
      },
      "id": "Binding"
    },
    "Operation": {
      "id": "Operation",
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "error": {
          "$ref": "Status",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "TestIamPermissionsRequest": {
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions)."
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "version_module": true,
  "canonicalName": "Artifact Registry",
  "ownerName": "Google",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "resources": {
            "operations": {
              "methods": {
                "list": {
                  "path": "v1beta1/{+name}/operations",
                  "id": "artifactregistry.projects.locations.operations.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "location": "path",
                      "required": true
                    },
                    "filter": {
                      "type": "string",
                      "description": "The standard list filter.",
                      "location": "query"
                    },
                    "pageSize": {
                      "description": "The standard list page size.",
                      "type": "integer",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The standard list page token.",
                      "type": "string"
                    }
                  }
                },
                "get": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "id": "artifactregistry.projects.locations.operations.get",
                  "path": "v1beta1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "GET",
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "required": true,
                      "description": "The name of the operation resource.",
                      "location": "path"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                }
              }
            },
            "repositories": {
              "methods": {
                "getIamPolicy": {
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$"
                    },
                    "options.requestedPolicyVersion": {
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "path": "v1beta1/{+resource}:getIamPolicy",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Policy"
                  },
                  "id": "artifactregistry.projects.locations.repositories.getIamPolicy",
                  "description": "Gets the IAM policy for a given resource."
                },
                "delete": {
                  "description": "Deletes a repository and all of its contents. The returned Operation will finish once the repository has been deleted. It will not have any Operation metadata and will return a google.protobuf.Empty response.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "The name of the repository to delete.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "location": "path"
                    }
                  },
                  "id": "artifactregistry.projects.locations.repositories.delete",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1beta1/{+name}",
                  "response": {
                    "$ref": "Operation"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}"
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "required": true,
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "id": "artifactregistry.projects.locations.repositories.setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "description": "Updates the IAM policy for a given resource.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:setIamPolicy"
                },
                "list": {
                  "httpMethod": "GET",
                  "path": "v1beta1/{+parent}/repositories",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists repositories.",
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of repositories to return.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "description": "The name of the parent resource whose repositories will be listed.",
                      "required": true,
                      "location": "path"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "The next_page_token value returned from a previous list request, if any.",
                      "type": "string"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "id": "artifactregistry.projects.locations.repositories.list",
                  "response": {
                    "$ref": "ListRepositoriesResponse"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories"
                },
                "create": {
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/{+parent}/repositories",
                  "request": {
                    "$ref": "Repository"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "The name of the parent resource where the repository will be created.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "repositoryId": {
                      "description": "The repository id to use for this repository.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Creates a repository. The returned Operation will finish once the repository has been created. Its response will be the created Repository.",
                  "httpMethod": "POST",
                  "id": "artifactregistry.projects.locations.repositories.create"
                },
                "patch": {
                  "httpMethod": "PATCH",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}",
                  "id": "artifactregistry.projects.locations.repositories.patch",
                  "response": {
                    "$ref": "Repository"
                  },
                  "parameters": {
                    "name": {
                      "description": "The name of the repository, for example: \"projects/p1/locations/us-central1/repositories/repo1\".",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$"
                    },
                    "updateMask": {
                      "type": "string",
                      "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask",
                      "format": "google-fieldmask",
                      "location": "query"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Updates a repository.",
                  "request": {
                    "$ref": "Repository"
                  }
                },
                "get": {
                  "description": "Gets a repository.",
                  "parameters": {
                    "name": {
                      "description": "The name of the repository to retrieve.",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "location": "path"
                    }
                  },
                  "path": "v1beta1/{+name}",
                  "id": "artifactregistry.projects.locations.repositories.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Repository"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}"
                },
                "testIamPermissions": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform",
                    "https://www.googleapis.com/auth/cloud-platform.read-only"
                  ],
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "parameters": {
                    "resource": {
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                      "type": "string"
                    }
                  },
                  "httpMethod": "POST",
                  "id": "artifactregistry.projects.locations.repositories.testIamPermissions",
                  "description": "Tests if the caller has a list of permissions on a resource."
                }
              },
              "resources": {
                "files": {
                  "methods": {
                    "get": {
                      "id": "artifactregistry.projects.locations.repositories.files.get",
                      "parameters": {
                        "name": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/files/.*$",
                          "location": "path",
                          "description": "The name of the file to retrieve.",
                          "type": "string",
                          "required": true
                        }
                      },
                      "description": "Gets a file.",
                      "path": "v1beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files/{filesId}",
                      "response": {
                        "$ref": "File"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "httpMethod": "GET"
                    },
                    "list": {
                      "response": {
                        "$ref": "ListFilesResponse"
                      },
                      "parameters": {
                        "pageToken": {
                          "description": "The next_page_token value returned from a previous list request, if any.",
                          "location": "query",
                          "type": "string"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "The maximum number of files to return."
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "description": "The name of the parent resource whose files will be listed.",
                          "location": "path"
                        },
                        "filter": {
                          "location": "query",
                          "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: * `name` * `owner` An example of using a filter: * `name=\"projects/p1/locations/us-central1/repositories/repo1/files/a/b/*\"` --\u003e Files with an ID starting with \"a/b/\". * `owner=\"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0\"` --\u003e Files owned by the version `1.0` in package `pkg1`.",
                          "type": "string"
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/files",
                      "id": "artifactregistry.projects.locations.repositories.files.list",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "description": "Lists files.",
                      "path": "v1beta1/{+parent}/files"
                    }
                  }
                },
                "packages": {
                  "methods": {
                    "list": {
                      "response": {
                        "$ref": "ListPackagesResponse"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Lists packages.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages",
                      "httpMethod": "GET",
                      "parameters": {
                        "pageToken": {
                          "type": "string",
                          "description": "The next_page_token value returned from a previous list request, if any.",
                          "location": "query"
                        },
                        "pageSize": {
                          "type": "integer",
                          "location": "query",
                          "format": "int32",
                          "description": "The maximum number of packages to return."
                        },
                        "parent": {
                          "location": "path",
                          "description": "The name of the parent resource whose packages will be listed.",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+$",
                          "type": "string",
                          "required": true
                        }
                      },
                      "id": "artifactregistry.projects.locations.repositories.packages.list",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "path": "v1beta1/{+parent}/packages"
                    },
                    "delete": {
                      "httpMethod": "DELETE",
                      "parameters": {
                        "name": {
                          "location": "path",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                          "description": "The name of the package to delete.",
                          "required": true
                        }
                      },
                      "path": "v1beta1/{+name}",
                      "description": "Deletes a package and all of its versions and tags. The returned operation will complete once the package has been deleted.",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}",
                      "id": "artifactregistry.projects.locations.repositories.packages.delete"
                    },
                    "get": {
                      "description": "Gets a package.",
                      "parameterOrder": [
                        "name"
                      ],
                      "parameters": {
                        "name": {
                          "required": true,
                          "description": "The name of the package to retrieve.",
                          "type": "string",
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform",
                        "https://www.googleapis.com/auth/cloud-platform.read-only"
                      ],
                      "response": {
                        "$ref": "Package"
                      },
                      "path": "v1beta1/{+name}",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}",
                      "id": "artifactregistry.projects.locations.repositories.packages.get",
                      "httpMethod": "GET"
                    }
                  },
                  "resources": {
                    "versions": {
                      "methods": {
                        "delete": {
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions/{versionsId}",
                          "response": {
                            "$ref": "Operation"
                          },
                          "httpMethod": "DELETE",
                          "path": "v1beta1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Deletes a version and all of its content. The returned operation will complete once the version has been deleted.",
                          "parameterOrder": [
                            "name"
                          ],
                          "parameters": {
                            "name": {
                              "type": "string",
                              "location": "path",
                              "description": "The name of the version to delete.",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/versions/[^/]+$",
                              "required": true
                            },
                            "force": {
                              "location": "query",
                              "type": "boolean",
                              "description": "By default, a version that is tagged may not be deleted. If force=true, the version and any tags pointing to the version are deleted."
                            }
                          },
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.delete"
                        },
                        "get": {
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.get",
                          "parameters": {
                            "name": {
                              "required": true,
                              "description": "The name of the version to retrieve.",
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/versions/[^/]+$"
                            },
                            "view": {
                              "enumDescriptions": [
                                "The default / unset value. The API will default to the BASIC view.",
                                "Includes basic information about the version, but not any related tags.",
                                "Include everything."
                              ],
                              "type": "string",
                              "location": "query",
                              "description": "The view that should be returned in the response.",
                              "enum": [
                                "VERSION_VIEW_UNSPECIFIED",
                                "BASIC",
                                "FULL"
                              ]
                            }
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions/{versionsId}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "path": "v1beta1/{+name}",
                          "httpMethod": "GET",
                          "response": {
                            "$ref": "Version"
                          },
                          "description": "Gets a version"
                        },
                        "list": {
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "parameters": {
                            "parent": {
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                              "description": "The name of the parent resource whose versions will be listed.",
                              "type": "string",
                              "required": true,
                              "location": "path"
                            },
                            "pageSize": {
                              "description": "The maximum number of versions to return.",
                              "type": "integer",
                              "format": "int32",
                              "location": "query"
                            },
                            "view": {
                              "type": "string",
                              "location": "query",
                              "enumDescriptions": [
                                "The default / unset value. The API will default to the BASIC view.",
                                "Includes basic information about the version, but not any related tags.",
                                "Include everything."
                              ],
                              "description": "The view that should be returned in the response.",
                              "enum": [
                                "VERSION_VIEW_UNSPECIFIED",
                                "BASIC",
                                "FULL"
                              ]
                            },
                            "orderBy": {
                              "location": "query",
                              "type": "string",
                              "description": "Optional. Sorting field and order"
                            },
                            "pageToken": {
                              "type": "string",
                              "description": "The next_page_token value returned from a previous list request, if any.",
                              "location": "query"
                            }
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "httpMethod": "GET",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/versions",
                          "id": "artifactregistry.projects.locations.repositories.packages.versions.list",
                          "path": "v1beta1/{+parent}/versions",
                          "description": "Lists versions.",
                          "response": {
                            "$ref": "ListVersionsResponse"
                          }
                        }
                      }
                    },
                    "tags": {
                      "methods": {
                        "create": {
                          "request": {
                            "$ref": "Tag"
                          },
                          "parameterOrder": [
                            "parent"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "parameters": {
                            "parent": {
                              "type": "string",
                              "description": "The name of the parent resource where the tag will be created.",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                              "location": "path"
                            },
                            "tagId": {
                              "description": "The tag id to use for this repository.",
                              "type": "string",
                              "location": "query"
                            }
                          },
                          "httpMethod": "POST",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags",
                          "path": "v1beta1/{+parent}/tags",
                          "response": {
                            "$ref": "Tag"
                          },
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.create",
                          "description": "Creates a tag."
                        },
                        "list": {
                          "parameterOrder": [
                            "parent"
                          ],
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.list",
                          "description": "Lists tags.",
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "path": "v1beta1/{+parent}/tags",
                          "response": {
                            "$ref": "ListTagsResponse"
                          },
                          "parameters": {
                            "pageToken": {
                              "type": "string",
                              "location": "query",
                              "description": "The next_page_token value returned from a previous list request, if any."
                            },
                            "parent": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+$",
                              "type": "string",
                              "description": "The name of the parent resource whose tags will be listed.",
                              "location": "path"
                            },
                            "filter": {
                              "type": "string",
                              "location": "query",
                              "description": "An expression for filtering the results of the request. Filter rules are case insensitive. The fields eligible for filtering are: * `version` An example of using a filter: * `version=\"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/versions/1.0\"` --\u003e Tags that are applied to the version `1.0` in package `pkg1`."
                            },
                            "pageSize": {
                              "format": "int32",
                              "type": "integer",
                              "location": "query",
                              "description": "The maximum number of tags to return."
                            }
                          },
                          "httpMethod": "GET"
                        },
                        "patch": {
                          "httpMethod": "PATCH",
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.patch",
                          "description": "Updates a tag.",
                          "request": {
                            "$ref": "Tag"
                          },
                          "response": {
                            "$ref": "Tag"
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}",
                          "path": "v1beta1/{+name}",
                          "parameters": {
                            "name": {
                              "type": "string",
                              "description": "The name of the tag, for example: \"projects/p1/locations/us-central1/repositories/repo1/packages/pkg1/tags/tag1\".",
                              "location": "path",
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$"
                            },
                            "updateMask": {
                              "format": "google-fieldmask",
                              "type": "string",
                              "location": "query",
                              "description": "The update mask applies to the resource. For the `FieldMask` definition, see https://developers.google.com/protocol-buffers/docs/reference/google.protobuf#fieldmask"
                            }
                          }
                        },
                        "delete": {
                          "parameters": {
                            "name": {
                              "required": true,
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$",
                              "description": "The name of the tag to delete.",
                              "type": "string",
                              "location": "path"
                            }
                          },
                          "parameterOrder": [
                            "name"
                          ],
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.delete",
                          "httpMethod": "DELETE",
                          "path": "v1beta1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform"
                          ],
                          "description": "Deletes a tag.",
                          "response": {
                            "$ref": "Empty"
                          },
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}"
                        },
                        "get": {
                          "parameters": {
                            "name": {
                              "description": "The name of the tag to retrieve.",
                              "type": "string",
                              "location": "path",
                              "pattern": "^projects/[^/]+/locations/[^/]+/repositories/[^/]+/packages/[^/]+/tags/[^/]+$",
                              "required": true
                            }
                          },
                          "description": "Gets a tag.",
                          "response": {
                            "$ref": "Tag"
                          },
                          "id": "artifactregistry.projects.locations.repositories.packages.tags.get",
                          "httpMethod": "GET",
                          "parameterOrder": [
                            "name"
                          ],
                          "path": "v1beta1/{+name}",
                          "scopes": [
                            "https://www.googleapis.com/auth/cloud-platform",
                            "https://www.googleapis.com/auth/cloud-platform.read-only"
                          ],
                          "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/repositories/{repositoriesId}/packages/{packagesId}/tags/{tagsId}"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "path": "v1beta1/{+name}/locations",
              "id": "artifactregistry.projects.locations.list",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageSize": {
                  "description": "The standard list page size.",
                  "location": "query",
                  "format": "int32",
                  "type": "integer"
                },
                "filter": {
                  "type": "string",
                  "description": "The standard list filter.",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "description": "The standard list page token.",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "description": "Lists information about the supported locations for this service.",
              "httpMethod": "GET"
            },
            "get": {
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^projects/[^/]+/locations/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "Resource name for the location."
                }
              },
              "path": "v1beta1/{+name}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "artifactregistry.projects.locations.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform",
                "https://www.googleapis.com/auth/cloud-platform.read-only"
              ],
              "description": "Gets information about a location.",
              "response": {
                "$ref": "Location"
              }
            }
          }
        }
      }
    }
  },
  "batchPath": "batch",
  "name": "artifactregistry",
  "baseUrl": "https://artifactregistry.googleapis.com/",
  "basePath": "",
  "ownerDomain": "google.com",
  "fullyEncodeReservedExpansion": true,
  "title": "Artifact Registry API"
}
