{
  "fullyEncodeReservedExpansion": true,
  "description": "Deploy and manage user provided container images that scale automatically based on HTTP traffic.",
  "protocol": "rest",
  "version_module": true,
  "schemas": {
    "KeyToPath": {
      "id": "KeyToPath",
      "properties": {
        "path": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.",
          "type": "string"
        },
        "mode": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Mode bits to use on this file, must be a value between 0000 and 0777. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        },
        "key": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The key to project.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Maps a string key to a path within a volume."
    },
    "AuditConfig": {
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging.",
      "type": "object",
      "id": "AuditConfig"
    },
    "TrafficTarget": {
      "properties": {
        "revisionName": {
          "description": "RevisionName of a specific revision to which to send this portion of traffic. This is mutually exclusive with ConfigurationName. Providing RevisionName in spec is not currently supported by Cloud Run.",
          "type": "string"
        },
        "percent": {
          "type": "integer",
          "format": "int32",
          "description": "Percent specifies percent of the traffic to this Revision or Configuration. This defaults to zero if unspecified. Cloud Run currently requires 100 percent for a single ConfigurationName TrafficTarget entry."
        },
        "url": {
          "type": "string",
          "description": "Output only. URL displays the URL for accessing tagged traffic targets. URL is displayed in status, and is disallowed on spec. URL must contain a scheme (e.g. http://) and a hostname, but may not contain anything else (e.g. basic auth, url path, etc. Not currently supported in Cloud Run."
        },
        "latestRevision": {
          "description": "LatestRevision may be optionally provided to indicate that the latest ready Revision of the Configuration should be used for this traffic target. When provided LatestRevision must be true if RevisionName is empty; it must be false when RevisionName is non-empty. +optional",
          "type": "boolean"
        },
        "configurationName": {
          "description": "ConfigurationName of a configuration to whose latest revision we will send this portion of traffic. When the \"status.latestReadyRevisionName\" of the referenced configuration changes, we will automatically migrate traffic from the prior \"latest ready\" revision to the new one. This field is never set in Route's status, only its spec. This is mutually exclusive with RevisionName. Cloud Run currently supports a single ConfigurationName.",
          "type": "string"
        },
        "tag": {
          "description": "Tag is optionally used to expose a dedicated url for referencing this target exclusively. +optional",
          "type": "string"
        }
      },
      "id": "TrafficTarget",
      "description": "TrafficTarget holds a single entry of the routing table for a Route.",
      "type": "object"
    },
    "VolumeMount": {
      "id": "VolumeMount",
      "type": "object",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported VolumeMount describes a mounting of a Volume within a container.",
      "properties": {
        "name": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported This must match the Name of a Volume.",
          "type": "string"
        },
        "subPath": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).",
          "type": "string"
        },
        "mountPath": {
          "type": "string",
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Path within the container at which the volume should be mounted. Must not contain ':'."
        },
        "readOnly": {
          "type": "boolean",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Only true is accepted. Defaults to true."
        }
      }
    },
    "ListAuthorizedDomainsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Continuation token for fetching the next page of results."
        },
        "domains": {
          "items": {
            "$ref": "AuthorizedDomain"
          },
          "type": "array",
          "description": "The authorized domains belonging to the user."
        }
      },
      "description": "A list of Authorized Domains.",
      "id": "ListAuthorizedDomainsResponse"
    },
    "ListServicesResponse": {
      "type": "object",
      "description": "A list of Service resources.",
      "properties": {
        "apiVersion": {
          "description": "The API version for this call such as \"serving.knative.dev/v1\".",
          "type": "string"
        },
        "items": {
          "description": "List of Services.",
          "items": {
            "$ref": "Service"
          },
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Locations that could not be reached."
        },
        "kind": {
          "type": "string",
          "description": "The kind of this resource, in this case \"ServiceList\"."
        },
        "metadata": {
          "description": "Metadata associated with this Service list.",
          "$ref": "ListMeta"
        }
      },
      "id": "ListServicesResponse"
    },
    "ConfigurationSpec": {
      "type": "object",
      "description": "ConfigurationSpec holds the desired state of the Configuration (from the client).",
      "id": "ConfigurationSpec",
      "properties": {
        "template": {
          "$ref": "RevisionTemplate",
          "description": "Template holds the latest specification for the Revision to be stamped out."
        }
      }
    },
    "AuditLogConfig": {
      "id": "AuditLogConfig",
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "properties": {
        "logType": {
          "type": "string",
          "description": "The log type that this config enables.",
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ]
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      },
      "type": "object"
    },
    "Expr": {
      "type": "object",
      "properties": {
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        },
        "expression": {
          "type": "string",
          "description": "Textual representation of an expression in Common Expression Language syntax."
        },
        "title": {
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression.",
          "type": "string"
        }
      },
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information."
    },
    "GoogleCloudRunV1Condition": {
      "type": "object",
      "description": "Condition defines a generic condition for a Resource",
      "properties": {
        "type": {
          "type": "string",
          "description": "type is used to communicate the status of the reconciliation process. See also: https://github.com/knative/serving/blob/master/docs/spec/errors.md#error-conditions-and-reporting Types common to all resources include: * \"Ready\": True when the Resource is ready."
        },
        "status": {
          "type": "string",
          "description": "Status of the condition, one of True, False, Unknown."
        },
        "lastTransitionTime": {
          "format": "google-datetime",
          "description": "Optional. Last time the condition transitioned from one status to another.",
          "type": "string"
        },
        "message": {
          "description": "Optional. Human readable message indicating details about the current status.",
          "type": "string"
        },
        "reason": {
          "type": "string",
          "description": "Optional. One-word CamelCase reason for the condition's last transition."
        },
        "severity": {
          "description": "Optional. How to interpret failures of this condition, one of Error, Warning, Info",
          "type": "string"
        }
      },
      "id": "GoogleCloudRunV1Condition"
    },
    "StatusCause": {
      "id": "StatusCause",
      "description": "StatusCause provides more information about an api.Status failure, including cases when multiple errors are encountered.",
      "properties": {
        "reason": {
          "description": "A machine-readable description of the cause of the error. If this value is empty there is no information available. +optional",
          "type": "string"
        },
        "field": {
          "type": "string",
          "description": "The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed. Fields may appear more than once in an array of causes due to fields having multiple errors. Optional. Examples: \"name\" - the field \"name\" on the current resource \"items[0].name\" - the field \"name\" on the first array entry in \"items\" +optional"
        },
        "message": {
          "description": "A human-readable description of the cause of the error. This field may be presented as-is to a reader. +optional",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DomainMappingSpec": {
      "type": "object",
      "description": "The desired state of the Domain Mapping.",
      "properties": {
        "forceOverride": {
          "description": "If set, the mapping will override any mapping set before this spec was set. It is recommended that the user leaves this empty to receive an error warning about a potential conflict and only set it once the respective UI has given such a warning.",
          "type": "boolean"
        },
        "certificateMode": {
          "enumDescriptions": [
            "",
            "Do not provision an HTTPS certificate.",
            "Automatically provisions an HTTPS certificate via GoogleCA or LetsEncrypt."
          ],
          "enum": [
            "CERTIFICATE_MODE_UNSPECIFIED",
            "NONE",
            "AUTOMATIC"
          ],
          "type": "string",
          "description": "The mode of the certificate."
        },
        "routeName": {
          "description": "The name of the Knative Route that this DomainMapping applies to. The route must exist.",
          "type": "string"
        }
      },
      "id": "DomainMappingSpec"
    },
    "RouteSpec": {
      "type": "object",
      "properties": {
        "traffic": {
          "items": {
            "$ref": "TrafficTarget"
          },
          "description": "Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations. Cloud Run currently supports a single configurationName.",
          "type": "array"
        }
      },
      "description": "RouteSpec holds the desired state of the Route (from the client).",
      "id": "RouteSpec"
    },
    "ListRevisionsResponse": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "The kind of this resource, in this case \"RevisionList\"."
        },
        "items": {
          "description": "List of Revisions.",
          "type": "array",
          "items": {
            "$ref": "Revision"
          }
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this revision list."
        },
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "apiVersion": {
          "description": "The API version for this call such as \"serving.knative.dev/v1\".",
          "type": "string"
        }
      },
      "description": "ListRevisionsResponse is a list of Revision resources.",
      "id": "ListRevisionsResponse",
      "type": "object"
    },
    "ObjectMeta": {
      "type": "object",
      "properties": {
        "creationTimestamp": {
          "description": "(Optional) CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC. Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata",
          "format": "google-datetime",
          "type": "string"
        },
        "selfLink": {
          "type": "string",
          "description": "(Optional) SelfLink is a URL representing this object. Populated by the system. Read-only. string selfLink = 4;"
        },
        "deletionGracePeriodSeconds": {
          "format": "int32",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds allowed for this object to gracefully terminate before it will be removed from the system. Only set when deletionTimestamp is also set. May only be shortened. Read-only.",
          "type": "integer"
        },
        "namespace": {
          "type": "string",
          "description": "Namespace defines the space within each name must be unique, within a Cloud Run region. In Cloud Run the namespace must be equal to either the project ID or project number."
        },
        "labels": {
          "description": "(Optional) Map of string keys and values that can be used to organize and categorize (scope and select) objects. May match selectors of replication controllers and routes. More info: http://kubernetes.io/docs/user-guide/labels",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "finalizers": {
          "items": {
            "type": "string"
          },
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Must be empty before the object is deleted from the registry. Each entry is an identifier for the responsible component that will remove the entry from the list. If the deletionTimestamp of the object is non-nil, entries in this list can only be removed. +patchStrategy=merge",
          "type": "array"
        },
        "uid": {
          "description": "(Optional) UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations. Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids",
          "type": "string"
        },
        "resourceVersion": {
          "type": "string",
          "description": "(Optional) An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources. Populated by the system. Read-only. Value must be treated as opaque by clients. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency"
        },
        "ownerReferences": {
          "items": {
            "$ref": "OwnerReference"
          },
          "type": "array",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of objects that own this object. If ALL objects in the list have been deleted, this object will be garbage collected."
        },
        "clusterName": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the cluster which the object belongs to. This is used to distinguish resources with same name and namespace in different clusters. This field is not set anywhere right now and apiserver is going to ignore it if set in create or update request.",
          "type": "string"
        },
        "generateName": {
          "type": "string",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server. If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header). Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency string generateName = 2;"
        },
        "generation": {
          "description": "(Optional) A sequence number representing a specific generation of the desired state. Populated by the system. Read-only.",
          "format": "int32",
          "type": "integer"
        },
        "deletionTimestamp": {
          "type": "string",
          "format": "google-datetime",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested. Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata"
        },
        "name": {
          "description": "Name must be unique within a namespace, within a Cloud Run region. Is required when creating resources, although some resources may allow a client to request the generation of an appropriate name automatically. Name is primarily intended for creation idempotence and configuration definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names +optional",
          "type": "string"
        },
        "annotations": {
          "description": "(Optional) Annotations is an unstructured key value map stored with a resource that may be set by external tools to store and retrieve arbitrary metadata. They are not queryable and should be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "description": "k8s.io.apimachinery.pkg.apis.meta.v1.ObjectMeta is metadata that all persisted resources must have, which includes all objects users must create.",
      "id": "ObjectMeta"
    },
    "HTTPHeader": {
      "properties": {
        "value": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The header field value",
          "type": "string"
        },
        "name": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The header field name",
          "type": "string"
        }
      },
      "id": "HTTPHeader",
      "type": "object",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported HTTPHeader describes a custom header to be used in HTTP probes"
    },
    "ListConfigurationsResponse": {
      "properties": {
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Locations that could not be reached."
        },
        "apiVersion": {
          "description": "The API version for this call such as \"serving.knative.dev/v1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"ConfigurationList\".",
          "type": "string"
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this Configuration list."
        },
        "items": {
          "description": "List of Configurations.",
          "items": {
            "$ref": "Configuration"
          },
          "type": "array"
        }
      },
      "description": "ListConfigurationsResponse is a list of Configuration resources.",
      "id": "ListConfigurationsResponse",
      "type": "object"
    },
    "Probe": {
      "id": "Probe",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.",
      "properties": {
        "periodSeconds": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.",
          "type": "integer",
          "format": "int32"
        },
        "timeoutSeconds": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "format": "int32",
          "type": "integer"
        },
        "exec": {
          "$ref": "ExecAction",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported One and only one of the following should be specified. Exec specifies the action to take. A field inlined from the Handler message."
        },
        "failureThreshold": {
          "type": "integer",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.",
          "format": "int32"
        },
        "successThreshold": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness. Minimum value is 1.",
          "format": "int32",
          "type": "integer"
        },
        "httpGet": {
          "$ref": "HTTPGetAction",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported HTTPGet specifies the http request to perform. A field inlined from the Handler message."
        },
        "initialDelaySeconds": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "format": "int32",
          "type": "integer"
        },
        "tcpSocket": {
          "$ref": "TCPSocketAction",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported TCPSocket specifies an action involving a TCP port. TCP hooks not yet supported A field inlined from the Handler message."
        }
      },
      "type": "object"
    },
    "DomainMapping": {
      "description": "Resource to hold the state and status of a user's domain mapping. NOTE: This resource is currently in Beta.",
      "id": "DomainMapping",
      "properties": {
        "spec": {
          "$ref": "DomainMappingSpec",
          "description": "The spec for this DomainMapping."
        },
        "status": {
          "$ref": "DomainMappingStatus",
          "description": "The current status of the DomainMapping."
        },
        "apiVersion": {
          "description": "The API version for this call such as \"domains.cloudrun.com/v1\".",
          "type": "string"
        },
        "kind": {
          "description": "The kind of resource, in this case \"DomainMapping\".",
          "type": "string"
        },
        "metadata": {
          "description": "Metadata associated with this BuildTemplate.",
          "$ref": "ObjectMeta"
        }
      },
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object",
      "id": "TestIamPermissionsRequest",
      "properties": {
        "permissions": {
          "type": "array",
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "TestIamPermissionsResponse": {
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array"
        }
      },
      "description": "Response message for `TestIamPermissions` method.",
      "id": "TestIamPermissionsResponse",
      "type": "object"
    },
    "LocalObjectReference": {
      "id": "LocalObjectReference",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported LocalObjectReference contains enough information to let you locate the referenced object inside the same namespace.",
      "properties": {
        "name": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Revision": {
      "type": "object",
      "id": "Revision",
      "properties": {
        "metadata": {
          "description": "Metadata associated with this Revision, including name, namespace, labels, and annotations.",
          "$ref": "ObjectMeta"
        },
        "apiVersion": {
          "description": "The API version for this call such as \"serving.knative.dev/v1\".",
          "type": "string"
        },
        "status": {
          "description": "Status communicates the observed state of the Revision (from the controller).",
          "$ref": "RevisionStatus"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"Revision\".",
          "type": "string"
        },
        "spec": {
          "description": "Spec holds the desired state of the Revision (from the client).",
          "$ref": "RevisionSpec"
        }
      },
      "description": "Revision is an immutable snapshot of code and configuration. A revision references a container image. Revisions are created by updates to a Configuration. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#revision"
    },
    "Container": {
      "type": "object",
      "properties": {
        "volumeMounts": {
          "type": "array",
          "items": {
            "$ref": "VolumeMount"
          },
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Pod volumes to mount into the container's filesystem."
        },
        "ports": {
          "description": "(Optional) List of ports to expose from the container. Only a single port can be specified. The specified ports must be listening on all interfaces (0.0.0.0) within the container to be accessible. If omitted, a port number will be chosen and passed to the container through the PORT environment variable for the container to listen on.",
          "type": "array",
          "items": {
            "$ref": "ContainerPort"
          }
        },
        "env": {
          "items": {
            "$ref": "EnvVar"
          },
          "type": "array",
          "description": "(Optional) Cloud Run fully managed: supported Cloud Run for Anthos: supported List of environment variables to set in the container."
        },
        "image": {
          "description": "Cloud Run fully managed: only supports containers from Google Container Registry Cloud Run for Anthos: supported URL of the Container image. More info: https://kubernetes.io/docs/concepts/containers/images",
          "type": "string"
        },
        "livenessProbe": {
          "$ref": "Probe",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Periodic probe of container liveness. Container will be restarted if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
        },
        "securityContext": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Security options the pod should run with. More info: https://kubernetes.io/docs/concepts/policy/security-context/ More info: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/",
          "$ref": "SecurityContext"
        },
        "args": {
          "description": "(Optional) Cloud Run fully managed: supported Cloud Run for Anthos: supported Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "terminationMessagePolicy": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.",
          "type": "string"
        },
        "readinessProbe": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Periodic probe of container service readiness. Container will be removed from service endpoints if the probe fails. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes",
          "$ref": "Probe"
        },
        "resources": {
          "$ref": "ResourceRequirements",
          "description": "(Optional) Cloud Run fully managed: supported Cloud Run for Anthos: supported Compute Resources required by this container. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#resources"
        },
        "terminationMessagePath": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log.",
          "type": "string"
        },
        "imagePullPolicy": {
          "type": "string",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
        },
        "envFrom": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.",
          "items": {
            "$ref": "EnvFromSource"
          },
          "type": "array"
        },
        "name": {
          "type": "string",
          "description": "(Optional) Name of the container specified as a DNS_LABEL."
        },
        "command": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "workingDir": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image.",
          "type": "string"
        }
      },
      "description": "A single application container. This specifies both the container to run, the command to run in the container and the arguments to supply to it. Note that additional arguments may be supplied by the system to the container at runtime.",
      "id": "Container"
    },
    "ResourceRecord": {
      "id": "ResourceRecord",
      "description": "A DNS resource record.",
      "properties": {
        "name": {
          "description": "Relative name of the object affected by this record. Only applicable for `CNAME` records. Example: 'www'.",
          "type": "string"
        },
        "type": {
          "enumDescriptions": [
            "An unknown resource record.",
            "An A resource record. Data is an IPv4 address.",
            "An AAAA resource record. Data is an IPv6 address.",
            "A CNAME resource record. Data is a domain name to be aliased."
          ],
          "enum": [
            "RECORD_TYPE_UNSPECIFIED",
            "A",
            "AAAA",
            "CNAME"
          ],
          "description": "Resource record type. Example: `AAAA`.",
          "type": "string"
        },
        "rrdata": {
          "type": "string",
          "description": "Data for this record. Values vary by record type, as defined in RFC 1035 (section 5) and RFC 1034 (section 3.6.1)."
        }
      },
      "type": "object"
    },
    "RevisionStatus": {
      "properties": {
        "logUrl": {
          "type": "string",
          "description": "Specifies the generated logging url for this particular revision based on the revision url template specified in the controller's config. +optional"
        },
        "conditions": {
          "items": {
            "$ref": "GoogleCloudRunV1Condition"
          },
          "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world. As a Revision is being prepared, it will incrementally update conditions. Revision-specific conditions include: * \"ResourcesAvailable\": True when underlying resources have been provisioned. * \"ContainerHealthy\": True when the Revision readiness check completes. * \"Active\": True when the Revision may receive traffic.",
          "type": "array"
        },
        "imageDigest": {
          "description": "ImageDigest holds the resolved digest for the image specified within .Spec.Container.Image. The digest is resolved during the creation of Revision. This field holds the digest value regardless of whether a tag or digest was originally specified in the Container object.",
          "type": "string"
        },
        "serviceName": {
          "description": "Not currently used by Cloud Run.",
          "type": "string"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Revision that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation, and the Ready condition's status is True or False.",
          "format": "int32"
        }
      },
      "id": "RevisionStatus",
      "type": "object",
      "description": "RevisionStatus communicates the observed state of the Revision (from the controller)."
    },
    "EnvVarSource": {
      "id": "EnvVarSource",
      "properties": {
        "configMapKeyRef": {
          "$ref": "ConfigMapKeySelector",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Selects a key of a ConfigMap."
        },
        "secretKeyRef": {
          "$ref": "SecretKeySelector",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Selects a key of a secret in the pod's namespace"
        }
      },
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported EnvVarSource represents a source for the value of an EnvVar.",
      "type": "object"
    },
    "Binding": {
      "properties": {
        "role": {
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`.",
          "type": "string"
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "Associates `members` with a `role`.",
      "type": "object",
      "id": "Binding"
    },
    "Addressable": {
      "id": "Addressable",
      "type": "object",
      "description": "Information for connecting over HTTP(s).",
      "properties": {
        "url": {
          "type": "string"
        }
      }
    },
    "Policy": {
      "id": "Policy",
      "type": "object",
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "properties": {
        "bindings": {
          "type": "array",
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "items": {
            "$ref": "Binding"
          }
        },
        "auditConfigs": {
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          },
          "type": "array"
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "format": "int32",
          "type": "integer"
        },
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost."
        }
      }
    },
    "ListRoutesResponse": {
      "id": "ListRoutesResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"serving.knative.dev/v1\"."
        },
        "kind": {
          "description": "The kind of this resource, in this case always \"RouteList\".",
          "type": "string"
        },
        "items": {
          "items": {
            "$ref": "Route"
          },
          "type": "array",
          "description": "List of Routes."
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Metadata associated with this Route list."
        }
      },
      "description": "ListRoutesResponse is a list of Route resources."
    },
    "SetIamPolicyRequest": {
      "description": "Request message for `SetIamPolicy` method.",
      "id": "SetIamPolicyRequest",
      "properties": {
        "policy": {
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them.",
          "$ref": "Policy"
        },
        "updateMask": {
          "format": "google-fieldmask",
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`"
        }
      },
      "type": "object"
    },
    "OwnerReference": {
      "description": "OwnerReference contains enough information to let you identify an owning object. Currently, an owning object must be in the same namespace, so there is no namespace field.",
      "type": "object",
      "id": "OwnerReference",
      "properties": {
        "kind": {
          "description": "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds",
          "type": "string"
        },
        "blockOwnerDeletion": {
          "description": "If true, AND if the owner has the \"foregroundDeletion\" finalizer, then the owner cannot be deleted from the key-value store until this reference is removed. Defaults to false. To set this field, a user needs \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity) will be returned. +optional",
          "type": "boolean"
        },
        "apiVersion": {
          "description": "API version of the referent.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
        },
        "controller": {
          "type": "boolean",
          "description": "If true, this reference points to the managing controller. +optional"
        },
        "uid": {
          "type": "string",
          "description": "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
        }
      }
    },
    "StatusDetails": {
      "id": "StatusDetails",
      "description": "StatusDetails is a set of additional properties that MAY be set by the server to provide additional information about a response. The Reason field of a Status object defines what attributes will be set. Clients must ignore fields that do not match the defined type of each attribute, and should assume that any attribute may be empty, invalid, or under defined.",
      "type": "object",
      "properties": {
        "uid": {
          "description": "UID of the resource. (when there is a single resource which can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids +optional",
          "type": "string"
        },
        "kind": {
          "description": "The kind attribute of the resource associated with the status StatusReason. On some operations may differ from the requested resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds +optional",
          "type": "string"
        },
        "causes": {
          "description": "The Causes array includes more details associated with the StatusReason failure. Not all StatusReasons may provide detailed causes. +optional",
          "items": {
            "$ref": "StatusCause"
          },
          "type": "array"
        },
        "group": {
          "description": "The group attribute of the resource associated with the status StatusReason. +optional",
          "type": "string"
        },
        "name": {
          "description": "The name attribute of the resource associated with the status StatusReason (when there is a single name which can be described). +optional",
          "type": "string"
        },
        "retryAfterSeconds": {
          "description": "If specified, the time in seconds before the operation should be retried. Some errors may indicate the client must take an alternate action - for those errors this field may indicate how long to wait before taking the alternate action. +optional",
          "format": "int32",
          "type": "integer"
        }
      }
    },
    "ResourceRequirements": {
      "properties": {
        "limits": {
          "description": "(Optional) Cloud Run fully managed: Only memory and CPU are supported. Note: The only supported values for CPU are '1', '2', and '4'. Setting 4 CPU requires at least 2Gi of memory. Cloud Run for Anthos: supported Limits describes the maximum amount of compute resources allowed. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "requests": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "(Optional) Cloud Run fully managed: Only memory and CPU are supported. Note: The only supported values for CPU are '1' and '2'. Cloud Run for Anthos: supported Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. The values of the map is string form of the 'quantity' k8s type: https://github.com/kubernetes/kubernetes/blob/master/staging/src/k8s.io/apimachinery/pkg/api/resource/quantity.go"
        }
      },
      "description": "ResourceRequirements describes the compute resource requirements.",
      "id": "ResourceRequirements",
      "type": "object"
    },
    "Status": {
      "properties": {
        "message": {
          "type": "string",
          "description": "A human-readable description of the status of this operation. +optional"
        },
        "metadata": {
          "$ref": "ListMeta",
          "description": "Standard list metadata. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds +optional"
        },
        "reason": {
          "description": "A machine-readable description of why this operation is in the \"Failure\" status. If this value is empty there is no information available. A Reason clarifies an HTTP status code but does not override it. +optional",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "Status of the operation. One of: \"Success\" or \"Failure\". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status +optional"
        },
        "details": {
          "description": "Extended data associated with the reason. Each reason may define its own extended details. This field is optional and the data returned is not guaranteed to conform to any schema except that defined by the reason type. +optional",
          "$ref": "StatusDetails"
        },
        "code": {
          "description": "Suggested HTTP return code for this status, 0 if not set. +optional",
          "type": "integer",
          "format": "int32"
        }
      },
      "description": "Status is a return value for calls that don't return other objects",
      "type": "object",
      "id": "Status"
    },
    "SecurityContext": {
      "id": "SecurityContext",
      "properties": {
        "runAsUser": {
          "format": "int32",
          "type": "integer",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence."
        }
      },
      "type": "object",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext. When both are set, the values in SecurityContext take precedence."
    },
    "ExecAction": {
      "properties": {
        "command": {
          "type": "array",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Command is the command line to execute inside the container, the working directory for the command is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported ExecAction describes a \"run in container\" action.",
      "id": "ExecAction"
    },
    "ServiceSpec": {
      "type": "object",
      "description": "ServiceSpec holds the desired state of the Route (from the client), which is used to manipulate the underlying Route and Configuration(s).",
      "id": "ServiceSpec",
      "properties": {
        "template": {
          "description": "Template holds the latest specification for the Revision to be stamped out.",
          "$ref": "RevisionTemplate"
        },
        "traffic": {
          "description": "Traffic specifies how to distribute traffic over a collection of Knative Revisions and Configurations.",
          "items": {
            "$ref": "TrafficTarget"
          },
          "type": "array"
        }
      }
    },
    "Location": {
      "properties": {
        "name": {
          "type": "string",
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "displayName": {
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\".",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "additionalProperties": {
            "type": "string"
          }
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      },
      "id": "Location",
      "type": "object",
      "description": "A resource that represents Google Cloud Platform location."
    },
    "RouteStatus": {
      "type": "object",
      "properties": {
        "address": {
          "description": "Similar to url, information on where the service is available on HTTP.",
          "$ref": "Addressable"
        },
        "traffic": {
          "type": "array",
          "description": "Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.",
          "items": {
            "$ref": "TrafficTarget"
          }
        },
        "conditions": {
          "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world.",
          "items": {
            "$ref": "GoogleCloudRunV1Condition"
          },
          "type": "array"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False. Note that providing a trafficTarget that only has a configurationName will result in a Route that does not increment either its metadata.generation or its observedGeneration, as new \"latest ready\" revisions from the Configuration are processed without an update to the Route's spec.",
          "format": "int32"
        },
        "url": {
          "type": "string",
          "description": "URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form: https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app"
        }
      },
      "description": "RouteStatus communicates the observed state of the Route (from the controller).",
      "id": "RouteStatus"
    },
    "ListMeta": {
      "type": "object",
      "properties": {
        "resourceVersion": {
          "type": "string",
          "description": "String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency +optional"
        },
        "continue": {
          "type": "string",
          "description": "continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response."
        },
        "selfLink": {
          "type": "string",
          "description": "SelfLink is a URL representing this object. Populated by the system. Read-only. +optional"
        }
      },
      "description": "ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.",
      "id": "ListMeta"
    },
    "ConfigMapKeySelector": {
      "id": "ConfigMapKeySelector",
      "properties": {
        "optional": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the ConfigMap or its key must be defined",
          "type": "boolean"
        },
        "name": {
          "type": "string",
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The ConfigMap to select from."
        },
        "localObjectReference": {
          "$ref": "LocalObjectReference",
          "description": "This field should not be used directly as it is meant to be inlined directly into the message. Use the \"name\" field instead."
        },
        "key": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The key to select.",
          "type": "string"
        }
      },
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Selects a key from a ConfigMap.",
      "type": "object"
    },
    "Route": {
      "type": "object",
      "description": "Route is responsible for configuring ingress over a collection of Revisions. Some of the Revisions a Route distributes traffic over may be specified by referencing the Configuration responsible for creating them; in these cases the Route is additionally responsible for monitoring the Configuration for \"latest ready\" revision changes, and smoothly rolling out latest revisions. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#route Cloud Run currently supports referencing a single Configuration to automatically deploy the \"latest ready\" Revision from that Configuration.",
      "id": "Route",
      "properties": {
        "kind": {
          "description": "The kind of this resource, in this case always \"Route\".",
          "type": "string"
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"serving.knative.dev/v1\"."
        },
        "status": {
          "$ref": "RouteStatus",
          "description": "Status communicates the observed state of the Route (from the controller)."
        },
        "spec": {
          "description": "Spec holds the desired state of the Route (from the client).",
          "$ref": "RouteSpec"
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Route, including name, namespace, labels, and annotations."
        }
      }
    },
    "EnvFromSource": {
      "properties": {
        "secretRef": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The Secret to select from",
          "$ref": "SecretEnvSource"
        },
        "prefix": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.",
          "type": "string"
        },
        "configMapRef": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported The ConfigMap to select from",
          "$ref": "ConfigMapEnvSource"
        }
      },
      "id": "EnvFromSource",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported EnvFromSource represents the source of a set of ConfigMaps",
      "type": "object"
    },
    "ConfigMapEnvSource": {
      "id": "ConfigMapEnvSource",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported ConfigMapEnvSource selects a ConfigMap to populate the environment variables with. The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.",
      "type": "object",
      "properties": {
        "localObjectReference": {
          "$ref": "LocalObjectReference",
          "description": "This field should not be used directly as it is meant to be inlined directly into the message. Use the \"name\" field instead."
        },
        "name": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The ConfigMap to select from.",
          "type": "string"
        },
        "optional": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the ConfigMap must be defined",
          "type": "boolean"
        }
      }
    },
    "RevisionSpec": {
      "type": "object",
      "description": "RevisionSpec holds the desired state of the Revision (from the client).",
      "id": "RevisionSpec",
      "properties": {
        "volumes": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "containerConcurrency": {
          "type": "integer",
          "format": "int32",
          "description": "(Optional) ContainerConcurrency specifies the maximum allowed in-flight (concurrent) requests per container instance of the Revision. Cloud Run fully managed: supported, defaults to 80 Cloud Run for Anthos: supported, defaults to 0, which means concurrency to the application is not limited, and the system decides the target concurrency for the autoscaler."
        },
        "timeoutSeconds": {
          "format": "int32",
          "type": "integer",
          "description": "TimeoutSeconds holds the max duration the instance is allowed for responding to a request. Cloud Run fully managed: defaults to 300 seconds (5 minutes). Maximum allowed value is 900 seconds (15 minutes). Cloud Run for Anthos: defaults to 300 seconds (5 minutes). Maximum allowed value is configurable by the cluster operator."
        },
        "containers": {
          "description": "Containers holds the single container that defines the unit of execution for this Revision. In the context of a Revision, we disallow a number of fields on this Container, including: name and lifecycle. In Cloud Run, only a single container may be provided. The runtime contract is documented here: https://github.com/knative/serving/blob/master/docs/runtime-contract.md",
          "items": {
            "$ref": "Container"
          },
          "type": "array"
        },
        "serviceAccountName": {
          "description": "Email address of the IAM service account associated with the revision of the service. The service account represents the identity of the running revision, and determines what permissions the revision has. If not provided, the revision will use the project's default service account.",
          "type": "string"
        }
      }
    },
    "ContainerPort": {
      "description": "ContainerPort represents a network port in a single container.",
      "id": "ContainerPort",
      "properties": {
        "containerPort": {
          "type": "integer",
          "description": "(Optional) Port number the container listens on. This must be a valid port number, 0 \u003c x \u003c 65536.",
          "format": "int32"
        },
        "name": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported If specified, used to specify which protocol to use. Allowed values are \"http1\" and \"h2c\".",
          "type": "string"
        },
        "protocol": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Protocol for port. Must be \"TCP\". Defaults to \"TCP\".",
          "type": "string"
        }
      },
      "type": "object"
    },
    "RevisionTemplate": {
      "type": "object",
      "properties": {
        "spec": {
          "$ref": "RevisionSpec",
          "description": "RevisionSpec holds the desired state of the Revision (from the client)."
        },
        "metadata": {
          "description": "Optional metadata for this Revision, including labels and annotations. Name will be generated by the Configuration. The following annotation keys set properties of the created revision: * `autoscaling.knative.dev/minScale` sets the minimum number of instances. * `autoscaling.knative.dev/maxScale` sets the maximum number of instances. * `run.googleapis.com/cloudsql-instances` sets Cloud SQL connections. Multiple values should be comma separated. * `run.googleapis.com/vpc-access-connector` sets a Serverless VPC Access connector. * `run.googleapis.com/vpc-access-egress` sets VPC egress. Supported values are `all` and `private-ranges-only`.",
          "$ref": "ObjectMeta"
        }
      },
      "description": "RevisionTemplateSpec describes the data a revision should have when created from a template. Based on: https://github.com/kubernetes/api/blob/e771f807/core/v1/types.go#L3179-L3190",
      "id": "RevisionTemplate"
    },
    "HTTPGetAction": {
      "id": "HTTPGetAction",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported HTTPGetAction describes an action based on HTTP Get requests.",
      "properties": {
        "httpHeaders": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Custom headers to set in the request. HTTP allows repeated headers.",
          "type": "array",
          "items": {
            "$ref": "HTTPHeader"
          }
        },
        "host": {
          "type": "string",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead."
        },
        "scheme": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Scheme to use for connecting to the host. Defaults to HTTP.",
          "type": "string"
        },
        "path": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Path to access on the HTTP server.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ListDomainMappingsResponse": {
      "type": "object",
      "id": "ListDomainMappingsResponse",
      "description": "ListDomainMappingsResponse is a list of DomainMapping resources.",
      "properties": {
        "unreachable": {
          "description": "Locations that could not be reached.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "metadata": {
          "description": "Metadata associated with this DomainMapping list.",
          "$ref": "ListMeta"
        },
        "kind": {
          "description": "The kind of this resource, in this case \"DomainMappingList\".",
          "type": "string"
        },
        "apiVersion": {
          "description": "The API version for this call such as \"domains.cloudrun.com/v1\".",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "DomainMapping"
          },
          "description": "List of DomainMappings."
        }
      }
    },
    "SecretEnvSource": {
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported SecretEnvSource selects a Secret to populate the environment variables with. The contents of the target Secret's Data field will represent the key-value pairs as environment variables.",
      "id": "SecretEnvSource",
      "properties": {
        "name": {
          "type": "string",
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The Secret to select from."
        },
        "optional": {
          "type": "boolean",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the Secret must be defined"
        },
        "localObjectReference": {
          "description": "This field should not be used directly as it is meant to be inlined directly into the message. Use the \"name\" field instead.",
          "$ref": "LocalObjectReference"
        }
      },
      "type": "object"
    },
    "SecretKeySelector": {
      "id": "SecretKeySelector",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported SecretKeySelector selects a key of a Secret.",
      "type": "object",
      "properties": {
        "optional": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the Secret or its key must be defined",
          "type": "boolean"
        },
        "name": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The name of the secret in the pod's namespace to select from.",
          "type": "string"
        },
        "key": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The key of the secret to select from. Must be a valid secret key.",
          "type": "string"
        },
        "localObjectReference": {
          "$ref": "LocalObjectReference",
          "description": "This field should not be used directly as it is meant to be inlined directly into the message. Use the \"name\" field instead."
        }
      }
    },
    "TCPSocketAction": {
      "type": "object",
      "properties": {
        "host": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Optional: Host name to connect to, defaults to the pod IP.",
          "type": "string"
        },
        "port": {
          "format": "int32",
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Number or name of the port to access on the container. Number must be in the range 1 to 65535. Name must be an IANA_SVC_NAME. This field is currently limited to integer types only because of proto's inability to properly support the IntOrString golang type.",
          "type": "integer"
        }
      },
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported TCPSocketAction describes an action based on opening a socket",
      "id": "TCPSocketAction"
    },
    "ConfigMapVolumeSource": {
      "id": "ConfigMapVolumeSource",
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Name of the config."
        },
        "items": {
          "items": {
            "$ref": "KeyToPath"
          },
          "type": "array",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional."
        },
        "optional": {
          "type": "boolean",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the Secret or its keys must be defined."
        },
        "defaultMode": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Mode bits to use on created files by default. Must be a value between 0 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.",
          "format": "int32",
          "type": "integer"
        }
      },
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Adapts a ConfigMap into a volume. The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths."
    },
    "Volume": {
      "id": "Volume",
      "properties": {
        "configMap": {
          "$ref": "ConfigMapVolumeSource",
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported"
        },
        "secret": {
          "$ref": "SecretVolumeSource",
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported"
        },
        "name": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Volume's name.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Volume represents a named volume in a container."
    },
    "EnvVar": {
      "description": "EnvVar represents an environment variable present in a Container.",
      "type": "object",
      "id": "EnvVar",
      "properties": {
        "valueFrom": {
          "$ref": "EnvVarSource",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Source for the environment variable's value. Cannot be used if value is not empty."
        },
        "name": {
          "description": "Name of the environment variable. Must be a C_IDENTIFIER.",
          "type": "string"
        },
        "value": {
          "type": "string",
          "description": "(Optional) Variable references $(VAR_NAME) are expanded using the previous defined environment variables in the container and any route environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\"."
        }
      }
    },
    "AuthorizedDomain": {
      "id": "AuthorizedDomain",
      "properties": {
        "name": {
          "type": "string",
          "description": "Deprecated Read only. Full path to the `AuthorizedDomain` resource in the API. Example: `projects/myproject/authorizedDomains/example.com`."
        },
        "id": {
          "description": "Relative name of the domain authorized for use. Example: `example.com`.",
          "type": "string"
        }
      },
      "description": "A domain that a user has been authorized to administer. To authorize use of a domain, verify ownership via [Webmaster Central](https://www.google.com/webmasters/verification/home).",
      "type": "object"
    },
    "ListLocationsResponse": {
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "items": {
            "$ref": "Location"
          },
          "type": "array",
          "description": "A list of locations that matches the specified filter in the request."
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "description": "The response message for Locations.ListLocations.",
      "type": "object"
    },
    "Configuration": {
      "description": "Configuration represents the \"floating HEAD\" of a linear history of Revisions, and optionally how the containers those revisions reference are built. Users create new Revisions by updating the Configuration's spec. The \"latest created\" revision's name is available under status, as is the \"latest ready\" revision's name. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#configuration",
      "id": "Configuration",
      "properties": {
        "kind": {
          "description": "The kind of resource, in this case always \"Configuration\".",
          "type": "string"
        },
        "status": {
          "$ref": "ConfigurationStatus",
          "description": "Status communicates the observed state of the Configuration (from the controller)."
        },
        "apiVersion": {
          "description": "The API version for this call such as \"serving.knative.dev/v1\".",
          "type": "string"
        },
        "spec": {
          "description": "Spec holds the desired state of the Configuration (from the client).",
          "$ref": "ConfigurationSpec"
        },
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Configuration, including name, namespace, labels, and annotations."
        }
      },
      "type": "object"
    },
    "ServiceStatus": {
      "description": "The current state of the Service. Output only.",
      "properties": {
        "latestReadyRevisionName": {
          "description": "From ConfigurationStatus. LatestReadyRevisionName holds the name of the latest Revision stamped out from this Service's Configuration that has had its \"Ready\" condition become \"True\".",
          "type": "string"
        },
        "latestCreatedRevisionName": {
          "type": "string",
          "description": "From ConfigurationStatus. LatestCreatedRevisionName is the last revision that was created from this Service's Configuration. It might not be ready yet, for that use LatestReadyRevisionName."
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "GoogleCloudRunV1Condition"
          },
          "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world. Service-specific conditions include: * \"ConfigurationsReady\": true when the underlying Configuration is ready. * \"RoutesReady\": true when the underlying Route is ready. * \"Ready\": true when both the underlying Route and Configuration are ready."
        },
        "traffic": {
          "description": "From RouteStatus. Traffic holds the configured traffic distribution. These entries will always contain RevisionName references. When ConfigurationName appears in the spec, this will hold the LatestReadyRevisionName that we last observed.",
          "type": "array",
          "items": {
            "$ref": "TrafficTarget"
          }
        },
        "address": {
          "description": "From RouteStatus. Similar to url, information on where the service is available on HTTP.",
          "$ref": "Addressable"
        },
        "observedGeneration": {
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Route that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.",
          "format": "int32"
        },
        "url": {
          "description": "From RouteStatus. URL holds the url that will distribute traffic over the provided traffic targets. It generally has the form https://{route-hash}-{project-hash}-{cluster-level-suffix}.a.run.app",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ServiceStatus"
    },
    "SecretVolumeSource": {
      "type": "object",
      "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names.",
      "properties": {
        "secretName": {
          "description": "Cloud Run fully managed: not supported Cloud Run for Anthos: supported Name of the secret in the container's namespace to use.",
          "type": "string"
        },
        "items": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional.",
          "items": {
            "$ref": "KeyToPath"
          },
          "type": "array"
        },
        "defaultMode": {
          "type": "integer",
          "format": "int32",
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Mode bits to use on created files by default. Must be a value between 0000 and 0777. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set. NOTE: This is an integer representation of the mode bits. So, the integer value should look exactly as the chmod numeric notation, i.e. Unix chmod \"777\" (a=rwx) should have the integer value 777."
        },
        "optional": {
          "description": "(Optional) Cloud Run fully managed: not supported Cloud Run for Anthos: supported Specify whether the Secret or its keys must be defined.",
          "type": "boolean"
        }
      },
      "id": "SecretVolumeSource"
    },
    "DomainMappingStatus": {
      "properties": {
        "resourceRecords": {
          "items": {
            "$ref": "ResourceRecord"
          },
          "type": "array",
          "description": "The resource records required to configure this domain mapping. These records must be added to the domain's DNS configuration in order to serve the application via this domain mapping."
        },
        "observedGeneration": {
          "description": "ObservedGeneration is the 'Generation' of the DomainMapping that was last processed by the controller. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation and the Ready condition's status is True or False.",
          "type": "integer",
          "format": "int32"
        },
        "conditions": {
          "items": {
            "$ref": "GoogleCloudRunV1Condition"
          },
          "description": "Array of observed DomainMappingConditions, indicating the current state of the DomainMapping.",
          "type": "array"
        },
        "url": {
          "type": "string",
          "description": "Cloud Run fully managed: not supported Cloud Run on GKE: supported Holds the URL that will serve the traffic of the DomainMapping. +optional"
        },
        "mappedRouteName": {
          "type": "string",
          "description": "The name of the route that the mapping currently points to."
        }
      },
      "type": "object",
      "description": "The current state of the Domain Mapping.",
      "id": "DomainMappingStatus"
    },
    "ConfigurationStatus": {
      "properties": {
        "latestReadyRevisionName": {
          "type": "string",
          "description": "LatestReadyRevisionName holds the name of the latest Revision stamped out from this Configuration that has had its \"Ready\" condition become \"True\"."
        },
        "observedGeneration": {
          "format": "int32",
          "type": "integer",
          "description": "ObservedGeneration is the 'Generation' of the Configuration that was last processed by the controller. The observed generation is updated even if the controller failed to process the spec and create the Revision. Clients polling for completed reconciliation should poll until observedGeneration = metadata.generation, and the Ready condition's status is True or False."
        },
        "latestCreatedRevisionName": {
          "description": "LatestCreatedRevisionName is the last revision that was created from this Configuration. It might not be ready yet, for that use LatestReadyRevisionName.",
          "type": "string"
        },
        "conditions": {
          "type": "array",
          "description": "Conditions communicates information about ongoing/complete reconciliation processes that bring the \"spec\" inline with the observed state of the world.",
          "items": {
            "$ref": "GoogleCloudRunV1Condition"
          }
        }
      },
      "description": "ConfigurationStatus communicates the observed state of the Configuration (from the controller).",
      "id": "ConfigurationStatus",
      "type": "object"
    },
    "Service": {
      "id": "Service",
      "type": "object",
      "properties": {
        "metadata": {
          "$ref": "ObjectMeta",
          "description": "Metadata associated with this Service, including name, namespace, labels, and annotations."
        },
        "kind": {
          "type": "string",
          "description": "The kind of resource, in this case \"Service\"."
        },
        "status": {
          "description": "Status communicates the observed state of the Service (from the controller).",
          "$ref": "ServiceStatus"
        },
        "spec": {
          "$ref": "ServiceSpec",
          "description": "Spec holds the desired state of the Service (from the client)."
        },
        "apiVersion": {
          "type": "string",
          "description": "The API version for this call such as \"serving.knative.dev/v1\"."
        }
      },
      "description": "Service acts as a top-level container that manages a set of Routes and Configurations which implement a network service. Service exists to provide a singular abstraction which can be access controlled, reasoned about, and which encapsulates software lifecycle decisions such as rollout policy and team resource ownership. Service acts only as an orchestrator of the underlying Routes and Configurations (much as a kubernetes Deployment orchestrates ReplicaSets). The Service's controller will track the statuses of its owned Configuration and Route, reflecting their statuses and conditions as its own. See also: https://github.com/knative/serving/blob/master/docs/spec/overview.md#service"
    }
  },
  "parameters": {
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "default": "json",
      "description": "Data format for response."
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "type": "boolean"
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "access_token": {
      "location": "query",
      "type": "string",
      "description": "OAuth access token."
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    }
  },
  "id": "run:v1",
  "mtlsRootUrl": "https://run.mtls.googleapis.com/",
  "baseUrl": "https://run.googleapis.com/",
  "canonicalName": "Cloud Run",
  "kind": "discovery#restDescription",
  "discoveryVersion": "v1",
  "basePath": "",
  "servicePath": "",
  "resources": {
    "namespaces": {
      "resources": {
        "authorizeddomains": {
          "methods": {
            "list": {
              "description": "List authorized domains.",
              "httpMethod": "GET",
              "path": "apis/domains.cloudrun.com/v1/{+parent}/authorizeddomains",
              "flatPath": "apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/authorizeddomains",
              "response": {
                "$ref": "ListAuthorizedDomainsResponse"
              },
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "Maximum results to return per page.",
                  "format": "int32",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "Continuation token for fetching the next page of results."
                },
                "parent": {
                  "required": true,
                  "pattern": "^namespaces/[^/]+$",
                  "type": "string",
                  "description": "Name of the parent Project resource. Example: `projects/myproject`.",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "id": "run.namespaces.authorizeddomains.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "services": {
          "methods": {
            "get": {
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/services/{servicesId}",
              "path": "apis/serving.knative.dev/v1/{+name}",
              "httpMethod": "GET",
              "description": "Get information about a service.",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameters": {
                "name": {
                  "description": "The name of the service to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "pattern": "^namespaces/[^/]+/services/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "id": "run.namespaces.services.get",
              "response": {
                "$ref": "Service"
              },
              "parameterOrder": [
                "name"
              ]
            },
            "delete": {
              "httpMethod": "DELETE",
              "parameterOrder": [
                "name"
              ],
              "path": "apis/serving.knative.dev/v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "run.namespaces.services.delete",
              "parameters": {
                "kind": {
                  "location": "query",
                  "type": "string",
                  "description": "Cloud Run currently ignores this parameter."
                },
                "propagationPolicy": {
                  "location": "query",
                  "type": "string",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information."
                },
                "apiVersion": {
                  "type": "string",
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter."
                },
                "name": {
                  "pattern": "^namespaces/[^/]+/services/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "description": "The name of the service to delete. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "required": true
                }
              },
              "description": "Delete a service. This will cause the Service to stop serving traffic and will delete the child entities like Routes, Configurations and Revisions.",
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/services/{servicesId}",
              "response": {
                "$ref": "Status"
              }
            },
            "replaceService": {
              "request": {
                "$ref": "Service"
              },
              "httpMethod": "PUT",
              "response": {
                "$ref": "Service"
              },
              "path": "apis/serving.knative.dev/v1/{+name}",
              "parameters": {
                "name": {
                  "pattern": "^namespaces/[^/]+/services/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "The name of the service being replaced. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "required": true
                }
              },
              "id": "run.namespaces.services.replaceService",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/services/{servicesId}",
              "description": "Replace a service. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control."
            },
            "list": {
              "httpMethod": "GET",
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/services",
              "path": "apis/serving.knative.dev/v1/{+parent}/services",
              "parameters": {
                "resourceVersion": {
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "string"
                },
                "watch": {
                  "type": "boolean",
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "description": "The namespace from which the services should be listed. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "pattern": "^namespaces/[^/]+$",
                  "type": "string",
                  "required": true
                },
                "fieldSelector": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                },
                "continue": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional encoded string to continue paging."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum number of records that should be returned.",
                  "location": "query",
                  "format": "int32"
                },
                "includeUninitialized": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Not currently used by Cloud Run."
                },
                "labelSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "type": "string"
                }
              },
              "description": "List services.",
              "response": {
                "$ref": "ListServicesResponse"
              },
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "run.namespaces.services.list"
            },
            "create": {
              "id": "run.namespaces.services.create",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "type": "string",
                  "description": "The namespace in which the service should be created. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "location": "path",
                  "required": true,
                  "pattern": "^namespaces/[^/]+$"
                }
              },
              "path": "apis/serving.knative.dev/v1/{+parent}/services",
              "description": "Create a service.",
              "request": {
                "$ref": "Service"
              },
              "httpMethod": "POST",
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/services",
              "response": {
                "$ref": "Service"
              }
            }
          }
        },
        "configurations": {
          "methods": {
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "GET",
              "description": "List configurations.",
              "path": "apis/serving.knative.dev/v1/{+parent}/configurations",
              "parameters": {
                "limit": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of records that should be returned."
                },
                "labelSelector": {
                  "location": "query",
                  "type": "string",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                },
                "watch": {
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "boolean"
                },
                "includeUninitialized": {
                  "type": "boolean",
                  "description": "Not currently used by Cloud Run.",
                  "location": "query"
                },
                "parent": {
                  "location": "path",
                  "description": "The namespace from which the configurations should be listed. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "type": "string",
                  "required": true,
                  "pattern": "^namespaces/[^/]+$"
                },
                "fieldSelector": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                },
                "continue": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional encoded string to continue paging."
                },
                "resourceVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                }
              },
              "id": "run.namespaces.configurations.list",
              "response": {
                "$ref": "ListConfigurationsResponse"
              },
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/configurations",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            },
            "get": {
              "description": "Get information about a configuration.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "pattern": "^namespaces/[^/]+/configurations/[^/]+$",
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "The name of the configuration to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Configuration"
              },
              "id": "run.namespaces.configurations.get",
              "path": "apis/serving.knative.dev/v1/{+name}",
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/configurations/{configurationsId}"
            }
          }
        },
        "routes": {
          "methods": {
            "list": {
              "parameterOrder": [
                "parent"
              ],
              "path": "apis/serving.knative.dev/v1/{+parent}/routes",
              "description": "List routes.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "run.namespaces.routes.list",
              "parameters": {
                "resourceVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                },
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "includeUninitialized": {
                  "description": "Not currently used by Cloud Run.",
                  "type": "boolean",
                  "location": "query"
                },
                "labelSelector": {
                  "location": "query",
                  "type": "string",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                },
                "limit": {
                  "type": "integer",
                  "description": "The maximum number of records that should be returned.",
                  "location": "query",
                  "format": "int32"
                },
                "fieldSelector": {
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "type": "string"
                },
                "parent": {
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "The namespace from which the routes should be listed. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "type": "string"
                },
                "watch": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run."
                }
              },
              "response": {
                "$ref": "ListRoutesResponse"
              },
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/routes"
            },
            "get": {
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/routes/{routesId}",
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "The name of the route to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "pattern": "^namespaces/[^/]+/routes/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "description": "Get information about a route.",
              "path": "apis/serving.knative.dev/v1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "Route"
              },
              "id": "run.namespaces.routes.get"
            }
          }
        },
        "domainmappings": {
          "methods": {
            "create": {
              "httpMethod": "POST",
              "request": {
                "$ref": "DomainMapping"
              },
              "flatPath": "apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/domainmappings",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "DomainMapping"
              },
              "path": "apis/domains.cloudrun.com/v1/{+parent}/domainmappings",
              "id": "run.namespaces.domainmappings.create",
              "description": "Create a new domain mapping.",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "The namespace in which the domain mapping should be created. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "Status"
              },
              "description": "Delete a domain mapping.",
              "parameters": {
                "kind": {
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter.",
                  "type": "string"
                },
                "propagationPolicy": {
                  "location": "query",
                  "type": "string",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information."
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^namespaces/[^/]+/domainmappings/[^/]+$",
                  "description": "The name of the domain mapping to delete. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number."
                },
                "apiVersion": {
                  "location": "query",
                  "type": "string",
                  "description": "Cloud Run currently ignores this parameter."
                }
              },
              "path": "apis/domains.cloudrun.com/v1/{+name}",
              "flatPath": "apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "run.namespaces.domainmappings.delete",
              "parameterOrder": [
                "name"
              ]
            },
            "get": {
              "httpMethod": "GET",
              "flatPath": "apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/domainmappings/{domainmappingsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "id": "run.namespaces.domainmappings.get",
              "path": "apis/domains.cloudrun.com/v1/{+name}",
              "response": {
                "$ref": "DomainMapping"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^namespaces/[^/]+/domainmappings/[^/]+$",
                  "description": "The name of the domain mapping to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "required": true
                }
              },
              "description": "Get information about a domain mapping.",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "description": "List domain mappings.",
              "parameters": {
                "includeUninitialized": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Not currently used by Cloud Run."
                },
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "fieldSelector": {
                  "type": "string",
                  "location": "query",
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                },
                "parent": {
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "description": "The namespace from which the domain mappings should be listed. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                  "type": "string",
                  "required": true
                },
                "limit": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of records that should be returned."
                },
                "labelSelector": {
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                  "type": "string",
                  "location": "query"
                },
                "watch": {
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "type": "boolean"
                },
                "resourceVersion": {
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "apis/domains.cloudrun.com/v1/namespaces/{namespacesId}/domainmappings",
              "id": "run.namespaces.domainmappings.list",
              "response": {
                "$ref": "ListDomainMappingsResponse"
              },
              "path": "apis/domains.cloudrun.com/v1/{+parent}/domainmappings",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ]
            }
          }
        },
        "revisions": {
          "methods": {
            "get": {
              "path": "apis/serving.knative.dev/v1/{+name}",
              "response": {
                "$ref": "Revision"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^namespaces/[^/]+/revisions/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "The name of the revision to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number."
                }
              },
              "httpMethod": "GET",
              "description": "Get information about a revision.",
              "parameterOrder": [
                "name"
              ],
              "id": "run.namespaces.revisions.get",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/revisions/{revisionsId}"
            },
            "delete": {
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/revisions/{revisionsId}",
              "parameters": {
                "apiVersion": {
                  "type": "string",
                  "description": "Cloud Run currently ignores this parameter.",
                  "location": "query"
                },
                "propagationPolicy": {
                  "location": "query",
                  "type": "string",
                  "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information."
                },
                "kind": {
                  "type": "string",
                  "location": "query",
                  "description": "Cloud Run currently ignores this parameter."
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^namespaces/[^/]+/revisions/[^/]+$",
                  "location": "path",
                  "description": "The name of the revision to delete. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "apis/serving.knative.dev/v1/{+name}",
              "description": "Delete a revision.",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "Status"
              },
              "httpMethod": "DELETE",
              "id": "run.namespaces.revisions.delete"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ],
              "path": "apis/serving.knative.dev/v1/{+parent}/revisions",
              "description": "List revisions.",
              "httpMethod": "GET",
              "id": "run.namespaces.revisions.list",
              "parameters": {
                "includeUninitialized": {
                  "type": "boolean",
                  "location": "query",
                  "description": "Not currently used by Cloud Run."
                },
                "continue": {
                  "location": "query",
                  "description": "Optional encoded string to continue paging.",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "pattern": "^namespaces/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "The namespace from which the revisions should be listed. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number."
                },
                "limit": {
                  "type": "integer",
                  "location": "query",
                  "description": "The maximum number of records that should be returned.",
                  "format": "int32"
                },
                "resourceVersion": {
                  "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                  "location": "query",
                  "type": "string"
                },
                "watch": {
                  "location": "query",
                  "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                  "type": "boolean"
                },
                "fieldSelector": {
                  "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                  "type": "string",
                  "location": "query"
                },
                "labelSelector": {
                  "location": "query",
                  "type": "string",
                  "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                }
              },
              "response": {
                "$ref": "ListRevisionsResponse"
              },
              "flatPath": "apis/serving.knative.dev/v1/namespaces/{namespacesId}/revisions"
            }
          }
        }
      }
    },
    "projects": {
      "resources": {
        "authorizeddomains": {
          "methods": {
            "list": {
              "path": "v1/{+parent}/authorizeddomains",
              "response": {
                "$ref": "ListAuthorizedDomainsResponse"
              },
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "description": "Maximum results to return per page.",
                  "type": "integer",
                  "location": "query"
                },
                "parent": {
                  "pattern": "^projects/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Name of the parent Project resource. Example: `projects/myproject`."
                },
                "pageToken": {
                  "type": "string",
                  "description": "Continuation token for fetching the next page of results.",
                  "location": "query"
                }
              },
              "httpMethod": "GET",
              "description": "List authorized domains.",
              "flatPath": "v1/projects/{projectsId}/authorizeddomains",
              "id": "run.projects.authorizeddomains.list",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "parameterOrder": [
                "parent"
              ]
            }
          }
        },
        "locations": {
          "resources": {
            "authorizeddomains": {
              "methods": {
                "list": {
                  "description": "List authorized domains.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1/{+parent}/authorizeddomains",
                  "response": {
                    "$ref": "ListAuthorizedDomainsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/authorizeddomains",
                  "id": "run.projects.locations.authorizeddomains.list",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "Maximum results to return per page.",
                      "type": "integer"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "description": "Name of the parent Project resource. Example: `projects/myproject`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "Continuation token for fetching the next page of results.",
                      "type": "string"
                    }
                  }
                }
              }
            },
            "domainmappings": {
              "methods": {
                "get": {
                  "response": {
                    "$ref": "DomainMapping"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Get information about a domain mapping.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                  "id": "run.projects.locations.domainmappings.get",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "description": "The name of the domain mapping to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/domainmappings/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  }
                },
                "delete": {
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "run.projects.locations.domainmappings.delete",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/domainmappings/{domainmappingsId}",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/domainmappings/[^/]+$",
                      "description": "The name of the domain mapping to delete. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number."
                    },
                    "propagationPolicy": {
                      "location": "query",
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                      "type": "string"
                    },
                    "kind": {
                      "type": "string",
                      "description": "Cloud Run currently ignores this parameter.",
                      "location": "query"
                    },
                    "apiVersion": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "location": "query",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Status"
                  },
                  "description": "Delete a domain mapping.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE"
                },
                "list": {
                  "parameters": {
                    "watch": {
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "type": "boolean"
                    },
                    "fieldSelector": {
                      "type": "string",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "location": "query"
                    },
                    "limit": {
                      "description": "The maximum number of records that should be returned.",
                      "location": "query",
                      "format": "int32",
                      "type": "integer"
                    },
                    "continue": {
                      "type": "string",
                      "description": "Optional encoded string to continue paging.",
                      "location": "query"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "type": "string",
                      "location": "query"
                    },
                    "resourceVersion": {
                      "location": "query",
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "type": "string"
                    },
                    "parent": {
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "The namespace from which the domain mappings should be listed. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number."
                    },
                    "includeUninitialized": {
                      "type": "boolean",
                      "description": "Not currently used by Cloud Run.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/domainmappings",
                  "path": "v1/{+parent}/domainmappings",
                  "httpMethod": "GET",
                  "id": "run.projects.locations.domainmappings.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListDomainMappingsResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List domain mappings."
                },
                "create": {
                  "httpMethod": "POST",
                  "path": "v1/{+parent}/domainmappings",
                  "request": {
                    "$ref": "DomainMapping"
                  },
                  "parameters": {
                    "parent": {
                      "description": "The namespace in which the domain mapping should be created. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "response": {
                    "$ref": "DomainMapping"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "id": "run.projects.locations.domainmappings.create",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/domainmappings",
                  "description": "Create a new domain mapping."
                }
              }
            },
            "services": {
              "methods": {
                "list": {
                  "path": "v1/{+parent}/services",
                  "id": "run.projects.locations.services.list",
                  "description": "List services.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/services",
                  "response": {
                    "$ref": "ListServicesResponse"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "The namespace from which the services should be listed. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "watch": {
                      "type": "boolean",
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "location": "query"
                    },
                    "continue": {
                      "location": "query",
                      "description": "Optional encoded string to continue paging.",
                      "type": "string"
                    },
                    "limit": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of records that should be returned.",
                      "location": "query"
                    },
                    "includeUninitialized": {
                      "type": "boolean",
                      "description": "Not currently used by Cloud Run.",
                      "location": "query"
                    },
                    "labelSelector": {
                      "type": "string",
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "location": "query"
                    },
                    "fieldSelector": {
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "type": "string",
                      "location": "query"
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                },
                "getIamPolicy": {
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "location": "query",
                      "format": "int32",
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "type": "integer"
                    },
                    "resource": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "run.projects.locations.services.getIamPolicy",
                  "path": "v1/{+resource}:getIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:getIamPolicy",
                  "description": "Get the IAM Access Control policy currently in effect for the given Cloud Run service. This result does not include any inherited policies.",
                  "httpMethod": "GET"
                },
                "create": {
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "Service"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/services",
                  "id": "run.projects.locations.services.create",
                  "path": "v1/{+parent}/services",
                  "request": {
                    "$ref": "Service"
                  },
                  "parameters": {
                    "parent": {
                      "description": "The namespace in which the service should be created. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Create a service."
                },
                "get": {
                  "id": "run.projects.locations.services.get",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the service to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Service"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "description": "Get information about a service.",
                  "path": "v1/{+name}"
                },
                "replaceService": {
                  "id": "run.projects.locations.services.replaceService",
                  "description": "Replace a service. Only the spec and metadata labels and annotations are modifiable. After the Update request, Cloud Run will work to make the 'status' match the requested 'spec'. May provide metadata.resourceVersion to enforce update from last read for optimistic concurrency control.",
                  "request": {
                    "$ref": "Service"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the service being replaced. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Service"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "httpMethod": "PUT",
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "testIamPermissions": {
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "description": "Returns permissions that a caller has on the specified Project. There are no permissions required for making this API call.",
                  "httpMethod": "POST",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "type": "string",
                      "required": true
                    }
                  },
                  "path": "v1/{+resource}:testIamPermissions",
                  "id": "run.projects.locations.services.testIamPermissions",
                  "parameterOrder": [
                    "resource"
                  ]
                },
                "delete": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Status"
                  },
                  "parameters": {
                    "apiVersion": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "location": "query",
                      "type": "string"
                    },
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "required": true,
                      "description": "The name of the service to delete. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string",
                      "location": "query"
                    },
                    "propagationPolicy": {
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "id": "run.projects.locations.services.delete",
                  "path": "v1/{+name}",
                  "description": "Delete a service. This will cause the Service to stop serving traffic and will delete the child entities like Routes, Configurations and Revisions."
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/services/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field."
                    }
                  },
                  "parameterOrder": [
                    "resource"
                  ],
                  "httpMethod": "POST",
                  "id": "run.projects.locations.services.setIamPolicy",
                  "description": "Sets the IAM Access control policy for the specified Service. Overwrites any existing policy.",
                  "response": {
                    "$ref": "Policy"
                  },
                  "path": "v1/{+resource}:setIamPolicy",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/services/{servicesId}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                }
              }
            },
            "routes": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List routes.",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/routes",
                  "path": "v1/{+parent}/routes",
                  "parameters": {
                    "limit": {
                      "format": "int32",
                      "description": "The maximum number of records that should be returned.",
                      "type": "integer",
                      "location": "query"
                    },
                    "continue": {
                      "location": "query",
                      "description": "Optional encoded string to continue paging.",
                      "type": "string"
                    },
                    "parent": {
                      "description": "The namespace from which the routes should be listed. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "includeUninitialized": {
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "labelSelector": {
                      "type": "string",
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "location": "query"
                    },
                    "watch": {
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "type": "boolean",
                      "location": "query"
                    },
                    "fieldSelector": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                    },
                    "resourceVersion": {
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListRoutesResponse"
                  },
                  "id": "run.projects.locations.routes.list"
                },
                "get": {
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/routes/{routesId}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "Route"
                  },
                  "parameters": {
                    "name": {
                      "description": "The name of the route to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/routes/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "run.projects.locations.routes.get",
                  "description": "Get information about a route."
                }
              }
            },
            "revisions": {
              "methods": {
                "get": {
                  "path": "v1/{+name}",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "description": "The name of the revision to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/revisions/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "response": {
                    "$ref": "Revision"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/revisions/{revisionsId}",
                  "httpMethod": "GET",
                  "description": "Get information about a revision.",
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "run.projects.locations.revisions.get"
                },
                "delete": {
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "DELETE",
                  "path": "v1/{+name}",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "The name of the revision to delete. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/revisions/[^/]+$"
                    },
                    "apiVersion": {
                      "location": "query",
                      "description": "Cloud Run currently ignores this parameter.",
                      "type": "string"
                    },
                    "propagationPolicy": {
                      "type": "string",
                      "description": "Specifies the propagation policy of delete. Cloud Run currently ignores this setting, and deletes in the background. Please see kubernetes.io/docs/concepts/workloads/controllers/garbage-collection/ for more information.",
                      "location": "query"
                    },
                    "kind": {
                      "type": "string",
                      "description": "Cloud Run currently ignores this parameter.",
                      "location": "query"
                    }
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/revisions/{revisionsId}",
                  "description": "Delete a revision.",
                  "response": {
                    "$ref": "Status"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "id": "run.projects.locations.revisions.delete"
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "List revisions.",
                  "httpMethod": "GET",
                  "path": "v1/{+parent}/revisions",
                  "id": "run.projects.locations.revisions.list",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/revisions",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "The namespace from which the revisions should be listed. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$"
                    },
                    "labelSelector": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn."
                    },
                    "limit": {
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32",
                      "type": "integer",
                      "location": "query"
                    },
                    "fieldSelector": {
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run.",
                      "type": "string"
                    },
                    "includeUninitialized": {
                      "type": "boolean",
                      "description": "Not currently used by Cloud Run.",
                      "location": "query"
                    },
                    "continue": {
                      "type": "string",
                      "description": "Optional encoded string to continue paging.",
                      "location": "query"
                    },
                    "resourceVersion": {
                      "location": "query",
                      "type": "string",
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                    },
                    "watch": {
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "type": "boolean",
                      "location": "query"
                    }
                  },
                  "response": {
                    "$ref": "ListRevisionsResponse"
                  }
                }
              }
            },
            "configurations": {
              "methods": {
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "run.projects.locations.configurations.list",
                  "description": "List configurations.",
                  "path": "v1/{+parent}/configurations",
                  "response": {
                    "$ref": "ListConfigurationsResponse"
                  },
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/configurations",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "limit": {
                      "description": "The maximum number of records that should be returned.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "continue": {
                      "location": "query",
                      "description": "Optional encoded string to continue paging.",
                      "type": "string"
                    },
                    "labelSelector": {
                      "description": "Allows to filter resources based on a label. Supported operations are =, !=, exists, in, and notIn.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "description": "The namespace from which the configurations should be listed. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number.",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string"
                    },
                    "fieldSelector": {
                      "type": "string",
                      "location": "query",
                      "description": "Allows to filter resources based on a specific value for a field name. Send this in a query string format. i.e. 'metadata.name%3Dlorem'. Not currently used by Cloud Run."
                    },
                    "watch": {
                      "location": "query",
                      "description": "Flag that indicates that the client expects to watch this resource as well. Not currently used by Cloud Run.",
                      "type": "boolean"
                    },
                    "resourceVersion": {
                      "type": "string",
                      "location": "query",
                      "description": "The baseline resource version from which the list or watch operation should start. Not currently used by Cloud Run."
                    },
                    "includeUninitialized": {
                      "location": "query",
                      "description": "Not currently used by Cloud Run.",
                      "type": "boolean"
                    }
                  }
                },
                "get": {
                  "parameterOrder": [
                    "name"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1/projects/{projectsId}/locations/{locationsId}/configurations/{configurationsId}",
                  "id": "run.projects.locations.configurations.get",
                  "parameters": {
                    "name": {
                      "required": true,
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/configurations/[^/]+$",
                      "type": "string",
                      "description": "The name of the configuration to retrieve. For Cloud Run (fully managed), replace {namespace_id} with the project ID or number."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1/{+name}",
                  "description": "Get information about a configuration.",
                  "response": {
                    "$ref": "Configuration"
                  }
                }
              }
            }
          },
          "methods": {
            "list": {
              "flatPath": "v1/projects/{projectsId}/locations",
              "description": "Lists information about the supported locations for this service.",
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "description": "The standard list page token.",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The standard list page size.",
                  "location": "query",
                  "format": "int32"
                },
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^projects/[^/]+$",
                  "description": "The resource that owns the locations collection, if applicable.",
                  "location": "path"
                },
                "filter": {
                  "description": "The standard list filter.",
                  "type": "string",
                  "location": "query"
                }
              },
              "id": "run.projects.locations.list",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1/{+name}/locations",
              "httpMethod": "GET"
            }
          }
        }
      }
    }
  },
  "ownerDomain": "google.com",
  "batchPath": "batch",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "rootUrl": "https://run.googleapis.com/",
  "documentationLink": "https://cloud.google.com/run/",
  "ownerName": "Google",
  "version": "v1",
  "name": "run",
  "revision": "20201113",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "title": "Cloud Run Admin API"
}
