{
  "discoveryVersion": "v1",
  "name": "tasks",
  "canonicalName": "Tasks",
  "basePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/tasks": {
          "description": "Create, edit, organize, and delete all your tasks"
        },
        "https://www.googleapis.com/auth/tasks.readonly": {
          "description": "View your tasks"
        }
      }
    }
  },
  "schemas": {
    "Tasks": {
      "properties": {
        "kind": {
          "description": "Type of the resource. This is always \"tasks#tasks\".",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Task"
          },
          "description": "Collection of tasks."
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token used to access the next page of this result."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        }
      },
      "type": "object",
      "id": "Tasks"
    },
    "TaskList": {
      "properties": {
        "title": {
          "type": "string",
          "description": "Title of the task list."
        },
        "updated": {
          "type": "string",
          "description": "Last modification time of the task list (as a RFC 3339 timestamp)."
        },
        "selfLink": {
          "type": "string",
          "description": "URL pointing to this task list. Used to retrieve, update, or delete this task list."
        },
        "etag": {
          "description": "ETag of the resource.",
          "type": "string"
        },
        "kind": {
          "description": "Type of the resource. This is always \"tasks#taskList\".",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Task list identifier."
        }
      },
      "id": "TaskList",
      "type": "object"
    },
    "Task": {
      "properties": {
        "notes": {
          "type": "string",
          "description": "Notes describing the task. Optional."
        },
        "parent": {
          "description": "Parent task identifier. This field is omitted if it is a top-level task. This field is read-only. Use the \"move\" method to move the task under a different parent or to the top level.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        },
        "id": {
          "description": "Task identifier.",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Type of the resource. This is always \"tasks#task\"."
        },
        "status": {
          "description": "Status of the task. This is either \"needsAction\" or \"completed\".",
          "type": "string"
        },
        "title": {
          "description": "Title of the task.",
          "type": "string"
        },
        "deleted": {
          "description": "Flag indicating whether the task has been deleted. The default is False.",
          "type": "boolean"
        },
        "links": {
          "items": {
            "type": "object",
            "properties": {
              "description": {
                "description": "The description. In HTML speak: Everything between \u003ca\u003e and \u003c/a\u003e.",
                "type": "string"
              },
              "link": {
                "description": "The URL.",
                "type": "string"
              },
              "type": {
                "description": "Type of the link, e.g. \"email\".",
                "type": "string"
              }
            }
          },
          "description": "Collection of links. This collection is read-only.",
          "type": "array"
        },
        "position": {
          "type": "string",
          "description": "String indicating the position of the task among its sibling tasks under the same parent task or at the top level. If this string is greater than another task's corresponding position string according to lexicographical ordering, the task is positioned after the other task under the same parent task (or at the top level). This field is read-only. Use the \"move\" method to move the task to another position."
        },
        "completed": {
          "description": "Completion date of the task (as a RFC 3339 timestamp). This field is omitted if the task has not been completed.",
          "type": "string"
        },
        "due": {
          "description": "Due date of the task (as a RFC 3339 timestamp). Optional. The due date only records date information; the time portion of the timestamp is discarded when setting the due date. It isn't possible to read or write the time that a task is due via the API.",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Last modification time of the task (as a RFC 3339 timestamp)."
        },
        "hidden": {
          "type": "boolean",
          "description": "Flag indicating whether the task is hidden. This is the case if the task had been marked completed when the task list was last cleared. The default is False. This field is read-only."
        },
        "selfLink": {
          "description": "URL pointing to this task. Used to retrieve, update, or delete this task.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Task"
    },
    "TaskLists": {
      "id": "TaskLists",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Type of the resource. This is always \"tasks#taskLists\"."
        },
        "items": {
          "items": {
            "$ref": "TaskList"
          },
          "description": "Collection of task lists.",
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token that can be used to request the next page of this result."
        },
        "etag": {
          "type": "string",
          "description": "ETag of the resource."
        }
      },
      "type": "object"
    }
  },
  "baseUrl": "https://tasks.googleapis.com/",
  "resources": {
    "tasks": {
      "methods": {
        "get": {
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "response": {
            "$ref": "Task"
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "parameters": {
            "task": {
              "description": "Task identifier.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "tasklist": {
              "required": true,
              "type": "string",
              "description": "Task list identifier.",
              "location": "path"
            }
          },
          "id": "tasks.tasks.get",
          "httpMethod": "GET",
          "description": "Returns the specified task."
        },
        "delete": {
          "id": "tasks.tasks.delete",
          "description": "Deletes the specified task from the task list.",
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "parameters": {
            "tasklist": {
              "description": "Task list identifier.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "task": {
              "type": "string",
              "required": true,
              "location": "path",
              "description": "Task identifier."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "httpMethod": "DELETE"
        },
        "list": {
          "parameters": {
            "updatedMin": {
              "description": "Lower bound for a task's last modification time (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by last modification time.",
              "location": "query",
              "type": "string"
            },
            "completedMax": {
              "location": "query",
              "description": "Upper bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.",
              "type": "string"
            },
            "tasklist": {
              "type": "string",
              "description": "Task list identifier.",
              "location": "path",
              "required": true
            },
            "pageToken": {
              "location": "query",
              "description": "Token specifying the result page to return. Optional.",
              "type": "string"
            },
            "dueMin": {
              "type": "string",
              "description": "Lower bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.",
              "location": "query"
            },
            "showHidden": {
              "type": "boolean",
              "description": "Flag indicating whether hidden tasks are returned in the result. Optional. The default is False.",
              "location": "query"
            },
            "completedMin": {
              "type": "string",
              "description": "Lower bound for a task's completion date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by completion date.",
              "location": "query"
            },
            "dueMax": {
              "description": "Upper bound for a task's due date (as a RFC 3339 timestamp) to filter by. Optional. The default is not to filter by due date.",
              "type": "string",
              "location": "query"
            },
            "showDeleted": {
              "type": "boolean",
              "description": "Flag indicating whether deleted tasks are returned in the result. Optional. The default is False.",
              "location": "query"
            },
            "maxResults": {
              "format": "int32",
              "description": "Maximum number of task lists returned on one page. Optional. The default is 20 (max allowed: 100).",
              "location": "query",
              "type": "integer"
            },
            "showCompleted": {
              "description": "Flag indicating whether completed tasks are returned in the result. Optional. The default is True. Note that showHidden must also be True to show tasks completed in first party clients, such as the web UI and Google's mobile apps.",
              "location": "query",
              "type": "boolean"
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [
            "tasklist"
          ],
          "description": "Returns all tasks in the specified task list.",
          "path": "tasks/v1/lists/{tasklist}/tasks",
          "response": {
            "$ref": "Tasks"
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "id": "tasks.tasks.list",
          "flatPath": "tasks/v1/lists/{tasklist}/tasks"
        },
        "move": {
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}/move",
          "httpMethod": "POST",
          "id": "tasks.tasks.move",
          "description": "Moves the specified task to another position in the task list. This can include putting it as a child task under a new parent and/or move it to a different position among its sibling tasks.",
          "parameters": {
            "tasklist": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Task list identifier."
            },
            "parent": {
              "location": "query",
              "description": "New parent task identifier. If the task is moved to the top level, this parameter is omitted. Optional.",
              "type": "string"
            },
            "previous": {
              "location": "query",
              "description": "New previous sibling task identifier. If the task is moved to the first position among its siblings, this parameter is omitted. Optional.",
              "type": "string"
            },
            "task": {
              "required": true,
              "description": "Task identifier.",
              "location": "path",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}/move",
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "response": {
            "$ref": "Task"
          }
        },
        "clear": {
          "id": "tasks.tasks.clear",
          "description": "Clears all completed tasks from the specified task list. The affected tasks will be marked as 'hidden' and no longer be returned by default when retrieving all tasks for a task list.",
          "httpMethod": "POST",
          "flatPath": "tasks/v1/lists/{tasklist}/clear",
          "path": "tasks/v1/lists/{tasklist}/clear",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "parameterOrder": [
            "tasklist"
          ],
          "parameters": {
            "tasklist": {
              "type": "string",
              "location": "path",
              "description": "Task list identifier.",
              "required": true
            }
          }
        },
        "insert": {
          "path": "tasks/v1/lists/{tasklist}/tasks",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "flatPath": "tasks/v1/lists/{tasklist}/tasks",
          "description": "Creates a new task on the specified task list.",
          "parameters": {
            "parent": {
              "description": "Parent task identifier. If the task is created at the top level, this parameter is omitted. Optional.",
              "type": "string",
              "location": "query"
            },
            "tasklist": {
              "required": true,
              "description": "Task list identifier.",
              "location": "path",
              "type": "string"
            },
            "previous": {
              "description": "Previous sibling task identifier. If the task is created at the first position among its siblings, this parameter is omitted. Optional.",
              "type": "string",
              "location": "query"
            }
          },
          "id": "tasks.tasks.insert",
          "parameterOrder": [
            "tasklist"
          ],
          "response": {
            "$ref": "Task"
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "Task"
          }
        },
        "update": {
          "response": {
            "$ref": "Task"
          },
          "request": {
            "$ref": "Task"
          },
          "httpMethod": "PUT",
          "id": "tasks.tasks.update",
          "description": "Updates the specified task.",
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "parameters": {
            "tasklist": {
              "type": "string",
              "location": "path",
              "description": "Task list identifier.",
              "required": true
            },
            "task": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Task identifier."
            }
          }
        },
        "patch": {
          "parameters": {
            "tasklist": {
              "description": "Task list identifier.",
              "location": "path",
              "required": true,
              "type": "string"
            },
            "task": {
              "required": true,
              "location": "path",
              "description": "Task identifier.",
              "type": "string"
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "flatPath": "tasks/v1/lists/{tasklist}/tasks/{task}",
          "id": "tasks.tasks.patch",
          "httpMethod": "PATCH",
          "description": "Updates the specified task. This method supports patch semantics.",
          "response": {
            "$ref": "Task"
          },
          "parameterOrder": [
            "tasklist",
            "task"
          ],
          "request": {
            "$ref": "Task"
          },
          "path": "tasks/v1/lists/{tasklist}/tasks/{task}"
        }
      }
    },
    "tasklists": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "description": "Returns the authenticated user's specified task list.",
          "path": "tasks/v1/users/@me/lists/{tasklist}",
          "parameterOrder": [
            "tasklist"
          ],
          "id": "tasks.tasklists.get",
          "parameters": {
            "tasklist": {
              "location": "path",
              "required": true,
              "description": "Task list identifier.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "TaskList"
          }
        },
        "delete": {
          "id": "tasks.tasklists.delete",
          "httpMethod": "DELETE",
          "path": "tasks/v1/users/@me/lists/{tasklist}",
          "description": "Deletes the authenticated user's specified task list.",
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "parameterOrder": [
            "tasklist"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "parameters": {
            "tasklist": {
              "required": true,
              "type": "string",
              "description": "Task list identifier.",
              "location": "path"
            }
          }
        },
        "update": {
          "id": "tasks.tasklists.update",
          "httpMethod": "PUT",
          "request": {
            "$ref": "TaskList"
          },
          "path": "tasks/v1/users/@me/lists/{tasklist}",
          "parameters": {
            "tasklist": {
              "required": true,
              "location": "path",
              "type": "string",
              "description": "Task list identifier."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "description": "Updates the authenticated user's specified task list.",
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "parameterOrder": [
            "tasklist"
          ],
          "response": {
            "$ref": "TaskList"
          }
        },
        "patch": {
          "response": {
            "$ref": "TaskList"
          },
          "parameterOrder": [
            "tasklist"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "request": {
            "$ref": "TaskList"
          },
          "path": "tasks/v1/users/@me/lists/{tasklist}",
          "httpMethod": "PATCH",
          "id": "tasks.tasklists.patch",
          "description": "Updates the authenticated user's specified task list. This method supports patch semantics.",
          "flatPath": "tasks/v1/users/@me/lists/{tasklist}",
          "parameters": {
            "tasklist": {
              "required": true,
              "description": "Task list identifier.",
              "location": "path",
              "type": "string"
            }
          }
        },
        "insert": {
          "description": "Creates a new task list and adds it to the authenticated user's task lists.",
          "parameters": {},
          "response": {
            "$ref": "TaskList"
          },
          "parameterOrder": [],
          "path": "tasks/v1/users/@me/lists",
          "httpMethod": "POST",
          "flatPath": "tasks/v1/users/@me/lists",
          "scopes": [
            "https://www.googleapis.com/auth/tasks"
          ],
          "request": {
            "$ref": "TaskList"
          },
          "id": "tasks.tasklists.insert"
        },
        "list": {
          "id": "tasks.tasklists.list",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/tasks",
            "https://www.googleapis.com/auth/tasks.readonly"
          ],
          "description": "Returns all the authenticated user's task lists.",
          "flatPath": "tasks/v1/users/@me/lists",
          "parameterOrder": [],
          "response": {
            "$ref": "TaskLists"
          },
          "parameters": {
            "pageToken": {
              "description": "Token specifying the result page to return. Optional.",
              "type": "string",
              "location": "query"
            },
            "maxResults": {
              "format": "int32",
              "location": "query",
              "description": "Maximum number of task lists returned on one page. Optional. The default is 20 (max allowed: 100).",
              "type": "integer"
            }
          },
          "path": "tasks/v1/users/@me/lists"
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "revision": "20210109",
  "rootUrl": "https://tasks.googleapis.com/",
  "protocol": "rest",
  "parameters": {
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "type": "string",
      "location": "query"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "$.xgafv": {
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "upload_protocol": {
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "description": "Data format for response.",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "default": "json"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    }
  },
  "servicePath": "",
  "ownerName": "Google",
  "title": "Tasks API",
  "batchPath": "batch",
  "ownerDomain": "google.com",
  "documentationLink": "",
  "mtlsRootUrl": "https://tasks.mtls.googleapis.com/",
  "version": "v1",
  "kind": "discovery#restDescription",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "id": "tasks:v1",
  "description": "The Google Tasks API lets you manage your tasks and task lists."
}
