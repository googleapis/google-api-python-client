{
  "kind": "discovery#restDescription",
  "name": "books",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "version_module": true,
  "description": "The Google Books API allows clients to access the Google Books repository.",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/books": {
          "description": "Manage your books"
        }
      }
    }
  },
  "ownerName": "Google",
  "rootUrl": "https://books.googleapis.com/",
  "title": "Books API",
  "revision": "20201021",
  "servicePath": "",
  "ownerDomain": "google.com",
  "documentationLink": "https://code.google.com/apis/books/docs/v1/getting_started.html",
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "id": "books:v1",
  "basePath": "",
  "protocol": "rest",
  "mtlsRootUrl": "https://books.mtls.googleapis.com/",
  "schemas": {
    "FamilyInfo": {
      "id": "FamilyInfo",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "membership": {
          "description": "Family membership info of the user that made the request.",
          "type": "object",
          "properties": {
            "ageGroup": {
              "type": "string",
              "description": "The age group of the user."
            },
            "acquirePermission": {
              "description": "Restrictions on user buying and acquiring content.",
              "type": "string"
            },
            "isInFamily": {
              "type": "boolean"
            },
            "allowedMaturityRating": {
              "type": "string",
              "description": "The maximum allowed maturity rating for the user."
            },
            "role": {
              "type": "string",
              "description": "The role of the user in the family."
            }
          }
        }
      },
      "type": "object"
    },
    "Bookshelf": {
      "id": "Bookshelf",
      "properties": {
        "volumesLastUpdated": {
          "description": "Last time a volume was added or removed from this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "access": {
          "type": "string",
          "description": "Whether this bookshelf is PUBLIC or PRIVATE."
        },
        "volumeCount": {
          "format": "int32",
          "description": "Number of volumes in this bookshelf.",
          "type": "integer"
        },
        "id": {
          "format": "int32",
          "type": "integer",
          "description": "Id of this bookshelf, only unique by user."
        },
        "description": {
          "type": "string",
          "description": "Description of this bookshelf."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "title": {
          "description": "Title of this bookshelf.",
          "type": "string"
        },
        "updated": {
          "description": "Last modified time of this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "created": {
          "description": "Created time for this bookshelf (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "kind": {
          "type": "string",
          "description": "Resource type for bookshelf metadata."
        }
      },
      "type": "object"
    },
    "Metadata": {
      "type": "object",
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of offline dictionary metadata.",
          "items": {
            "properties": {
              "version": {
                "type": "string",
                "format": "int64"
              },
              "size": {
                "type": "string",
                "format": "int64"
              },
              "encrypted_key": {
                "type": "string"
              },
              "download_url": {
                "type": "string"
              },
              "language": {
                "type": "string"
              }
            },
            "type": "object"
          }
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Metadata"
    },
    "Offers": {
      "properties": {
        "items": {
          "items": {
            "properties": {
              "items": {
                "items": {
                  "properties": {
                    "coverUrl": {
                      "type": "string"
                    },
                    "canonicalVolumeLink": {
                      "type": "string"
                    },
                    "volumeId": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "title": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "type": "array"
              },
              "id": {
                "type": "string"
              },
              "artUrl": {
                "type": "string"
              },
              "gservicesKey": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of offers."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "type": "object",
      "id": "Offers"
    },
    "Review": {
      "id": "Review",
      "properties": {
        "date": {
          "type": "string",
          "description": "Date of this review."
        },
        "kind": {
          "description": "Resource type for a review.",
          "type": "string"
        },
        "author": {
          "description": "Author of this review.",
          "properties": {
            "displayName": {
              "description": "Name of this person.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "type": {
          "type": "string",
          "description": "Source type for this review. Possible values are EDITORIAL, WEB_USER or GOOGLE_USER."
        },
        "rating": {
          "type": "string",
          "description": "Star rating for this review. Possible values are ONE, TWO, THREE, FOUR, FIVE or NOT_RATED."
        },
        "title": {
          "type": "string",
          "description": "Title for this review."
        },
        "fullTextUrl": {
          "type": "string",
          "description": "URL for the full review text, for reviews gathered from the web."
        },
        "volumeId": {
          "type": "string",
          "description": "Volume that this review is for."
        },
        "content": {
          "type": "string",
          "description": "Review text."
        },
        "source": {
          "properties": {
            "description": {
              "type": "string",
              "description": "Name of the source."
            },
            "url": {
              "type": "string",
              "description": "URL of the source of the review."
            },
            "extraDescription": {
              "description": "Extra text about the source of the review.",
              "type": "string"
            }
          },
          "type": "object",
          "description": "Information regarding the source of this review, when the review is not from a Google Books user."
        }
      },
      "type": "object"
    },
    "Bookshelves": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "items": {
          "description": "A list of bookshelves.",
          "type": "array",
          "items": {
            "$ref": "Bookshelf"
          }
        }
      },
      "id": "Bookshelves",
      "type": "object"
    },
    "RequestAccessData": {
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "downloadAccess": {
          "description": "A download access response.",
          "$ref": "DownloadAccessRestriction"
        },
        "concurrentAccess": {
          "description": "A concurrent access response.",
          "$ref": "ConcurrentAccessRestriction"
        }
      },
      "id": "RequestAccessData",
      "type": "object"
    },
    "Category": {
      "properties": {
        "items": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "categoryId": {
                "type": "string"
              },
              "badgeUrl": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            }
          },
          "description": "A list of onboarding categories."
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        }
      },
      "id": "Category",
      "type": "object"
    },
    "Series": {
      "type": "object",
      "id": "Series",
      "properties": {
        "series": {
          "items": {
            "type": "object",
            "properties": {
              "subscriptionId": {
                "type": "string"
              },
              "title": {
                "type": "string"
              },
              "imageUrl": {
                "type": "string"
              },
              "seriesId": {
                "type": "string"
              },
              "isComplete": {
                "type": "boolean"
              },
              "seriesSubscriptionReleaseInfo": {
                "type": "object",
                "properties": {
                  "seriesSubscriptionType": {
                    "type": "string"
                  },
                  "nextReleaseInfo": {
                    "properties": {
                      "amountInMicros": {
                        "type": "number",
                        "format": "double"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      }
                    },
                    "type": "object"
                  },
                  "currentReleaseInfo": {
                    "properties": {
                      "currencyCode": {
                        "type": "string"
                      },
                      "releaseTime": {
                        "type": "string"
                      },
                      "releaseNumber": {
                        "type": "string"
                      },
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "cancelTime": {
                    "type": "string"
                  }
                }
              },
              "eligibleForSubscription": {
                "type": "boolean"
              },
              "seriesType": {
                "type": "string"
              },
              "seriesFormatType": {
                "type": "string"
              },
              "bannerImageUrl": {
                "type": "string"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      }
    },
    "ReadingPosition": {
      "id": "ReadingPosition",
      "properties": {
        "kind": {
          "description": "Resource type for a reading position.",
          "type": "string"
        },
        "gbTextPosition": {
          "type": "string",
          "description": "Position in a volume for text-based content."
        },
        "volumeId": {
          "type": "string",
          "description": "Volume id associated with this reading position."
        },
        "epubCfiPosition": {
          "description": "Position in an EPUB as a CFI.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp when this reading position was last updated (formatted UTC timestamp with millisecond resolution).",
          "type": "string"
        },
        "pdfPosition": {
          "type": "string",
          "description": "Position in a PDF file."
        },
        "gbImagePosition": {
          "description": "Position in a volume for image-based content.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "DictionaryAnnotationdata": {
      "type": "object",
      "id": "DictionaryAnnotationdata",
      "properties": {
        "encodedData": {
          "format": "byte",
          "type": "string",
          "description": "Base64 encoded data for this annotation data."
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "layerId": {
          "description": "The Layer id for this data. *",
          "type": "string"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "id": {
          "type": "string",
          "description": "Unique id for this annotation data."
        },
        "data": {
          "description": "JSON encoded data for this dictionary annotation data. Emitted with name 'data' in JSON output. Either this or geo_data will be populated.",
          "$ref": "Dictlayerdata"
        },
        "volumeId": {
          "description": "The volume id for this data. *",
          "type": "string"
        }
      }
    },
    "Notification": {
      "type": "object",
      "id": "Notification",
      "properties": {
        "is_document_mature": {
          "type": "boolean"
        },
        "iconUrl": {
          "type": "string"
        },
        "pcampaign_id": {
          "type": "string"
        },
        "dont_show_notification": {
          "type": "boolean"
        },
        "reason": {
          "type": "string"
        },
        "notification_type": {
          "type": "string"
        },
        "crmExperimentIds": {
          "items": {
            "format": "int64",
            "type": "string"
          },
          "type": "array",
          "description": "The list of crm experiment ids."
        },
        "doc_type": {
          "type": "string"
        },
        "timeToExpireMs": {
          "type": "string",
          "format": "int64"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "notificationGroup": {
          "type": "string"
        },
        "body": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "targetUrl": {
          "type": "string"
        },
        "doc_id": {
          "type": "string"
        },
        "show_notification_settings_action": {
          "type": "boolean"
        }
      }
    },
    "Volumes": {
      "properties": {
        "items": {
          "type": "array",
          "description": "A list of volumes.",
          "items": {
            "$ref": "Volume"
          }
        },
        "totalItems": {
          "type": "integer",
          "description": "Total number of volumes found. This might be greater than the number of volumes returned in this response if results have been paginated.",
          "format": "int32"
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Volumes"
    },
    "GeoAnnotationdata": {
      "properties": {
        "encodedData": {
          "description": "Base64 encoded data for this annotation data.",
          "format": "byte",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this data was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "id": {
          "description": "Unique id for this annotation data.",
          "type": "string"
        },
        "data": {
          "description": "JSON encoded data for this geo annotation data. Emitted with name 'data' in JSON output. Either this or dict_data will be populated.",
          "$ref": "Geolayerdata"
        },
        "annotationType": {
          "description": "The type of annotation this data is for.",
          "type": "string"
        },
        "selfLink": {
          "description": "URL for this resource. *",
          "type": "string"
        },
        "layerId": {
          "type": "string",
          "description": "The Layer id for this data. *"
        },
        "volumeId": {
          "type": "string",
          "description": "The volume id for this data. *"
        },
        "kind": {
          "type": "string",
          "description": "Resource Type"
        }
      },
      "id": "GeoAnnotationdata",
      "type": "object"
    },
    "Volume2": {
      "type": "object",
      "id": "Volume2",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Volume"
          },
          "description": "A list of volumes."
        }
      }
    },
    "AnnotationsSummary": {
      "type": "object",
      "properties": {
        "layers": {
          "items": {
            "type": "object",
            "properties": {
              "updated": {
                "type": "string"
              },
              "layerId": {
                "type": "string"
              },
              "limitType": {
                "type": "string"
              },
              "remainingCharacterCount": {
                "format": "int32",
                "type": "integer"
              },
              "allowedCharacterCount": {
                "format": "int32",
                "type": "integer"
              }
            }
          },
          "type": "array"
        },
        "kind": {
          "type": "string"
        }
      },
      "id": "AnnotationsSummary"
    },
    "DownloadAccessRestriction": {
      "properties": {
        "deviceAllowed": {
          "description": "If restricted, whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "downloadsAcquired": {
          "type": "integer",
          "description": "If restricted, the number of content download licenses already acquired (including the requesting client, if licensed).",
          "format": "int32"
        },
        "justAcquired": {
          "type": "boolean",
          "description": "If deviceAllowed, whether access was just acquired with this request."
        },
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "maxDownloadDevices": {
          "description": "If restricted, the maximum number of content download licenses for this volume.",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any download access restrictions."
        },
        "reasonCode": {
          "description": "Error/warning reason code. Additional codes may be added in the future. 0 OK 100 ACCESS_DENIED_PUBLISHER_LIMIT 101 ACCESS_DENIED_LIMIT 200 WARNING_USED_LAST_ACCESS",
          "type": "string"
        },
        "volumeId": {
          "type": "string",
          "description": "Identifies the volume for which this entry applies."
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and client-validation only."
        },
        "message": {
          "description": "Error/warning message.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "DownloadAccessRestriction"
    },
    "ConcurrentAccessRestriction": {
      "properties": {
        "signature": {
          "description": "Response signature.",
          "type": "string"
        },
        "message": {
          "type": "string",
          "description": "Error/warning message."
        },
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "maxConcurrentDevices": {
          "description": "The maximum number of concurrent access licenses for this volume.",
          "type": "integer",
          "format": "int32"
        },
        "nonce": {
          "description": "Client nonce for verification. Download access and client-validation only.",
          "type": "string"
        },
        "restricted": {
          "type": "boolean",
          "description": "Whether this volume has any concurrent access restrictions."
        },
        "source": {
          "type": "string",
          "description": "Client app identifier for verification. Download access and client-validation only."
        },
        "reasonCode": {
          "description": "Error/warning reason code.",
          "type": "string"
        },
        "deviceAllowed": {
          "description": "Whether access is granted for this (user, device, volume).",
          "type": "boolean"
        },
        "timeWindowSeconds": {
          "description": "Time in seconds for license auto-expiration.",
          "type": "integer",
          "format": "int32"
        },
        "volumeId": {
          "description": "Identifies the volume for which this entry applies.",
          "type": "string"
        }
      },
      "id": "ConcurrentAccessRestriction",
      "type": "object"
    },
    "Annotation": {
      "properties": {
        "layerSummary": {
          "properties": {
            "limitType": {
              "description": "Type of limitation on this layer. \"limited\" or \"unlimited\" for the \"copy\" layer.",
              "type": "string"
            },
            "allowedCharacterCount": {
              "format": "int32",
              "description": "Maximum allowed characters on this layer, especially for the \"copy\" layer.",
              "type": "integer"
            },
            "remainingCharacterCount": {
              "description": "Remaining allowed characters on this layer, especially for the \"copy\" layer.",
              "type": "integer",
              "format": "int32"
            }
          },
          "type": "object"
        },
        "created": {
          "description": "Timestamp for the created time of this annotation.",
          "type": "string"
        },
        "currentVersionRanges": {
          "properties": {
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "description": "Range in GB image format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "imageCfiRange": {
              "description": "Range in image CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version applicable to ranges below."
            }
          },
          "type": "object",
          "description": "Selection ranges for the most recent content version."
        },
        "highlightStyle": {
          "description": "The highlight style for this annotation.",
          "type": "string"
        },
        "selectedText": {
          "type": "string",
          "description": "Excerpt from the volume."
        },
        "layerId": {
          "description": "The layer this annotation is for.",
          "type": "string"
        },
        "clientVersionRanges": {
          "properties": {
            "gbTextRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB text format for this annotation sent by client."
            },
            "imageCfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in image CFI format for this annotation sent by client."
            },
            "contentVersion": {
              "type": "string",
              "description": "Content version the client sent in."
            },
            "cfiRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in CFI format for this annotation sent by client."
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation sent by client."
            }
          },
          "description": "Selection ranges sent from the client.",
          "type": "object"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "afterSelectedText": {
          "description": "Anchor text after excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty.",
          "type": "string"
        },
        "beforeSelectedText": {
          "type": "string",
          "description": "Anchor text before excerpt. For requests, if the user bookmarked a screen that has no flowing text on it, then this field should be empty."
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time this annotation was modified."
        },
        "id": {
          "description": "Id of this annotation, in the form of a GUID.",
          "type": "string"
        },
        "data": {
          "type": "string",
          "description": "User-created data for this annotation."
        },
        "deleted": {
          "description": "Indicates that this annotation is deleted.",
          "type": "boolean"
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "pageIds": {
          "description": "Pages that this annotation spans.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "volumeId": {
          "description": "The volume that this annotation belongs to.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "Annotation"
    },
    "Volume": {
      "id": "Volume",
      "type": "object",
      "properties": {
        "saleInfo": {
          "properties": {
            "onSaleDate": {
              "description": "The date on which this book is available for sale.",
              "type": "string"
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this sale information is valid. (In LITE projection.)",
              "type": "string"
            },
            "offers": {
              "type": "array",
              "description": "Offers available for this volume (sales and rentals).",
              "items": {
                "properties": {
                  "retailPrice": {
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "description": "Offer retail (=discounted) price in Micros",
                    "type": "object"
                  },
                  "giftable": {
                    "description": "Indicates whether the offer is giftable.",
                    "type": "boolean"
                  },
                  "finskyOfferType": {
                    "description": "The finsky offer type (e.g., PURCHASE=0 RENTAL=3)",
                    "format": "int32",
                    "type": "integer"
                  },
                  "rentalDuration": {
                    "properties": {
                      "unit": {
                        "type": "string"
                      },
                      "count": {
                        "format": "double",
                        "type": "number"
                      }
                    },
                    "description": "The rental duration (for rental offers only).",
                    "type": "object"
                  },
                  "listPrice": {
                    "properties": {
                      "amountInMicros": {
                        "format": "double",
                        "type": "number"
                      },
                      "currencyCode": {
                        "type": "string"
                      }
                    },
                    "description": "Offer list (=undiscounted) price in Micros.",
                    "type": "object"
                  }
                },
                "type": "object"
              }
            },
            "buyLink": {
              "description": "URL to purchase this volume on the Google Books site. (In LITE projection)",
              "type": "string"
            },
            "saleability": {
              "description": "Whether or not this book is available for sale or offered for free in the Google eBookstore for the country listed above. Possible values are FOR_SALE, FOR_RENTAL_ONLY, FOR_SALE_AND_RENTAL, FREE, NOT_FOR_SALE, or FOR_PREORDER.",
              "type": "string"
            },
            "retailPrice": {
              "type": "object",
              "description": "The actual selling price of the book. This is the same as the suggested retail or list price unless there are offers or discounts on this volume. (In LITE projection.)",
              "properties": {
                "amount": {
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "format": "double",
                  "type": "number"
                },
                "currencyCode": {
                  "type": "string",
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)"
                }
              }
            },
            "isEbook": {
              "type": "boolean",
              "description": "Whether or not this volume is an eBook (can be added to the My eBooks shelf)."
            },
            "listPrice": {
              "type": "object",
              "properties": {
                "currencyCode": {
                  "description": "An ISO 4217, three-letter currency code. (In LITE projection.)",
                  "type": "string"
                },
                "amount": {
                  "description": "Amount in the currency listed below. (In LITE projection.)",
                  "format": "double",
                  "type": "number"
                }
              },
              "description": "Suggested retail price. (In LITE projection.)"
            }
          },
          "description": "Any information about a volume related to the eBookstore and/or purchaseability. This information can depend on the country where the request originates from (i.e. books may not be for sale in certain countries).",
          "type": "object"
        },
        "layerInfo": {
          "type": "object",
          "description": "What layers exist in this volume and high level information about them.",
          "properties": {
            "layers": {
              "type": "array",
              "description": "A layer should appear here if and only if the layer exists for this book.",
              "items": {
                "properties": {
                  "layerId": {
                    "type": "string",
                    "description": "The layer id of this layer (e.g. \"geo\")."
                  },
                  "volumeAnnotationsVersion": {
                    "type": "string",
                    "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately."
                  }
                },
                "type": "object"
              }
            }
          }
        },
        "id": {
          "description": "Unique identifier for a volume. (In LITE projection.)",
          "type": "string"
        },
        "userInfo": {
          "type": "object",
          "description": "User specific information related to this volume. (e.g. page this user last read or whether they purchased this book)",
          "properties": {
            "acquisitionType": {
              "type": "integer",
              "description": "How this volume was acquired.",
              "format": "int32"
            },
            "acquiredTime": {
              "description": "Timestamp when this volume was acquired by the user. (RFC 3339 UTC date-time format) Acquiring includes purchase, user upload, receiving family sharing, etc.",
              "type": "string"
            },
            "copy": {
              "description": "Copy/Paste accounting information.",
              "properties": {
                "remainingCharacterCount": {
                  "format": "int32",
                  "type": "integer"
                },
                "allowedCharacterCount": {
                  "type": "integer",
                  "format": "int32"
                },
                "updated": {
                  "type": "string"
                },
                "limitType": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "isFamilySharingAllowed": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "entitlementType": {
              "type": "integer",
              "format": "int32",
              "description": "Whether this volume is purchased, sample, pd download etc."
            },
            "isFamilySharedFromUser": {
              "description": "Whether or not the user shared this volume with the family.",
              "type": "boolean"
            },
            "rentalPeriod": {
              "type": "object",
              "properties": {
                "endUtcSec": {
                  "format": "int64",
                  "type": "string"
                },
                "startUtcSec": {
                  "type": "string",
                  "format": "int64"
                }
              },
              "description": "Period during this book is/was a valid rental."
            },
            "isFamilySharedToUser": {
              "description": "Whether or not the user received this volume through family sharing.",
              "type": "boolean"
            },
            "updated": {
              "description": "Timestamp when this volume was last modified by a user action, such as a reading position update, volume purchase or writing a review. (RFC 3339 UTC date-time format).",
              "type": "string"
            },
            "userUploadedVolumeInfo": {
              "properties": {
                "processingState": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "isPreordered": {
              "description": "Whether or not this volume was pre-ordered by the authenticated user making the request. (In LITE projection.)",
              "type": "boolean"
            },
            "isInMyBooks": {
              "type": "boolean",
              "description": "Whether or not this volume is currently in \"my books.\""
            },
            "familySharing": {
              "type": "object",
              "properties": {
                "familyRole": {
                  "description": "The role of the user in the family.",
                  "type": "string"
                },
                "isSharingDisabledByFop": {
                  "type": "boolean",
                  "description": "Whether or not sharing this volume is temporarily disabled due to issues with the Family Wallet."
                },
                "isSharingAllowed": {
                  "description": "Whether or not this volume can be shared with the family by the user. This includes sharing eligibility of both the volume and the user. If the value is true, the user can initiate a family sharing action.",
                  "type": "boolean"
                }
              },
              "description": "Information on the ability to share with the family."
            },
            "readingPosition": {
              "$ref": "ReadingPosition",
              "description": "The user's current reading position in the volume, if one is available. (In LITE projection.)"
            },
            "isPurchased": {
              "description": "Whether or not this volume was purchased by the authenticated user making the request. (In LITE projection.)",
              "type": "boolean"
            },
            "isFamilySharingDisabledByFop": {
              "description": "Deprecated: Replaced by familySharing.",
              "type": "boolean"
            },
            "rentalState": {
              "description": "Whether this book is an active or an expired rental.",
              "type": "string"
            },
            "isUploaded": {
              "description": "Whether or not this volume was user uploaded.",
              "type": "boolean"
            },
            "review": {
              "$ref": "Review",
              "description": "This user's review of this volume, if one exists."
            }
          }
        },
        "searchInfo": {
          "type": "object",
          "description": "Search result information related to this volume.",
          "properties": {
            "textSnippet": {
              "description": "A text snippet containing the search query.",
              "type": "string"
            }
          }
        },
        "volumeInfo": {
          "description": "General volume information.",
          "properties": {
            "allowAnonLogging": {
              "description": "Whether anonymous logging should be allowed.",
              "type": "boolean"
            },
            "printedPageCount": {
              "format": "int32",
              "description": "Total number of printed pages in generated pdf representation.",
              "type": "integer"
            },
            "publisher": {
              "description": "Publisher of this volume. (In LITE projection.)",
              "type": "string"
            },
            "printType": {
              "description": "Type of publication of this volume. Possible values are BOOK or MAGAZINE.",
              "type": "string"
            },
            "imageLinks": {
              "properties": {
                "extraLarge": {
                  "type": "string",
                  "description": "Image link for extra large size (width of ~1280 pixels). (In LITE projection)"
                },
                "thumbnail": {
                  "description": "Image link for thumbnail size (width of ~128 pixels). (In LITE projection)",
                  "type": "string"
                },
                "medium": {
                  "description": "Image link for medium size (width of ~575 pixels). (In LITE projection)",
                  "type": "string"
                },
                "small": {
                  "description": "Image link for small size (width of ~300 pixels). (In LITE projection)",
                  "type": "string"
                },
                "smallThumbnail": {
                  "type": "string",
                  "description": "Image link for small thumbnail size (width of ~80 pixels). (In LITE projection)"
                },
                "large": {
                  "description": "Image link for large size (width of ~800 pixels). (In LITE projection)",
                  "type": "string"
                }
              },
              "type": "object",
              "description": "A list of image links for all the sizes that are available. (In LITE projection.)"
            },
            "publishedDate": {
              "type": "string",
              "description": "Date of publication. (In LITE projection.)"
            },
            "comicsContent": {
              "description": "Whether the volume has comics content.",
              "type": "boolean"
            },
            "seriesInfo": {
              "$ref": "Volumeseriesinfo"
            },
            "language": {
              "type": "string",
              "description": "Best language for this volume (based on content). It is the two-letter ISO 639-1 code such as 'fr', 'en', etc."
            },
            "maturityRating": {
              "type": "string"
            },
            "samplePageCount": {
              "type": "integer",
              "description": "Total number of sample pages as per publisher metadata.",
              "format": "int32"
            },
            "contentVersion": {
              "type": "string",
              "description": "An identifier for the version of the volume content (text & images). (In LITE projection)"
            },
            "mainCategory": {
              "description": "The main category to which this volume belongs. It will be the category from the categories list returned below that has the highest weight.",
              "type": "string"
            },
            "averageRating": {
              "type": "number",
              "description": "The mean review rating for this volume. (min = 1.0, max = 5.0)",
              "format": "double"
            },
            "subtitle": {
              "description": "Volume subtitle. (In LITE projection.)",
              "type": "string"
            },
            "dimensions": {
              "description": "Physical dimensions of this volume.",
              "properties": {
                "thickness": {
                  "description": "Thickness of this volume (in cm).",
                  "type": "string"
                },
                "height": {
                  "description": "Height or length of this volume (in cm).",
                  "type": "string"
                },
                "width": {
                  "type": "string",
                  "description": "Width of this volume (in cm)."
                }
              },
              "type": "object"
            },
            "infoLink": {
              "type": "string",
              "description": "URL to view information about this volume on the Google Books site. (In LITE projection)"
            },
            "authors": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The names of the authors and/or editors for this volume. (In LITE projection)"
            },
            "title": {
              "description": "Volume title. (In LITE projection.)",
              "type": "string"
            },
            "ratingsCount": {
              "type": "integer",
              "format": "int32",
              "description": "The number of review ratings for this volume."
            },
            "industryIdentifiers": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "description": "Identifier type. Possible values are ISBN_10, ISBN_13, ISSN and OTHER.",
                    "type": "string"
                  },
                  "identifier": {
                    "type": "string",
                    "description": "Industry specific volume identifier."
                  }
                }
              },
              "description": "Industry standard identifiers for this volume."
            },
            "readingModes": {
              "type": "object",
              "description": "The reading modes available for this volume.",
              "properties": {
                "image": {
                  "type": "boolean"
                },
                "text": {
                  "type": "boolean"
                }
              }
            },
            "categories": {
              "type": "array",
              "description": "A list of subject categories, such as \"Fiction\", \"Suspense\", etc.",
              "items": {
                "type": "string"
              }
            },
            "pageCount": {
              "description": "Total number of pages as per publisher metadata.",
              "type": "integer",
              "format": "int32"
            },
            "canonicalVolumeLink": {
              "description": "Canonical URL for a volume. (In LITE projection.)",
              "type": "string"
            },
            "previewLink": {
              "type": "string",
              "description": "URL to preview this volume on the Google Books site."
            },
            "panelizationSummary": {
              "type": "object",
              "properties": {
                "containsImageBubbles": {
                  "type": "boolean"
                },
                "containsEpubBubbles": {
                  "type": "boolean"
                },
                "imageBubbleVersion": {
                  "type": "string"
                },
                "epubBubbleVersion": {
                  "type": "string"
                }
              },
              "description": "A top-level summary of the panelization info in this volume."
            },
            "description": {
              "description": "A synopsis of the volume. The text of the description is formatted in HTML and includes simple formatting elements, such as b, i, and br tags. (In LITE projection.)",
              "type": "string"
            }
          },
          "type": "object"
        },
        "accessInfo": {
          "description": "Any information about a volume related to reading or obtaining that volume text. This information can depend on country (books may be public domain in one country but not in another, e.g.).",
          "properties": {
            "viewability": {
              "description": "The read access of a volume. Possible values are PARTIAL, ALL_PAGES, NO_PAGES or UNKNOWN. This value depends on the country listed above. A value of PARTIAL means that the publisher has allowed some portion of the volume to be viewed publicly, without purchase. This can apply to eBooks as well as non-eBooks. Public domain books will always have a value of ALL_PAGES.",
              "type": "string"
            },
            "embeddable": {
              "description": "Whether this volume can be embedded in a viewport using the Embedded Viewer API.",
              "type": "boolean"
            },
            "driveImportedContentLink": {
              "description": "URL to the Google Drive viewer if this volume is uploaded by the user by selecting the file from Google Drive.",
              "type": "string"
            },
            "country": {
              "description": "The two-letter ISO_3166-1 country code for which this access information is valid. (In LITE projection.)",
              "type": "string"
            },
            "webReaderLink": {
              "description": "URL to read this volume on the Google Books site. Link will not allow users to read non-viewable volumes.",
              "type": "string"
            },
            "explicitOfflineLicenseManagement": {
              "type": "boolean",
              "description": "Whether this volume requires that the client explicitly request offline download license rather than have it done automatically when loading the content, if the client supports it."
            },
            "accessViewStatus": {
              "description": "Combines the access and viewability of this volume into a single status field for this user. Values can be FULL_PURCHASED, FULL_PUBLIC_DOMAIN, SAMPLE or NONE. (In LITE projection.)",
              "type": "string"
            },
            "pdf": {
              "properties": {
                "isAvailable": {
                  "description": "Is a scanned image pdf available either as public domain or for purchase. (In LITE projection.)",
                  "type": "boolean"
                },
                "acsTokenLink": {
                  "type": "string",
                  "description": "URL to retrieve ACS token for pdf download. (In LITE projection.)"
                },
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download pdf. (In LITE projection.)"
                }
              },
              "description": "Information about pdf content. (In LITE projection.)",
              "type": "object"
            },
            "viewOrderUrl": {
              "description": "For ordered but not yet processed orders, we give a URL that can be used to go to the appropriate Google Wallet page.",
              "type": "string"
            },
            "quoteSharingAllowed": {
              "description": "Whether quote sharing is allowed for this volume.",
              "type": "boolean"
            },
            "downloadAccess": {
              "description": "Information about a volume's download license access restrictions.",
              "$ref": "DownloadAccessRestriction"
            },
            "textToSpeechPermission": {
              "description": "Whether text-to-speech is permitted for this volume. Values can be ALLOWED, ALLOWED_FOR_ACCESSIBILITY, or NOT_ALLOWED.",
              "type": "string"
            },
            "epub": {
              "properties": {
                "downloadLink": {
                  "type": "string",
                  "description": "URL to download epub. (In LITE projection.)"
                },
                "acsTokenLink": {
                  "description": "URL to retrieve ACS token for epub download. (In LITE projection.)",
                  "type": "string"
                },
                "isAvailable": {
                  "description": "Is a flowing text epub available either as public domain or for purchase. (In LITE projection.)",
                  "type": "boolean"
                }
              },
              "type": "object",
              "description": "Information about epub content. (In LITE projection.)"
            },
            "publicDomain": {
              "type": "boolean",
              "description": "Whether or not this book is public domain in the country listed above."
            }
          },
          "type": "object"
        },
        "kind": {
          "description": "Resource type for a volume. (In LITE projection.)",
          "type": "string"
        },
        "etag": {
          "description": "Opaque identifier for a specific version of a volume resource. (In LITE projection)",
          "type": "string"
        },
        "recommendedInfo": {
          "properties": {
            "explanation": {
              "type": "string",
              "description": "A text explaining why this volume is recommended."
            }
          },
          "type": "object",
          "description": "Recommendation related information for this volume."
        },
        "selfLink": {
          "description": "URL to this resource. (In LITE projection.)",
          "type": "string"
        }
      }
    },
    "Usersettings": {
      "id": "Usersettings",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "notification": {
          "properties": {
            "matchMyInterests": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "rewardExpirations": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromSeries": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "moreFromAuthors": {
              "type": "object",
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              }
            },
            "priceDrop": {
              "properties": {
                "opted_state": {
                  "type": "string"
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        },
        "notesExport": {
          "properties": {
            "isEnabled": {
              "type": "boolean"
            },
            "folderName": {
              "type": "string"
            }
          },
          "description": "User settings in sub-objects, each for different purposes.",
          "type": "object"
        }
      },
      "type": "object"
    },
    "Dictlayerdata": {
      "id": "Dictlayerdata",
      "properties": {
        "kind": {
          "type": "string"
        },
        "common": {
          "properties": {
            "title": {
              "description": "The display title and localized canonical name to use when searching for this entity on Google search.",
              "type": "string"
            }
          },
          "type": "object"
        },
        "dict": {
          "type": "object",
          "properties": {
            "words": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "senses": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "source": {
                          "type": "object",
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        },
                        "definitions": {
                          "items": {
                            "properties": {
                              "definition": {
                                "type": "string"
                              },
                              "examples": {
                                "items": {
                                  "properties": {
                                    "text": {
                                      "type": "string"
                                    },
                                    "source": {
                                      "properties": {
                                        "attribution": {
                                          "type": "string"
                                        },
                                        "url": {
                                          "type": "string"
                                        }
                                      },
                                      "type": "object"
                                    }
                                  },
                                  "type": "object"
                                },
                                "type": "array"
                              }
                            },
                            "type": "object"
                          },
                          "type": "array"
                        },
                        "partOfSpeech": {
                          "type": "string"
                        },
                        "conjugations": {
                          "items": {
                            "type": "object",
                            "properties": {
                              "value": {
                                "type": "string"
                              },
                              "type": {
                                "type": "string"
                              }
                            }
                          },
                          "type": "array"
                        },
                        "syllabification": {
                          "type": "string"
                        },
                        "synonyms": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "source": {
                                "properties": {
                                  "attribution": {
                                    "type": "string"
                                  },
                                  "url": {
                                    "type": "string"
                                  }
                                },
                                "type": "object"
                              },
                              "text": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "pronunciation": {
                          "type": "string"
                        },
                        "pronunciationUrl": {
                          "type": "string"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "examples": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          },
                          "type": "object"
                        }
                      }
                    },
                    "type": "array"
                  },
                  "source": {
                    "type": "object",
                    "properties": {
                      "url": {
                        "type": "string"
                      },
                      "attribution": {
                        "type": "string"
                      }
                    },
                    "description": "The words with different meanings but not related words, e.g. \"go\" (game) and \"go\" (verb)."
                  },
                  "derivatives": {
                    "items": {
                      "type": "object",
                      "properties": {
                        "text": {
                          "type": "string"
                        },
                        "source": {
                          "type": "object",
                          "properties": {
                            "attribution": {
                              "type": "string"
                            },
                            "url": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    },
                    "type": "array"
                  }
                }
              }
            },
            "source": {
              "description": "The source, url and attribution for this dictionary data.",
              "type": "object",
              "properties": {
                "url": {
                  "type": "string"
                },
                "attribution": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "type": "object"
    },
    "Layersummary": {
      "type": "object",
      "properties": {
        "annotationsDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "annotationsLink": {
          "description": "The link to get the annotations for this layer.",
          "type": "string"
        },
        "volumeAnnotationsVersion": {
          "type": "string",
          "description": "The current version of this layer's volume annotations. Note that this version applies only to the data in the books.layers.volumeAnnotations.* responses. The actual annotation data is versioned separately."
        },
        "annotationCount": {
          "format": "int32",
          "description": "The number of annotations for this layer.",
          "type": "integer"
        },
        "volumeId": {
          "description": "The volume id this resource is for.",
          "type": "string"
        },
        "layerId": {
          "type": "string",
          "description": "The layer id for this summary."
        },
        "contentVersion": {
          "type": "string",
          "description": "The content version this resource is for."
        },
        "selfLink": {
          "type": "string",
          "description": "URL to this resource."
        },
        "id": {
          "description": "Unique id of this layer summary.",
          "type": "string"
        },
        "dataCount": {
          "description": "The number of data items for this layer.",
          "format": "int32",
          "type": "integer"
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "updated": {
          "type": "string",
          "description": "Timestamp for the last time an item in this layer was updated. (RFC 3339 UTC date-time format)."
        },
        "annotationTypes": {
          "items": {
            "type": "string"
          },
          "description": "The list of annotation types contained for this layer.",
          "type": "array"
        }
      },
      "id": "Layersummary"
    },
    "Discoveryclusters": {
      "properties": {
        "totalClusters": {
          "type": "integer",
          "format": "int32"
        },
        "kind": {
          "type": "string",
          "description": "Resorce type."
        },
        "clusters": {
          "items": {
            "properties": {
              "volumes": {
                "type": "array",
                "items": {
                  "$ref": "Volume"
                }
              },
              "uid": {
                "type": "string"
              },
              "subTitle": {
                "type": "string"
              },
              "banner_with_content_container": {
                "properties": {
                  "fillColorArgb": {
                    "type": "string"
                  },
                  "textColorArgb": {
                    "type": "string"
                  },
                  "maskColorArgb": {
                    "type": "string"
                  },
                  "imageUrl": {
                    "type": "string"
                  },
                  "moreButtonUrl": {
                    "type": "string"
                  },
                  "moreButtonText": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "title": {
                "type": "string"
              },
              "totalVolumes": {
                "format": "int32",
                "type": "integer"
              }
            },
            "type": "object"
          },
          "type": "array"
        }
      },
      "id": "Discoveryclusters",
      "type": "object"
    },
    "Seriesmembership": {
      "type": "object",
      "id": "Seriesmembership",
      "properties": {
        "member": {
          "items": {
            "$ref": "Volume"
          },
          "type": "array"
        },
        "kind": {
          "description": "Resorce type.",
          "type": "string"
        },
        "nextPageToken": {
          "type": "string"
        }
      }
    },
    "Annotations": {
      "properties": {
        "totalItems": {
          "type": "integer",
          "format": "int32",
          "description": "Total number of annotations found. This may be greater than the number of notes returned in this response if results have been paginated."
        },
        "items": {
          "description": "A list of annotations.",
          "items": {
            "$ref": "Annotation"
          },
          "type": "array"
        },
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        }
      },
      "id": "Annotations",
      "type": "object"
    },
    "Annotationsdata": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results."
        },
        "totalItems": {
          "format": "int32",
          "type": "integer",
          "description": "The total number of volume annotations found."
        },
        "kind": {
          "type": "string",
          "description": "Resource type"
        },
        "items": {
          "type": "array",
          "description": "A list of Annotation Data.",
          "items": {
            "$ref": "GeoAnnotationdata"
          }
        }
      },
      "id": "Annotationsdata"
    },
    "BooksCloudloadingResource": {
      "type": "object",
      "id": "BooksCloudloadingResource",
      "properties": {
        "title": {
          "type": "string"
        },
        "volumeId": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "processingState": {
          "type": "string"
        }
      }
    },
    "BooksVolumesRecommendedRateResponse": {
      "type": "object",
      "id": "BooksVolumesRecommendedRateResponse",
      "properties": {
        "consistency_token": {
          "type": "string"
        }
      }
    },
    "BooksAnnotationsRange": {
      "id": "BooksAnnotationsRange",
      "properties": {
        "endPosition": {
          "type": "string",
          "description": "The ending position for the range."
        },
        "startPosition": {
          "type": "string",
          "description": "The starting position for the range."
        },
        "endOffset": {
          "description": "The offset from the ending position.",
          "type": "string"
        },
        "startOffset": {
          "description": "The offset from the starting position.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Volumeseriesinfo": {
      "type": "object",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "volumeSeries": {
          "type": "array",
          "items": {
            "properties": {
              "seriesBookType": {
                "description": "The book type in the context of series. Examples - Single Issue, Collection Edition, etc.",
                "type": "string"
              },
              "issue": {
                "type": "array",
                "description": "List of issues. Applicable only for Collection Edition and Omnibus.",
                "items": {
                  "type": "object",
                  "properties": {
                    "issueOrderNumber": {
                      "format": "int32",
                      "type": "integer"
                    },
                    "issueDisplayNumber": {
                      "type": "string"
                    }
                  }
                }
              },
              "seriesId": {
                "description": "The series id.",
                "type": "string"
              },
              "orderNumber": {
                "type": "integer",
                "format": "int32",
                "description": "The book order number in the series."
              }
            },
            "type": "object"
          }
        },
        "bookDisplayNumber": {
          "description": "The display number string. This should be used only for display purposes and the actual sequence should be inferred from the below orderNumber.",
          "type": "string"
        },
        "shortSeriesBookTitle": {
          "description": "Short book title in the context of the series.",
          "type": "string"
        }
      },
      "id": "Volumeseriesinfo"
    },
    "Layersummaries": {
      "type": "object",
      "id": "Layersummaries",
      "properties": {
        "kind": {
          "description": "Resource type.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "description": "A list of layer summary items.",
          "items": {
            "$ref": "Layersummary"
          }
        },
        "totalItems": {
          "type": "integer",
          "description": "The total number of layer summaries found.",
          "format": "int32"
        }
      }
    },
    "Volumeannotation": {
      "id": "Volumeannotation",
      "properties": {
        "selectedText": {
          "description": "Excerpt from the volume.",
          "type": "string"
        },
        "annotationType": {
          "type": "string",
          "description": "The type of annotation this is."
        },
        "kind": {
          "description": "Resource Type",
          "type": "string"
        },
        "id": {
          "description": "Unique id of this volume annotation.",
          "type": "string"
        },
        "deleted": {
          "type": "boolean",
          "description": "Indicates that this annotation is deleted."
        },
        "data": {
          "type": "string",
          "description": "Data for this annotation."
        },
        "annotationDataLink": {
          "type": "string",
          "description": "Link to get data for this annotation."
        },
        "selfLink": {
          "description": "URL to this resource.",
          "type": "string"
        },
        "contentRanges": {
          "properties": {
            "contentVersion": {
              "description": "Content version applicable to ranges below.",
              "type": "string"
            },
            "gbTextRange": {
              "description": "Range in GB text format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            },
            "gbImageRange": {
              "$ref": "BooksAnnotationsRange",
              "description": "Range in GB image format for this annotation for version above."
            },
            "cfiRange": {
              "description": "Range in CFI format for this annotation for version above.",
              "$ref": "BooksAnnotationsRange"
            }
          },
          "description": "The content ranges to identify the selected text.",
          "type": "object"
        },
        "layerId": {
          "description": "The Layer this annotation is for.",
          "type": "string"
        },
        "updated": {
          "description": "Timestamp for the last time this anntoation was updated. (RFC 3339 UTC date-time format).",
          "type": "string"
        },
        "annotationDataId": {
          "description": "The annotation data id for this volume annotation.",
          "type": "string"
        },
        "volumeId": {
          "description": "The Volume this annotation is for.",
          "type": "string"
        },
        "pageIds": {
          "description": "Pages the annotation spans.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "Geolayerdata": {
      "properties": {
        "kind": {
          "type": "string"
        },
        "geo": {
          "type": "object",
          "properties": {
            "zoom": {
              "description": "The Zoom level to use for the map. Zoom levels between 0 (the lowest zoom level, in which the entire world can be seen on one map) to 21+ (down to individual buildings). See: https: //developers.google.com/maps/documentation/staticmaps/#Zoomlevels",
              "type": "integer",
              "format": "int32"
            },
            "latitude": {
              "type": "number",
              "description": "The latitude of the location.",
              "format": "double"
            },
            "longitude": {
              "format": "double",
              "type": "number",
              "description": "The longitude of the location."
            },
            "boundary": {
              "items": {
                "type": "string"
              },
              "type": "array",
              "description": "The boundary of the location as a set of loops containing pairs of latitude, longitude coordinates."
            },
            "viewport": {
              "description": "The viewport for showing this location. This is a latitude, longitude rectangle.",
              "properties": {
                "hi": {
                  "properties": {
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "latitude": {
                      "format": "double",
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "lo": {
                  "properties": {
                    "latitude": {
                      "type": "number",
                      "format": "double"
                    },
                    "longitude": {
                      "type": "number",
                      "format": "double"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "countryCode": {
              "type": "string",
              "description": "The country code of the location."
            },
            "mapType": {
              "type": "string",
              "description": "The type of map that should be used for this location. EX: HYBRID, ROADMAP, SATELLITE, TERRAIN"
            },
            "cachePolicy": {
              "type": "string",
              "description": "The cache policy active for this data. EX: UNRESTRICTED, RESTRICTED, NEVER"
            }
          }
        },
        "common": {
          "properties": {
            "snippet": {
              "type": "string",
              "description": "The description for this location."
            },
            "snippetUrl": {
              "description": "The URL for information for this location. Ex: wikipedia link.",
              "type": "string"
            },
            "title": {
              "type": "string",
              "description": "The display title and localized canonical name to use when searching for this entity on Google search."
            },
            "lang": {
              "type": "string",
              "description": "The language of the information url and description."
            },
            "previewImageUrl": {
              "description": "The URL for the preview image information.",
              "type": "string"
            }
          },
          "type": "object"
        }
      },
      "type": "object",
      "id": "Geolayerdata"
    },
    "Empty": {
      "id": "Empty",
      "properties": {},
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "Volumeannotations": {
      "properties": {
        "kind": {
          "description": "Resource type",
          "type": "string"
        },
        "totalItems": {
          "description": "The total number of volume annotations found.",
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "description": "The version string for all of the volume annotations in this layer (not just the ones in this response). Note: the version string doesn't apply to the annotation data, just the information in this response (e.g. the location of annotations in the book).",
          "type": "string"
        },
        "nextPageToken": {
          "description": "Token to pass in for pagination for the next page. This will not be present if this request does not have more results.",
          "type": "string"
        },
        "items": {
          "type": "array",
          "items": {
            "$ref": "Volumeannotation"
          },
          "description": "A list of volume annotations."
        }
      },
      "id": "Volumeannotations",
      "type": "object"
    },
    "DownloadAccesses": {
      "id": "DownloadAccesses",
      "properties": {
        "kind": {
          "type": "string",
          "description": "Resource type."
        },
        "downloadAccessList": {
          "description": "A list of download access responses.",
          "type": "array",
          "items": {
            "$ref": "DownloadAccessRestriction"
          }
        }
      },
      "type": "object"
    }
  },
  "resources": {
    "familysharing": {
      "methods": {
        "getFamilyInfo": {
          "parameterOrder": [],
          "path": "books/v1/familysharing/getFamilyInfo",
          "flatPath": "books/v1/familysharing/getFamilyInfo",
          "parameters": {
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            }
          },
          "id": "books.familysharing.getFamilyInfo",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "description": "Gets information regarding the family that the user is part of.",
          "response": {
            "$ref": "FamilyInfo"
          }
        },
        "unshare": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "docId": {
              "location": "query",
              "type": "string",
              "description": "The docid to unshare."
            },
            "volumeId": {
              "description": "The volume to unshare.",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [],
          "description": "Initiates revoking content that has already been shared with the user's family. Empty response indicates success.",
          "flatPath": "books/v1/familysharing/unshare",
          "id": "books.familysharing.unshare",
          "httpMethod": "POST",
          "response": {
            "$ref": "Empty"
          },
          "path": "books/v1/familysharing/unshare"
        },
        "share": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.familysharing.share",
          "parameters": {
            "volumeId": {
              "location": "query",
              "description": "The volume to share.",
              "type": "string"
            },
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "docId": {
              "type": "string",
              "location": "query",
              "description": "The docid to share."
            }
          },
          "httpMethod": "POST",
          "description": "Initiates sharing of the content with the user's family. Empty response indicates success.",
          "path": "books/v1/familysharing/share",
          "response": {
            "$ref": "Empty"
          },
          "flatPath": "books/v1/familysharing/share",
          "parameterOrder": []
        }
      }
    },
    "layers": {
      "methods": {
        "get": {
          "flatPath": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "path": "books/v1/volumes/{volumeId}/layersummary/{summaryId}",
          "id": "books.layers.get",
          "httpMethod": "GET",
          "description": "Gets the layer summary for a volume.",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "volumeId": {
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "type": "string",
              "required": true
            },
            "contentVersion": {
              "location": "query",
              "type": "string",
              "description": "The content version for the requested volume."
            },
            "summaryId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "The ID for the layer to get the summary for."
            }
          },
          "response": {
            "$ref": "Layersummary"
          },
          "parameterOrder": [
            "volumeId",
            "summaryId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        },
        "list": {
          "description": "List the layer summaries for a volume.",
          "response": {
            "$ref": "Layersummaries"
          },
          "path": "books/v1/volumes/{volumeId}/layersummary",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/volumes/{volumeId}/layersummary",
          "id": "books.layers.list",
          "parameterOrder": [
            "volumeId"
          ],
          "parameters": {
            "maxResults": {
              "minimum": "0",
              "format": "uint32",
              "maximum": "200",
              "location": "query",
              "type": "integer",
              "description": "Maximum number of results to return"
            },
            "source": {
              "location": "query",
              "type": "string",
              "description": "String to identify the originator of this request."
            },
            "contentVersion": {
              "location": "query",
              "description": "The content version for the requested volume.",
              "type": "string"
            },
            "pageToken": {
              "location": "query",
              "description": "The value of the nextToken from the previous page.",
              "type": "string"
            },
            "volumeId": {
              "location": "path",
              "description": "The volume to retrieve layers for.",
              "type": "string",
              "required": true
            }
          }
        }
      },
      "resources": {
        "annotationData": {
          "methods": {
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "id": "books.layers.annotationData.get",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "description": "Gets the annotation data.",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationDataId",
                "contentVersion"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data/{annotationDataId}",
              "response": {
                "$ref": "DictionaryAnnotationdata"
              },
              "parameters": {
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'."
                },
                "w": {
                  "format": "int32",
                  "location": "query",
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "type": "integer"
                },
                "scale": {
                  "type": "integer",
                  "format": "int32",
                  "location": "query",
                  "description": "The requested scale for the image.",
                  "minimum": "0"
                },
                "contentVersion": {
                  "description": "The content version for the volume you are trying to retrieve.",
                  "required": true,
                  "type": "string",
                  "location": "query"
                },
                "layerId": {
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "location": "path"
                },
                "volumeId": {
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "type": "string",
                  "location": "path"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "allowWebDefinitions": {
                  "location": "query",
                  "type": "boolean",
                  "description": "For the dictionary layer. Whether or not to allow web definitions."
                },
                "annotationDataId": {
                  "description": "The ID of the annotation data to retrieve.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "h": {
                  "format": "int32",
                  "type": "integer",
                  "location": "query",
                  "description": "The requested pixel height for any images. If height is provided width must also be provided."
                }
              }
            },
            "list": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Gets the annotation data for a volume and layer.",
              "response": {
                "$ref": "Annotationsdata"
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "id": "books.layers.annotationData.list",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/data",
              "parameters": {
                "updatedMax": {
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string",
                  "location": "query"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "required": true,
                  "location": "query",
                  "type": "string"
                },
                "w": {
                  "description": "The requested pixel width for any images. If width is provided height must also be provided.",
                  "format": "int32",
                  "type": "integer",
                  "location": "query"
                },
                "maxResults": {
                  "description": "Maximum number of results to return",
                  "maximum": "200",
                  "format": "uint32",
                  "type": "integer",
                  "minimum": "0",
                  "location": "query"
                },
                "scale": {
                  "location": "query",
                  "minimum": "0",
                  "format": "int32",
                  "type": "integer",
                  "description": "The requested scale for the image."
                },
                "updatedMin": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive).",
                  "type": "string"
                },
                "h": {
                  "description": "The requested pixel height for any images. If height is provided width must also be provided.",
                  "type": "integer",
                  "format": "int32",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "layerId": {
                  "required": true,
                  "description": "The ID for the layer to get the annotation data.",
                  "location": "path",
                  "type": "string"
                },
                "annotationDataId": {
                  "description": "The list of Annotation Data Ids to retrieve. Pagination is ignored if this is set.",
                  "type": "string",
                  "location": "query",
                  "repeated": true
                },
                "volumeId": {
                  "description": "The volume to retrieve annotation data for.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ]
            }
          }
        },
        "volumeAnnotations": {
          "methods": {
            "get": {
              "parameters": {
                "annotationId": {
                  "description": "The ID of the volume annotation to retrieve.",
                  "location": "path",
                  "required": true,
                  "type": "string"
                },
                "volumeId": {
                  "required": true,
                  "description": "The volume to retrieve annotations for.",
                  "location": "path",
                  "type": "string"
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                },
                "locale": {
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "type": "string",
                  "location": "query"
                },
                "layerId": {
                  "type": "string",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "books.layers.volumeAnnotations.get",
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}",
              "response": {
                "$ref": "Volumeannotation"
              },
              "httpMethod": "GET",
              "description": "Gets the volume annotation.",
              "parameterOrder": [
                "volumeId",
                "layerId",
                "annotationId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}/annotations/{annotationId}"
            },
            "list": {
              "parameterOrder": [
                "volumeId",
                "layerId",
                "contentVersion"
              ],
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "The value of the nextToken from the previous page."
                },
                "layerId": {
                  "location": "path",
                  "description": "The ID for the layer to get the annotations.",
                  "required": true,
                  "type": "string"
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "The volume to retrieve annotations for."
                },
                "updatedMin": {
                  "type": "string",
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."
                },
                "updatedMax": {
                  "location": "query",
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "type": "string"
                },
                "maxResults": {
                  "description": "Maximum number of results to return",
                  "format": "uint32",
                  "location": "query",
                  "maximum": "200",
                  "type": "integer",
                  "minimum": "0"
                },
                "contentVersion": {
                  "type": "string",
                  "required": true,
                  "description": "The content version for the requested volume.",
                  "location": "query"
                },
                "endOffset": {
                  "description": "The end offset to end retrieving data from.",
                  "location": "query",
                  "type": "string"
                },
                "locale": {
                  "type": "string",
                  "description": "The locale information for the data. ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'.",
                  "location": "query"
                },
                "endPosition": {
                  "location": "query",
                  "description": "The end position to end retrieving data from.",
                  "type": "string"
                },
                "showDeleted": {
                  "location": "query",
                  "type": "boolean",
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false."
                },
                "volumeAnnotationsVersion": {
                  "location": "query",
                  "description": "The version of the volume annotations that you are requesting.",
                  "type": "string"
                },
                "startOffset": {
                  "type": "string",
                  "location": "query",
                  "description": "The start offset to start retrieving data from."
                },
                "startPosition": {
                  "type": "string",
                  "description": "The start position to start retrieving data from.",
                  "location": "query"
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "id": "books.layers.volumeAnnotations.list",
              "flatPath": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "description": "Gets the volume annotations for a volume and layer.",
              "response": {
                "$ref": "Volumeannotations"
              },
              "path": "books/v1/volumes/{volumeId}/layers/{layerId}",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        }
      }
    },
    "volumes": {
      "resources": {
        "mybooks": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "id": "books.volumes.mybooks.list",
              "description": "Return a list of books in My Library.",
              "path": "books/v1/volumes/mybooks",
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "processingState": {
                  "type": "string",
                  "location": "query",
                  "description": "The processing state of the user uploaded volumes to be returned. Applicable only if the UPLOADED is specified in the acquireMethod.",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "repeated": true,
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ]
                },
                "maxResults": {
                  "format": "uint32",
                  "location": "query",
                  "type": "integer",
                  "description": "Maximum number of results to return.",
                  "maximum": "100",
                  "minimum": "0"
                },
                "acquireMethod": {
                  "repeated": true,
                  "enumDescriptions": [
                    "",
                    "Books acquired via Family Sharing",
                    "Preordered books (not yet available)",
                    "User-rented books past their expiration time",
                    "Public domain books",
                    "Purchased books",
                    "User-rented books",
                    "Sample books",
                    "User uploaded books"
                  ],
                  "location": "query",
                  "description": "How the book was acquired",
                  "type": "string",
                  "enum": [
                    "ACQUIRE_METHOD_UNDEFINED",
                    "FAMILY_SHARED",
                    "PREORDERED",
                    "PREVIOUSLY_RENTED",
                    "PUBLIC_DOMAIN",
                    "PURCHASED",
                    "RENTED",
                    "SAMPLE",
                    "UPLOADED"
                  ]
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex:'en_US'. Used for generating recommendations.",
                  "type": "string",
                  "location": "query"
                },
                "country": {
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "location": "query",
                  "type": "string"
                },
                "startIndex": {
                  "minimum": "0",
                  "location": "query",
                  "description": "Index of the first result to return (starts at 0)",
                  "type": "integer",
                  "format": "uint32"
                }
              },
              "flatPath": "books/v1/volumes/mybooks",
              "response": {
                "$ref": "Volumes"
              },
              "parameterOrder": []
            }
          }
        },
        "recommended": {
          "methods": {
            "list": {
              "flatPath": "books/v1/volumes/recommended",
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "maxAllowedMaturityRating": {
                  "location": "query",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "type": "string"
                },
                "locale": {
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "location": "query",
                  "type": "string"
                }
              },
              "path": "books/v1/volumes/recommended",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.volumes.recommended.list",
              "parameterOrder": [],
              "response": {
                "$ref": "Volumes"
              },
              "httpMethod": "GET",
              "description": "Return a list of recommended books for the current user."
            },
            "rate": {
              "path": "books/v1/volumes/recommended/rate",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "locale": {
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "rating": {
                  "location": "query",
                  "description": "Rating to be given to the volume.",
                  "type": "string",
                  "enumDescriptions": [
                    "",
                    "Rating indicating a dismissal due to ownership.",
                    "Rating indicating a negative dismissal of a volume."
                  ],
                  "required": true,
                  "enum": [
                    "RATING_UNDEFINED",
                    "HAVE_IT",
                    "NOT_INTERESTED"
                  ]
                },
                "volumeId": {
                  "required": true,
                  "description": "ID of the source volume.",
                  "type": "string",
                  "location": "query"
                }
              },
              "description": "Rate a recommended book for the current user.",
              "parameterOrder": [
                "rating",
                "volumeId"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "BooksVolumesRecommendedRateResponse"
              },
              "flatPath": "books/v1/volumes/recommended/rate",
              "id": "books.volumes.recommended.rate"
            }
          }
        },
        "useruploaded": {
          "methods": {
            "list": {
              "path": "books/v1/volumes/useruploaded",
              "flatPath": "books/v1/volumes/useruploaded",
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "repeated": true,
                  "description": "The ids of the volumes to be returned. If not specified all that match the processingState are returned."
                },
                "locale": {
                  "type": "string",
                  "location": "query",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations."
                },
                "startIndex": {
                  "minimum": "0",
                  "location": "query",
                  "format": "uint32",
                  "description": "Index of the first result to return (starts at 0)",
                  "type": "integer"
                },
                "maxResults": {
                  "location": "query",
                  "format": "uint32",
                  "type": "integer",
                  "minimum": "0",
                  "maximum": "40",
                  "description": "Maximum number of results to return."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "processingState": {
                  "type": "string",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "The volume processing hase failed.",
                    "The volume processing was completed.",
                    "The volume processing is not completed."
                  ],
                  "description": "The processing state of the user uploaded volumes to be returned.",
                  "enum": [
                    "PROCESSING_STATE_UNDEFINED",
                    "COMPLETED_FAILED",
                    "COMPLETED_SUCCESS",
                    "RUNNING"
                  ],
                  "repeated": true
                }
              },
              "id": "books.volumes.useruploaded.list",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "parameterOrder": [],
              "description": "Return a list of books uploaded by the current user.",
              "response": {
                "$ref": "Volumes"
              }
            }
          }
        },
        "associated": {
          "methods": {
            "list": {
              "parameterOrder": [
                "volumeId"
              ],
              "flatPath": "books/v1/volumes/{volumeId}/associated",
              "path": "books/v1/volumes/{volumeId}/associated",
              "response": {
                "$ref": "Volumes"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.volumes.associated.list",
              "parameters": {
                "locale": {
                  "type": "string",
                  "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
                  "location": "query"
                },
                "maxAllowedMaturityRating": {
                  "enumDescriptions": [
                    "",
                    "Show books which are rated mature or lower.",
                    "Show books which are rated not mature."
                  ],
                  "type": "string",
                  "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
                  "enum": [
                    "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                    "MATURE",
                    "not-mature"
                  ],
                  "location": "query"
                },
                "volumeId": {
                  "type": "string",
                  "location": "path",
                  "description": "ID of the source volume.",
                  "required": true
                },
                "association": {
                  "location": "query",
                  "description": "Association type.",
                  "enumDescriptions": [
                    "",
                    "Recommendations for display end-of-sample.",
                    "Recommendations for display end-of-volume.",
                    "Related volumes for Play Store."
                  ],
                  "type": "string",
                  "enum": [
                    "ASSOCIATION_UNDEFINED",
                    "end-of-sample",
                    "end-of-volume",
                    "related-for-play"
                  ]
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "location": "query",
                  "type": "string"
                }
              },
              "description": "Return a list of associated books.",
              "httpMethod": "GET"
            }
          }
        }
      },
      "methods": {
        "get": {
          "description": "Gets volume information for a single volume.",
          "parameterOrder": [
            "volumeId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/volumes/{volumeId}",
          "flatPath": "books/v1/volumes/{volumeId}",
          "id": "books.volumes.get",
          "response": {
            "$ref": "Volume"
          },
          "httpMethod": "GET",
          "parameters": {
            "country": {
              "location": "query",
              "type": "string",
              "description": "ISO-3166-1 code to override the IP-based location."
            },
            "source": {
              "type": "string",
              "description": "string to identify the originator of this request.",
              "location": "query"
            },
            "user_library_consistent_read": {
              "location": "query",
              "type": "boolean"
            },
            "partner": {
              "description": "Brand results for partner ID.",
              "type": "string",
              "location": "query"
            },
            "volumeId": {
              "location": "path",
              "type": "string",
              "description": "ID of volume to retrieve.",
              "required": true
            },
            "projection": {
              "description": "Restrict information returned to a set of selected fields.",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "location": "query",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ],
              "type": "string"
            },
            "includeNonComicsSeries": {
              "location": "query",
              "type": "boolean",
              "description": "Set to true to include non-comics series. Defaults to false."
            }
          }
        },
        "list": {
          "flatPath": "books/v1/volumes",
          "path": "books/v1/volumes",
          "id": "books.volumes.list",
          "httpMethod": "GET",
          "description": "Performs a book search.",
          "response": {
            "$ref": "Volumes"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "q"
          ],
          "parameters": {
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            },
            "q": {
              "description": "Full-text search query string.",
              "location": "query",
              "required": true,
              "type": "string"
            },
            "printType": {
              "enum": [
                "PRINT_TYPE_UNDEFINED",
                "ALL",
                "BOOKS",
                "MAGAZINES"
              ],
              "type": "string",
              "enumDescriptions": [
                "",
                "All volume content types.",
                "Just books.",
                "Just magazines."
              ],
              "location": "query",
              "description": "Restrict to books or magazines."
            },
            "download": {
              "location": "query",
              "description": "Restrict to volumes by download availability.",
              "enum": [
                "DOWNLOAD_UNDEFINED",
                "EPUB"
              ],
              "type": "string",
              "enumDescriptions": [
                "",
                "All volumes with epub."
              ]
            },
            "startIndex": {
              "type": "integer",
              "minimum": "0",
              "format": "uint32",
              "location": "query",
              "description": "Index of the first result to return (starts at 0)"
            },
            "orderBy": {
              "enumDescriptions": [
                "",
                "Most recently published.",
                "Relevance to search terms."
              ],
              "enum": [
                "ORDER_BY_UNDEFINED",
                "newest",
                "relevance"
              ],
              "description": "Sort search results.",
              "location": "query",
              "type": "string"
            },
            "libraryRestrict": {
              "location": "query",
              "enum": [
                "LIBRARY_RESTRICT_UNDEFINED",
                "my-library",
                "no-restrict"
              ],
              "description": "Restrict search to this user's library.",
              "type": "string",
              "enumDescriptions": [
                "",
                "Restrict to the user's library, any shelf.",
                "Do not restrict based on user's library."
              ]
            },
            "maxAllowedMaturityRating": {
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "type": "string",
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ]
            },
            "showPreorders": {
              "type": "boolean",
              "location": "query",
              "description": "Set to true to show books available for preorder. Defaults to false."
            },
            "projection": {
              "description": "Restrict information returned to a set of selected fields.",
              "location": "query",
              "enumDescriptions": [
                "",
                "Includes all volume data.",
                "Includes a subset of fields in volumeInfo and accessInfo."
              ],
              "type": "string",
              "enum": [
                "PROJECTION_UNDEFINED",
                "FULL",
                "LITE"
              ]
            },
            "partner": {
              "location": "query",
              "description": "Restrict and brand results for partner ID.",
              "type": "string"
            },
            "filter": {
              "enumDescriptions": [
                "",
                "All Google eBooks.",
                "Google eBook with full volume text viewability.",
                "Public can view entire volume text.",
                "Google eBook with a price.",
                "Public able to see parts of text."
              ],
              "type": "string",
              "description": "Filter search results.",
              "enum": [
                "FILTER_UNDEFINED",
                "ebooks",
                "free-ebooks",
                "full",
                "paid-ebooks",
                "partial"
              ],
              "location": "query"
            },
            "maxResults": {
              "description": "Maximum number of results to return.",
              "format": "uint32",
              "minimum": "0",
              "type": "integer",
              "location": "query",
              "maximum": "40"
            },
            "langRestrict": {
              "description": "Restrict results to books with this language code.",
              "type": "string",
              "location": "query"
            }
          }
        }
      }
    },
    "promooffer": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "parameters": {
            "serial": {
              "type": "string",
              "description": "device serial",
              "location": "query"
            },
            "manufacturer": {
              "type": "string",
              "location": "query",
              "description": "device manufacturer"
            },
            "product": {
              "type": "string",
              "description": "device product",
              "location": "query"
            },
            "model": {
              "type": "string",
              "description": "device model",
              "location": "query"
            },
            "androidId": {
              "location": "query",
              "type": "string",
              "description": "device android_id"
            },
            "device": {
              "description": "device device",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Offers"
          },
          "description": "Returns a list of promo offers available to the user",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/promooffer/get",
          "parameterOrder": [],
          "path": "books/v1/promooffer/get",
          "id": "books.promooffer.get"
        },
        "accept": {
          "response": {
            "$ref": "Empty"
          },
          "parameterOrder": [],
          "httpMethod": "POST",
          "description": "Accepts the promo offer.",
          "parameters": {
            "volumeId": {
              "description": "Volume id to exercise the offer",
              "location": "query",
              "type": "string"
            },
            "androidId": {
              "type": "string",
              "description": "device android_id",
              "location": "query"
            },
            "offerId": {
              "type": "string",
              "location": "query"
            },
            "serial": {
              "type": "string",
              "description": "device serial",
              "location": "query"
            },
            "manufacturer": {
              "description": "device manufacturer",
              "type": "string",
              "location": "query"
            },
            "model": {
              "location": "query",
              "description": "device model",
              "type": "string"
            },
            "device": {
              "description": "device device",
              "location": "query",
              "type": "string"
            },
            "product": {
              "type": "string",
              "description": "device product",
              "location": "query"
            }
          },
          "flatPath": "books/v1/promooffer/accept",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.promooffer.accept",
          "path": "books/v1/promooffer/accept"
        },
        "dismiss": {
          "parameters": {
            "serial": {
              "description": "device serial",
              "location": "query",
              "type": "string"
            },
            "device": {
              "location": "query",
              "description": "device device",
              "type": "string"
            },
            "model": {
              "type": "string",
              "description": "device model",
              "location": "query"
            },
            "offerId": {
              "description": "Offer to dimiss",
              "location": "query",
              "type": "string"
            },
            "product": {
              "description": "device product",
              "location": "query",
              "type": "string"
            },
            "androidId": {
              "type": "string",
              "location": "query",
              "description": "device android_id"
            },
            "manufacturer": {
              "type": "string",
              "location": "query",
              "description": "device manufacturer"
            }
          },
          "id": "books.promooffer.dismiss",
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/promooffer/dismiss",
          "httpMethod": "POST",
          "description": "Marks the promo offer as dismissed.",
          "path": "books/v1/promooffer/dismiss",
          "response": {
            "$ref": "Empty"
          }
        }
      }
    },
    "mylibrary": {
      "resources": {
        "readingpositions": {
          "methods": {
            "setPosition": {
              "httpMethod": "POST",
              "description": "Sets my reading position information for a volume.",
              "path": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "parameterOrder": [
                "volumeId",
                "position",
                "timestamp"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Empty"
              },
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}/setPosition",
              "parameters": {
                "contentVersion": {
                  "type": "string",
                  "description": "Volume content version for which this reading position applies.",
                  "location": "query"
                },
                "timestamp": {
                  "description": "RFC 3339 UTC format timestamp associated with this reading position.",
                  "required": true,
                  "location": "query",
                  "type": "string"
                },
                "position": {
                  "required": true,
                  "description": "Position string for the new volume reading position.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "description": "ID of volume for which to update the reading position.",
                  "type": "string",
                  "location": "path",
                  "required": true
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "deviceCookie": {
                  "type": "string",
                  "description": "Random persistent device cookie optional on set position.",
                  "location": "query"
                },
                "action": {
                  "description": "Action that caused this reading position to be set.",
                  "location": "query",
                  "enumDescriptions": [
                    "",
                    "User chose bookmark within volume.",
                    "User selected chapter from list.",
                    "Next page event.",
                    "Previous page event.",
                    "User navigated to page.",
                    "User chose search results within volume."
                  ],
                  "type": "string",
                  "enum": [
                    "ACTION_UNDEFINED",
                    "bookmark",
                    "chapter",
                    "next-page",
                    "prev-page",
                    "scroll",
                    "search"
                  ]
                }
              },
              "id": "books.mylibrary.readingpositions.setPosition"
            },
            "get": {
              "flatPath": "books/v1/mylibrary/readingpositions/{volumeId}",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "GET",
              "id": "books.mylibrary.readingpositions.get",
              "response": {
                "$ref": "ReadingPosition"
              },
              "parameterOrder": [
                "volumeId"
              ],
              "path": "books/v1/mylibrary/readingpositions/{volumeId}",
              "parameters": {
                "volumeId": {
                  "required": true,
                  "location": "path",
                  "description": "ID of volume for which to retrieve a reading position.",
                  "type": "string"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "contentVersion": {
                  "type": "string",
                  "description": "Volume content version for which this reading position is requested.",
                  "location": "query"
                }
              },
              "description": "Retrieves my reading position information for a volume."
            }
          }
        },
        "bookshelves": {
          "resources": {
            "volumes": {
              "methods": {
                "list": {
                  "response": {
                    "$ref": "Volumes"
                  },
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "shelf"
                  ],
                  "path": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "parameters": {
                    "showPreorders": {
                      "description": "Set to true to show pre-ordered books. Defaults to false.",
                      "location": "query",
                      "type": "boolean"
                    },
                    "source": {
                      "location": "query",
                      "description": "String to identify the originator of this request.",
                      "type": "string"
                    },
                    "q": {
                      "location": "query",
                      "type": "string",
                      "description": "Full-text search query string in this bookshelf."
                    },
                    "projection": {
                      "location": "query",
                      "enumDescriptions": [
                        "",
                        "Includes all volume data.",
                        "Includes a subset of fields in volumeInfo and accessInfo."
                      ],
                      "type": "string",
                      "enum": [
                        "PROJECTION_UNDEFINED",
                        "FULL",
                        "LITE"
                      ],
                      "description": "Restrict information returned to a set of selected fields."
                    },
                    "shelf": {
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "description": "The bookshelf ID or name retrieve volumes for."
                    },
                    "startIndex": {
                      "minimum": "0",
                      "location": "query",
                      "type": "integer",
                      "description": "Index of the first element to return (starts at 0)",
                      "format": "uint32"
                    },
                    "maxResults": {
                      "location": "query",
                      "type": "integer",
                      "minimum": "0",
                      "format": "uint32",
                      "description": "Maximum number of results to return"
                    },
                    "country": {
                      "description": "ISO-3166-1 code to override the IP-based location.",
                      "type": "string",
                      "location": "query"
                    }
                  },
                  "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/volumes",
                  "description": "Gets volume information for volumes on a bookshelf.",
                  "scopes": [
                    "https://www.googleapis.com/auth/books"
                  ],
                  "id": "books.mylibrary.bookshelves.volumes.list"
                }
              }
            }
          },
          "methods": {
            "clearVolumes": {
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "shelf": {
                  "location": "path",
                  "description": "ID of bookshelf from which to remove a volume.",
                  "type": "string",
                  "required": true
                }
              },
              "description": "Clears all volumes from a bookshelf.",
              "httpMethod": "POST",
              "parameterOrder": [
                "shelf"
              ],
              "path": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/clearVolumes",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Empty"
              },
              "id": "books.mylibrary.bookshelves.clearVolumes"
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameters": {
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                }
              },
              "id": "books.mylibrary.bookshelves.list",
              "httpMethod": "GET",
              "parameterOrder": [],
              "path": "books/v1/mylibrary/bookshelves",
              "response": {
                "$ref": "Bookshelves"
              },
              "description": "Retrieves a list of bookshelves belonging to the authenticated user.",
              "flatPath": "books/v1/mylibrary/bookshelves"
            },
            "get": {
              "path": "books/v1/mylibrary/bookshelves/{shelf}",
              "parameters": {
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "shelf": {
                  "description": "ID of bookshelf to retrieve.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "Bookshelf"
              },
              "parameterOrder": [
                "shelf"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}",
              "id": "books.mylibrary.bookshelves.get",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Retrieves metadata for a specific bookshelf belonging to the authenticated user."
            },
            "moveVolume": {
              "httpMethod": "POST",
              "response": {
                "$ref": "Empty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "id": "books.mylibrary.bookshelves.moveVolume",
              "path": "books/v1/mylibrary/bookshelves/{shelf}/moveVolume",
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "description": "ID of volume to move.",
                  "required": true,
                  "type": "string"
                },
                "shelf": {
                  "required": true,
                  "type": "string",
                  "description": "ID of bookshelf with the volume.",
                  "location": "path"
                },
                "source": {
                  "type": "string",
                  "location": "query",
                  "description": "String to identify the originator of this request."
                },
                "volumePosition": {
                  "description": "Position on shelf to move the item (0 puts the item before the current first item, 1 puts it between the first and the second and so on.)",
                  "location": "query",
                  "type": "integer",
                  "required": true,
                  "format": "int32"
                }
              },
              "description": "Moves a volume within a bookshelf.",
              "parameterOrder": [
                "shelf",
                "volumeId",
                "volumePosition"
              ]
            },
            "addVolume": {
              "response": {
                "$ref": "Empty"
              },
              "parameters": {
                "reason": {
                  "enumDescriptions": [
                    "",
                    "Volumes added from the PREX flow on iOS.",
                    "Volumes added from the Search flow on iOS.",
                    "Volumes added from the Onboarding flow."
                  ],
                  "description": "The reason for which the book is added to the library.",
                  "type": "string",
                  "enum": [
                    "REASON_UNDEFINED",
                    "IOS_PREX",
                    "IOS_SEARCH",
                    "ONBOARDING"
                  ],
                  "location": "query"
                },
                "shelf": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "ID of bookshelf to which to add a volume."
                },
                "volumeId": {
                  "type": "string",
                  "location": "query",
                  "description": "ID of volume to add.",
                  "required": true
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                }
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "httpMethod": "POST",
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/addVolume",
              "id": "books.mylibrary.bookshelves.addVolume",
              "description": "Adds a volume to a bookshelf."
            },
            "removeVolume": {
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Empty"
              },
              "path": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "parameters": {
                "shelf": {
                  "description": "ID of bookshelf from which to remove a volume.",
                  "required": true,
                  "location": "path",
                  "type": "string"
                },
                "volumeId": {
                  "location": "query",
                  "type": "string",
                  "description": "ID of volume to remove.",
                  "required": true
                },
                "reason": {
                  "enumDescriptions": [
                    "",
                    "Samples removed from the Onboarding flow."
                  ],
                  "enum": [
                    "REASON_UNDEFINED",
                    "ONBOARDING"
                  ],
                  "location": "query",
                  "type": "string",
                  "description": "The reason for which the book is removed from the library."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "shelf",
                "volumeId"
              ],
              "httpMethod": "POST",
              "flatPath": "books/v1/mylibrary/bookshelves/{shelf}/removeVolume",
              "description": "Removes a volume from a bookshelf.",
              "id": "books.mylibrary.bookshelves.removeVolume"
            }
          }
        },
        "annotations": {
          "methods": {
            "insert": {
              "httpMethod": "POST",
              "parameterOrder": [],
              "request": {
                "$ref": "Annotation"
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "description": "Inserts a new annotation.",
              "response": {
                "$ref": "Annotation"
              },
              "flatPath": "books/v1/mylibrary/annotations",
              "parameters": {
                "annotationId": {
                  "description": "The ID for the annotation to insert.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "type": "string",
                  "description": "String to identify the originator of this request.",
                  "location": "query"
                },
                "showOnlySummaryInResponse": {
                  "description": "Requests that only the summary of the specified layer be provided in the response.",
                  "location": "query",
                  "type": "boolean"
                },
                "country": {
                  "location": "query",
                  "description": "ISO-3166-1 code to override the IP-based location.",
                  "type": "string"
                }
              },
              "path": "books/v1/mylibrary/annotations",
              "id": "books.mylibrary.annotations.insert"
            },
            "delete": {
              "parameters": {
                "annotationId": {
                  "description": "The ID for the annotation to delete.",
                  "location": "path",
                  "type": "string",
                  "required": true
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                }
              },
              "parameterOrder": [
                "annotationId"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "httpMethod": "DELETE",
              "description": "Deletes an annotation.",
              "response": {
                "$ref": "Empty"
              },
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "id": "books.mylibrary.annotations.delete",
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}"
            },
            "update": {
              "parameters": {
                "annotationId": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "The ID for the annotation to update."
                },
                "source": {
                  "location": "query",
                  "description": "String to identify the originator of this request.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "response": {
                "$ref": "Annotation"
              },
              "path": "books/v1/mylibrary/annotations/{annotationId}",
              "description": "Updates an existing annotation.",
              "parameterOrder": [
                "annotationId"
              ],
              "request": {
                "$ref": "Annotation"
              },
              "flatPath": "books/v1/mylibrary/annotations/{annotationId}",
              "id": "books.mylibrary.annotations.update",
              "httpMethod": "PUT"
            },
            "list": {
              "flatPath": "books/v1/mylibrary/annotations",
              "description": "Retrieves a list of annotations, possibly filtered.",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "parameterOrder": [],
              "parameters": {
                "updatedMin": {
                  "location": "query",
                  "type": "string",
                  "description": "RFC 3339 timestamp to restrict to items updated since this timestamp (inclusive)."
                },
                "updatedMax": {
                  "description": "RFC 3339 timestamp to restrict to items updated prior to this timestamp (exclusive).",
                  "location": "query",
                  "type": "string"
                },
                "layerId": {
                  "description": "The layer ID to limit annotation by.",
                  "location": "query",
                  "type": "string"
                },
                "pageToken": {
                  "description": "The value of the nextToken from the previous page.",
                  "type": "string",
                  "location": "query"
                },
                "source": {
                  "location": "query",
                  "type": "string",
                  "description": "String to identify the originator of this request."
                },
                "layerIds": {
                  "repeated": true,
                  "location": "query",
                  "description": "The layer ID(s) to limit annotation by.",
                  "type": "string"
                },
                "maxResults": {
                  "location": "query",
                  "minimum": "0",
                  "maximum": "40",
                  "format": "uint32",
                  "type": "integer",
                  "description": "Maximum number of results to return"
                },
                "showDeleted": {
                  "description": "Set to true to return deleted annotations. updatedMin must be in the request to use this. Defaults to false.",
                  "location": "query",
                  "type": "boolean"
                },
                "contentVersion": {
                  "description": "The content version for the requested volume.",
                  "type": "string",
                  "location": "query"
                },
                "volumeId": {
                  "location": "query",
                  "description": "The volume to restrict annotations to.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "Annotations"
              },
              "path": "books/v1/mylibrary/annotations",
              "id": "books.mylibrary.annotations.list",
              "httpMethod": "GET"
            },
            "summary": {
              "path": "books/v1/mylibrary/annotations/summary",
              "response": {
                "$ref": "AnnotationsSummary"
              },
              "parameterOrder": [
                "layerIds",
                "volumeId"
              ],
              "parameters": {
                "volumeId": {
                  "location": "query",
                  "description": "Volume id to get the summary for.",
                  "type": "string",
                  "required": true
                },
                "layerIds": {
                  "required": true,
                  "type": "string",
                  "location": "query",
                  "description": "Array of layer IDs to get the summary for.",
                  "repeated": true
                }
              },
              "httpMethod": "POST",
              "description": "Gets the summary of specified layers.",
              "flatPath": "books/v1/mylibrary/annotations/summary",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "id": "books.mylibrary.annotations.summary"
            }
          }
        }
      }
    },
    "bookshelves": {
      "resources": {
        "volumes": {
          "methods": {
            "list": {
              "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}/volumes",
              "id": "books.bookshelves.volumes.list",
              "parameterOrder": [
                "userId",
                "shelf"
              ],
              "response": {
                "$ref": "Volumes"
              },
              "description": "Retrieves volumes in a specific bookshelf for the specified user.",
              "parameters": {
                "maxResults": {
                  "type": "integer",
                  "location": "query",
                  "format": "uint32",
                  "minimum": "0",
                  "description": "Maximum number of results to return"
                },
                "userId": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "ID of user for whom to retrieve bookshelf volumes."
                },
                "source": {
                  "description": "String to identify the originator of this request.",
                  "type": "string",
                  "location": "query"
                },
                "startIndex": {
                  "minimum": "0",
                  "type": "integer",
                  "format": "uint32",
                  "location": "query",
                  "description": "Index of the first element to return (starts at 0)"
                },
                "showPreorders": {
                  "location": "query",
                  "description": "Set to true to show pre-ordered books. Defaults to false.",
                  "type": "boolean"
                },
                "shelf": {
                  "description": "ID of bookshelf to retrieve volumes.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ],
              "path": "books/v1/users/{userId}/bookshelves/{shelf}/volumes"
            }
          }
        }
      },
      "methods": {
        "list": {
          "description": "Retrieves a list of public bookshelves for the specified user.",
          "id": "books.bookshelves.list",
          "path": "books/v1/users/{userId}/bookshelves",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "httpMethod": "GET",
          "parameters": {
            "source": {
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "userId": {
              "type": "string",
              "location": "path",
              "required": true,
              "description": "ID of user for whom to retrieve bookshelves."
            }
          },
          "parameterOrder": [
            "userId"
          ],
          "flatPath": "books/v1/users/{userId}/bookshelves",
          "response": {
            "$ref": "Bookshelves"
          }
        },
        "get": {
          "description": "Retrieves metadata for a specific bookshelf for the specified user.",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/users/{userId}/bookshelves/{shelf}",
          "path": "books/v1/users/{userId}/bookshelves/{shelf}",
          "id": "books.bookshelves.get",
          "parameters": {
            "shelf": {
              "location": "path",
              "description": "ID of bookshelf to retrieve.",
              "required": true,
              "type": "string"
            },
            "userId": {
              "required": true,
              "type": "string",
              "description": "ID of user for whom to retrieve bookshelves.",
              "location": "path"
            },
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [
            "userId",
            "shelf"
          ],
          "response": {
            "$ref": "Bookshelf"
          },
          "httpMethod": "GET"
        }
      }
    },
    "notification": {
      "methods": {
        "get": {
          "flatPath": "books/v1/notification/get",
          "path": "books/v1/notification/get",
          "id": "books.notification.get",
          "parameters": {
            "source": {
              "description": "String to identify the originator of this request.",
              "type": "string",
              "location": "query"
            },
            "notification_id": {
              "required": true,
              "description": "String to identify the notification.",
              "location": "query",
              "type": "string"
            },
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating notification title and body.",
              "location": "query",
              "type": "string"
            }
          },
          "httpMethod": "GET",
          "description": "Returns notification details for a given notification id.",
          "parameterOrder": [
            "notification_id"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Notification"
          }
        }
      }
    },
    "onboarding": {
      "methods": {
        "listCategoryVolumes": {
          "parameters": {
            "locale": {
              "location": "query",
              "type": "string",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset."
            },
            "pageSize": {
              "location": "query",
              "type": "integer",
              "description": "Number of maximum results per page to be included in the response.",
              "format": "uint32"
            },
            "pageToken": {
              "description": "The value of the nextToken from the previous page.",
              "type": "string",
              "location": "query"
            },
            "categoryId": {
              "description": "List of category ids requested.",
              "type": "string",
              "repeated": true,
              "location": "query"
            },
            "maxAllowedMaturityRating": {
              "description": "The maximum allowed maturity rating of returned volumes. Books with a higher maturity rating are filtered out.",
              "type": "string",
              "location": "query",
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ]
            }
          },
          "description": "List available volumes under categories for onboarding experience.",
          "response": {
            "$ref": "Volume2"
          },
          "id": "books.onboarding.listCategoryVolumes",
          "flatPath": "books/v1/onboarding/listCategoryVolumes",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "path": "books/v1/onboarding/listCategoryVolumes",
          "parameterOrder": []
        },
        "listCategories": {
          "response": {
            "$ref": "Category"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/onboarding/listCategories",
          "httpMethod": "GET",
          "description": "List categories for onboarding experience.",
          "path": "books/v1/onboarding/listCategories",
          "id": "books.onboarding.listCategories",
          "parameterOrder": [],
          "parameters": {
            "locale": {
              "description": "ISO-639-1 language and ISO-3166-1 country code. Default is en-US if unset.",
              "location": "query",
              "type": "string"
            }
          }
        }
      }
    },
    "personalizedstream": {
      "methods": {
        "get": {
          "flatPath": "books/v1/personalizedstream/get",
          "path": "books/v1/personalizedstream/get",
          "id": "books.personalizedstream.get",
          "description": "Returns a stream of personalized book clusters",
          "httpMethod": "GET",
          "parameters": {
            "source": {
              "type": "string",
              "description": "String to identify the originator of this request.",
              "location": "query"
            },
            "locale": {
              "location": "query",
              "description": "ISO-639-1 language and ISO-3166-1 country code. Ex: 'en_US'. Used for generating recommendations.",
              "type": "string"
            },
            "maxAllowedMaturityRating": {
              "enumDescriptions": [
                "",
                "Show books which are rated mature or lower.",
                "Show books which are rated not mature."
              ],
              "enum": [
                "MAX_ALLOWED_MATURITY_RATING_UNDEFINED",
                "MATURE",
                "not-mature"
              ],
              "type": "string",
              "description": "The maximum allowed maturity rating of returned recommendations. Books with a higher maturity rating are filtered out.",
              "location": "query"
            }
          },
          "response": {
            "$ref": "Discoveryclusters"
          },
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "series": {
      "methods": {
        "get": {
          "path": "books/v1/series/get",
          "parameters": {
            "series_id": {
              "repeated": true,
              "location": "query",
              "description": "String that identifies the series",
              "type": "string",
              "required": true
            }
          },
          "description": "Returns Series metadata for the given series ids.",
          "flatPath": "books/v1/series/get",
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Series"
          },
          "parameterOrder": [
            "series_id"
          ],
          "id": "books.series.get"
        }
      },
      "resources": {
        "membership": {
          "methods": {
            "get": {
              "id": "books.series.membership.get",
              "parameters": {
                "page_size": {
                  "format": "uint32",
                  "description": "Number of maximum results per page to be included in the response.",
                  "location": "query",
                  "type": "integer"
                },
                "page_token": {
                  "type": "string",
                  "location": "query",
                  "description": "The value of the nextToken from the previous page."
                },
                "series_id": {
                  "description": "String that identifies the series",
                  "location": "query",
                  "type": "string",
                  "required": true
                }
              },
              "path": "books/v1/series/membership/get",
              "description": "Returns Series membership data given the series id.",
              "response": {
                "$ref": "Seriesmembership"
              },
              "flatPath": "books/v1/series/membership/get",
              "parameterOrder": [
                "series_id"
              ],
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/books"
              ]
            }
          }
        }
      }
    },
    "dictionary": {
      "methods": {
        "listOfflineMetadata": {
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "cpksver"
          ],
          "parameters": {
            "cpksver": {
              "description": "The device/version ID from which to request the data.",
              "type": "string",
              "required": true,
              "location": "query"
            }
          },
          "flatPath": "books/v1/dictionary/listOfflineMetadata",
          "path": "books/v1/dictionary/listOfflineMetadata",
          "response": {
            "$ref": "Metadata"
          },
          "description": "Returns a list of offline dictionary metadata available",
          "id": "books.dictionary.listOfflineMetadata"
        }
      }
    },
    "myconfig": {
      "methods": {
        "syncVolumeLicenses": {
          "description": "Request downloaded content access for specified volumes on the My eBooks shelf.",
          "path": "books/v1/myconfig/syncVolumeLicenses",
          "flatPath": "books/v1/myconfig/syncVolumeLicenses",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source"
          ],
          "parameters": {
            "nonce": {
              "type": "string",
              "required": true,
              "description": "The client nonce value.",
              "location": "query"
            },
            "cpksver": {
              "type": "string",
              "location": "query",
              "required": true,
              "description": "The device/version ID from which to release the restriction."
            },
            "source": {
              "location": "query",
              "type": "string",
              "required": true,
              "description": "String to identify the originator of this request."
            },
            "includeNonComicsSeries": {
              "description": "Set to true to include non-comics series. Defaults to false.",
              "location": "query",
              "type": "boolean"
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query"
            },
            "features": {
              "repeated": true,
              "enum": [
                "FEATURES_UNDEFINED",
                "RENTALS"
              ],
              "description": "List of features supported by the client, i.e., 'RENTALS'",
              "location": "query",
              "enumDescriptions": [
                "",
                "Client supports rentals."
              ],
              "type": "string"
            },
            "volumeIds": {
              "description": "The volume(s) to request download restrictions for.",
              "location": "query",
              "type": "string",
              "repeated": true
            },
            "showPreorders": {
              "description": "Set to true to show pre-ordered books. Defaults to false.",
              "type": "boolean",
              "location": "query"
            }
          },
          "httpMethod": "POST",
          "id": "books.myconfig.syncVolumeLicenses",
          "response": {
            "$ref": "Volumes"
          }
        },
        "updateUserSettings": {
          "path": "books/v1/myconfig/updateUserSettings",
          "httpMethod": "POST",
          "parameters": {},
          "description": "Sets the settings for the user. If a sub-object is specified, it will overwrite the existing sub-object stored in the server. Unspecified sub-objects will retain the existing value.",
          "request": {
            "$ref": "Usersettings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "flatPath": "books/v1/myconfig/updateUserSettings",
          "id": "books.myconfig.updateUserSettings",
          "response": {
            "$ref": "Usersettings"
          },
          "parameterOrder": []
        },
        "getUserSettings": {
          "parameterOrder": [],
          "path": "books/v1/myconfig/getUserSettings",
          "response": {
            "$ref": "Usersettings"
          },
          "flatPath": "books/v1/myconfig/getUserSettings",
          "parameters": {
            "country": {
              "type": "string",
              "location": "query",
              "description": "Unused. Added only to workaround TEX mandatory request template requirement"
            }
          },
          "httpMethod": "GET",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "id": "books.myconfig.getUserSettings",
          "description": "Gets the current settings for the user."
        },
        "requestAccess": {
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {
            "cpksver": {
              "type": "string",
              "required": true,
              "location": "query",
              "description": "The device/version ID from which to request the restrictions."
            },
            "volumeId": {
              "required": true,
              "location": "query",
              "description": "The volume to request concurrent/download restrictions for.",
              "type": "string"
            },
            "nonce": {
              "location": "query",
              "type": "string",
              "description": "The client nonce value.",
              "required": true
            },
            "source": {
              "required": true,
              "type": "string",
              "location": "query",
              "description": "String to identify the originator of this request."
            },
            "locale": {
              "type": "string",
              "location": "query",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US."
            },
            "licenseTypes": {
              "description": "The type of access license to request. If not specified, the default is BOTH.",
              "location": "query",
              "type": "string",
              "enum": [
                "LICENSE_TYPES_UNDEFINED",
                "BOTH",
                "CONCURRENT",
                "DOWNLOAD"
              ],
              "enumDescriptions": [
                "",
                "Both concurrent and download licenses.",
                "Concurrent access license.",
                "Offline download access license."
              ]
            }
          },
          "description": "Request concurrent and download access restrictions.",
          "parameterOrder": [
            "cpksver",
            "nonce",
            "source",
            "volumeId"
          ],
          "response": {
            "$ref": "RequestAccessData"
          },
          "id": "books.myconfig.requestAccess",
          "flatPath": "books/v1/myconfig/requestAccess",
          "path": "books/v1/myconfig/requestAccess"
        },
        "releaseDownloadAccess": {
          "parameterOrder": [
            "cpksver",
            "volumeIds"
          ],
          "parameters": {
            "volumeIds": {
              "repeated": true,
              "type": "string",
              "location": "query",
              "description": "The volume(s) to release restrictions for.",
              "required": true
            },
            "locale": {
              "type": "string",
              "description": "ISO-639-1, ISO-3166-1 codes for message localization, i.e. en_US.",
              "location": "query"
            },
            "cpksver": {
              "required": true,
              "description": "The device/version ID from which to release the restriction.",
              "location": "query",
              "type": "string"
            },
            "source": {
              "location": "query",
              "description": "String to identify the originator of this request.",
              "type": "string"
            }
          },
          "response": {
            "$ref": "DownloadAccesses"
          },
          "httpMethod": "POST",
          "flatPath": "books/v1/myconfig/releaseDownloadAccess",
          "description": "Release downloaded content access restriction.",
          "path": "books/v1/myconfig/releaseDownloadAccess",
          "id": "books.myconfig.releaseDownloadAccess",
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ]
        }
      }
    },
    "cloudloading": {
      "methods": {
        "deleteBook": {
          "parameterOrder": [
            "volumeId"
          ],
          "flatPath": "books/v1/cloudloading/deleteBook",
          "parameters": {
            "volumeId": {
              "type": "string",
              "location": "query",
              "required": true,
              "description": "The id of the book to be removed."
            }
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "response": {
            "$ref": "Empty"
          },
          "httpMethod": "POST",
          "id": "books.cloudloading.deleteBook",
          "path": "books/v1/cloudloading/deleteBook",
          "description": "Remove the book and its contents"
        },
        "addBook": {
          "parameters": {
            "mime_type": {
              "location": "query",
              "description": "The document MIME type. It can be set only if the drive_document_id is set.",
              "type": "string"
            },
            "upload_client_token": {
              "type": "string",
              "location": "query",
              "description": "Scotty upload token."
            },
            "name": {
              "type": "string",
              "location": "query",
              "description": "The document name. It can be set only if the drive_document_id is set."
            },
            "drive_document_id": {
              "type": "string",
              "location": "query",
              "description": "A drive document id. The upload_client_token must not be set."
            }
          },
          "httpMethod": "POST",
          "flatPath": "books/v1/cloudloading/addBook",
          "parameterOrder": [],
          "id": "books.cloudloading.addBook",
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "description": "Add a user-upload volume and triggers processing.",
          "path": "books/v1/cloudloading/addBook"
        },
        "updateBook": {
          "scopes": [
            "https://www.googleapis.com/auth/books"
          ],
          "parameters": {},
          "id": "books.cloudloading.updateBook",
          "parameterOrder": [],
          "response": {
            "$ref": "BooksCloudloadingResource"
          },
          "path": "books/v1/cloudloading/updateBook",
          "httpMethod": "POST",
          "description": "Updates a user-upload volume.",
          "flatPath": "books/v1/cloudloading/updateBook",
          "request": {
            "$ref": "BooksCloudloadingResource"
          }
        }
      }
    }
  },
  "version": "v1",
  "baseUrl": "https://books.googleapis.com/",
  "parameters": {
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "prettyPrint": {
      "location": "query",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "default": "true"
    },
    "key": {
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "type": "string",
      "description": "V1 error format.",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "access_token": {
      "type": "string",
      "description": "OAuth access token.",
      "location": "query"
    },
    "alt": {
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "type": "string"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    }
  }
}
