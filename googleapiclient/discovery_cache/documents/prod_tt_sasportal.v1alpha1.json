{
  "description": "",
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "batchPath": "batch",
  "discoveryVersion": "v1",
  "canonicalName": "SAS Portal Testing",
  "resources": {
    "deployments": {
      "resources": {
        "devices": {
          "methods": {
            "updateSigned": {
              "id": "prod_tt_sasportal.deployments.devices.updateSigned",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:updateSigned",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the device to update.",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Updates a signed device.",
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "move": {
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the device to move."
                }
              },
              "id": "prod_tt_sasportal.deployments.devices.move",
              "path": "v1alpha1/{+name}:move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "httpMethod": "POST",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:move",
              "description": "Moves a device under another node or customer.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              }
            },
            "signDevice": {
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:signDevice",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "description": "Output only. The resource path name.",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "required": true
                }
              },
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "id": "prod_tt_sasportal.deployments.devices.signDevice",
              "description": "Signs a device.",
              "path": "v1alpha1/{+name}:signDevice"
            },
            "patch": {
              "httpMethod": "PATCH",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.deployments.devices.patch",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}",
              "description": "Updates a device.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Fields to be updated.",
                  "type": "string"
                },
                "name": {
                  "description": "Output only. The resource path name.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$"
                }
              }
            },
            "delete": {
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device.",
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.deployments.devices.delete",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Deletes a device.",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}"
            },
            "get": {
              "httpMethod": "GET",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the device."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.deployments.devices.get",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "description": "Gets details about a device."
            }
          }
        }
      }
    },
    "customers": {
      "resources": {
        "deployments": {
          "resources": {
            "devices": {
              "methods": {
                "createSigned": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a signed device under a node or customer.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the parent resource."
                    }
                  },
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "id": "prod_tt_sasportal.customers.deployments.devices.createSigned",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "httpMethod": "POST"
                },
                "list": {
                  "parameters": {
                    "pageSize": {
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "location": "query",
                      "type": "integer",
                      "format": "int32"
                    },
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query"
                    },
                    "parent": {
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the parent resource."
                    },
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                      "type": "string"
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "path": "v1alpha1/{+parent}/devices",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "id": "prod_tt_sasportal.customers.deployments.devices.list",
                  "httpMethod": "GET"
                },
                "create": {
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "required": true,
                      "pattern": "^customers/[^/]+/deployments/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/devices",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "description": "Creates a device under a node or customer.",
                  "id": "prod_tt_sasportal.customers.deployments.devices.create"
                }
              }
            }
          },
          "methods": {
            "move": {
              "path": "v1alpha1/{+name}:move",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}:move",
              "description": "Moves a deployment under another node or customer.",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.deployments.move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the deployment to move.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "required": true
                }
              }
            }
          }
        },
        "devices": {
          "methods": {
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Updates a device.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "httpMethod": "PATCH",
              "parameters": {
                "updateMask": {
                  "description": "Fields to be updated.",
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query"
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "description": "Output only. The resource path name."
                }
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.patch",
              "path": "v1alpha1/{+name}"
            },
            "move": {
              "path": "v1alpha1/{+name}:move",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "description": "Moves a device under another node or customer.",
              "id": "prod_tt_sasportal.customers.devices.move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the device to move.",
                  "required": true
                }
              },
              "httpMethod": "POST"
            },
            "list": {
              "path": "v1alpha1/{+parent}/devices",
              "id": "prod_tt_sasportal.customers.devices.list",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Lists devices under a node or customer.",
              "parameters": {
                "pageToken": {
                  "location": "query",
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                },
                "pageSize": {
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "type": "integer",
                  "location": "query",
                  "format": "int32"
                },
                "parent": {
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "required": true
                },
                "filter": {
                  "location": "query",
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "httpMethod": "GET"
            },
            "signDevice": {
              "httpMethod": "POST",
              "path": "v1alpha1/{+name}:signDevice",
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Output only. The resource path name."
                }
              },
              "description": "Signs a device.",
              "id": "prod_tt_sasportal.customers.devices.signDevice",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              }
            },
            "get": {
              "id": "prod_tt_sasportal.customers.devices.get",
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              },
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET",
              "description": "Gets details about a device.",
              "parameterOrder": [
                "name"
              ]
            },
            "createSigned": {
              "id": "prod_tt_sasportal.customers.devices.createSigned",
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Creates a signed device under a node or customer.",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The name of the parent resource."
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "bulk": {
              "path": "v1alpha1/{+parent}/devices:bulk",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "id": "prod_tt_sasportal.customers.devices.bulk",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices:bulk",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "type": "string",
                  "pattern": "^customers/[^/]+$",
                  "location": "path"
                }
              }
            },
            "create": {
              "path": "v1alpha1/{+parent}/devices",
              "id": "prod_tt_sasportal.customers.devices.create",
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "description": "Creates a device under a node or customer.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalDevice"
              }
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "description": "Deletes a device.",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "id": "prod_tt_sasportal.customers.devices.delete",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "required": true
                }
              }
            },
            "updateSigned": {
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the device to update.",
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "required": true
                }
              },
              "path": "v1alpha1/{+name}:updateSigned",
              "description": "Updates a signed device.",
              "httpMethod": "PATCH",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "id": "prod_tt_sasportal.customers.devices.updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned"
            }
          }
        },
        "nodes": {
          "methods": {
            "create": {
              "id": "prod_tt_sasportal.customers.nodes.create",
              "request": {
                "$ref": "SasPortalNode"
              },
              "parameters": {
                "parent": {
                  "description": "Required. The parent resource name where the node is to be created.",
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "response": {
                "$ref": "SasPortalNode"
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "description": "Creates a new node.",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/nodes",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "get": {
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "description": "Required. The name of the node.",
                  "type": "string"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.customers.nodes.get",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Returns a requested node.",
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalNode"
              }
            },
            "patch": {
              "response": {
                "$ref": "SasPortalNode"
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "request": {
                "$ref": "SasPortalNode"
              },
              "id": "prod_tt_sasportal.customers.nodes.patch",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Output only. Resource name.",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "required": true
                },
                "updateMask": {
                  "description": "Fields to be updated.",
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask"
                }
              },
              "description": "Updates an existing node."
            },
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "path": "v1alpha1/{+parent}/nodes",
              "id": "prod_tt_sasportal.customers.nodes.list",
              "parameters": {
                "parent": {
                  "location": "path",
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "required": true,
                  "pattern": "^customers/[^/]+$"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "location": "query",
                  "format": "int32",
                  "description": "The maximum number of nodes to return in the response."
                }
              },
              "description": "Lists nodes.",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              }
            },
            "delete": {
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "parameters": {
                "name": {
                  "description": "Required. The name of the node.",
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "location": "path",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "description": "Deletes a node.",
              "id": "prod_tt_sasportal.customers.nodes.delete",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "httpMethod": "DELETE"
            },
            "move": {
              "description": "Moves a node under another node or customer.",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move",
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the node to move.",
                  "location": "path",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.nodes.move",
              "path": "v1alpha1/{+name}:move"
            }
          },
          "resources": {
            "nodes": {
              "methods": {
                "list": {
                  "path": "v1alpha1/{+parent}/nodes",
                  "description": "Lists nodes.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.nodes.list",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "description": "The maximum number of nodes to return in the response.",
                      "type": "integer"
                    },
                    "parent": {
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "location": "path",
                      "required": true,
                      "type": "string",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$"
                    },
                    "pageToken": {
                      "location": "query",
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from."
                    }
                  },
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes"
                },
                "create": {
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "parameters": {
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "prod_tt_sasportal.customers.nodes.nodes.create",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Creates a new node.",
                  "path": "v1alpha1/{+parent}/nodes"
                }
              }
            },
            "devices": {
              "methods": {
                "create": {
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "location": "path",
                      "required": true,
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.customers.nodes.devices.create",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Creates a device under a node or customer."
                },
                "createSigned": {
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "type": "string"
                    }
                  },
                  "id": "prod_tt_sasportal.customers.nodes.devices.createSigned",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Creates a signed device under a node or customer.",
                  "response": {
                    "$ref": "SasPortalDevice"
                  }
                },
                "list": {
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices",
                  "description": "Lists devices under a node or customer.",
                  "id": "prod_tt_sasportal.customers.nodes.devices.list",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "httpMethod": "GET",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "location": "path"
                    },
                    "filter": {
                      "type": "string",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                      "location": "query"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "location": "query",
                      "type": "integer"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "methods": {
        "list": {
          "id": "prod_tt_sasportal.customers.list",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/customers",
          "flatPath": "v1alpha1/customers",
          "httpMethod": "GET",
          "parameters": {
            "pageToken": {
              "description": "A pagination token returned from a previous call to ListCustomers method that indicates where this listing should continue from.",
              "location": "query",
              "type": "string"
            },
            "pageSize": {
              "format": "int32",
              "type": "integer",
              "location": "query",
              "description": "The maximum number of customers to return in the response."
            }
          },
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "parameterOrder": [],
          "description": "Returns a list of requested customers."
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "flatPath": "v1alpha1/customers/{customersId}",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "required": true,
              "description": "Required. The name of the customer.",
              "type": "string",
              "location": "path",
              "pattern": "^customers/[^/]+$"
            }
          },
          "description": "Returns a requested customer.",
          "id": "prod_tt_sasportal.customers.get",
          "parameterOrder": [
            "name"
          ],
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "path": "v1alpha1/{+name}"
        },
        "patch": {
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "parameters": {
            "updateMask": {
              "location": "query",
              "type": "string",
              "description": "Fields to be updated.",
              "format": "google-fieldmask"
            },
            "name": {
              "description": "Output only. Resource name of the customer.",
              "location": "path",
              "pattern": "^customers/[^/]+$",
              "required": true,
              "type": "string"
            }
          },
          "httpMethod": "PATCH",
          "id": "prod_tt_sasportal.customers.patch",
          "parameterOrder": [
            "name"
          ],
          "flatPath": "v1alpha1/customers/{customersId}",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/{+name}",
          "description": "Updates an existing customer."
        }
      }
    },
    "installer": {
      "methods": {
        "generateSecret": {
          "parameterOrder": [],
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "httpMethod": "POST",
          "path": "v1alpha1/installer:generateSecret",
          "description": "Generates a secret to be used with the ValidateInstaller method",
          "id": "prod_tt_sasportal.installer.generateSecret",
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          },
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          },
          "flatPath": "v1alpha1/installer:generateSecret"
        },
        "validate": {
          "path": "v1alpha1/installer:validate",
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "flatPath": "v1alpha1/installer:validate",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [],
          "httpMethod": "POST",
          "id": "prod_tt_sasportal.installer.validate",
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          },
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          }
        }
      }
    },
    "nodes": {
      "resources": {
        "deployments": {
          "resources": {
            "devices": {
              "methods": {
                "list": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "format": "int32"
                    },
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                      "type": "string"
                    }
                  },
                  "path": "v1alpha1/{+parent}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "GET",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "id": "prod_tt_sasportal.nodes.deployments.devices.list",
                  "description": "Lists devices under a node or customer.",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  }
                },
                "createSigned": {
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.deployments.devices.createSigned",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "required": true
                    }
                  },
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "description": "Creates a signed device under a node or customer.",
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:createSigned"
                },
                "create": {
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "description": "Creates a device under a node or customer.",
                  "id": "prod_tt_sasportal.nodes.deployments.devices.create",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          },
          "methods": {
            "move": {
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Moves a deployment under another node or customer.",
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "description": "Required. The name of the deployment to move.",
                  "required": true,
                  "location": "path"
                }
              },
              "id": "prod_tt_sasportal.nodes.deployments.move",
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "parameterOrder": [
                "name"
              ]
            }
          }
        },
        "devices": {
          "methods": {
            "patch": {
              "parameters": {
                "updateMask": {
                  "description": "Fields to be updated.",
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask"
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "required": true,
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "path": "v1alpha1/{+name}",
              "description": "Updates a device.",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.devices.patch",
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalDevice"
              }
            },
            "move": {
              "path": "v1alpha1/{+name}:move",
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the device to move.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "required": true
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "httpMethod": "POST",
              "id": "prod_tt_sasportal.nodes.devices.move",
              "description": "Moves a device under another node or customer.",
              "parameterOrder": [
                "name"
              ]
            },
            "bulk": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "type": "string",
                  "location": "path"
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.bulk",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:bulk",
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "path": "v1alpha1/{+parent}/devices:bulk",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              }
            },
            "create": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "path": "v1alpha1/{+parent}/devices",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              },
              "request": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "parent": {
                  "pattern": "^nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "description": "Required. The name of the parent resource."
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.create",
              "description": "Creates a device under a node or customer."
            },
            "delete": {
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true
                }
              },
              "httpMethod": "DELETE",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "description": "Deletes a device.",
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.nodes.devices.delete"
            },
            "get": {
              "httpMethod": "GET",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the device."
                }
              },
              "description": "Gets details about a device.",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.devices.get"
            },
            "updateSigned": {
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device to update.",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "path": "v1alpha1/{+name}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Updates a signed device.",
              "id": "prod_tt_sasportal.nodes.devices.updateSigned"
            },
            "signDevice": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice",
              "id": "prod_tt_sasportal.nodes.devices.signDevice",
              "description": "Signs a device.",
              "path": "v1alpha1/{+name}:signDevice",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "httpMethod": "POST",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Output only. The resource path name.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "type": "string"
                }
              },
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "path": "v1alpha1/{+parent}/devices",
              "id": "prod_tt_sasportal.nodes.devices.list",
              "description": "Lists devices under a node or customer.",
              "parameters": {
                "pageSize": {
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "location": "query"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                  "type": "string"
                },
                "filter": {
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                  "location": "query",
                  "type": "string"
                },
                "parent": {
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices"
            },
            "createSigned": {
              "description": "Creates a signed device under a node or customer.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned",
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the parent resource."
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "id": "prod_tt_sasportal.nodes.devices.createSigned",
              "httpMethod": "POST"
            }
          }
        },
        "nodes": {
          "methods": {
            "delete": {
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the node.",
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "DELETE",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.delete",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "description": "Deletes a node."
            },
            "move": {
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "path": "v1alpha1/{+name}:move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "description": "Moves a node under another node or customer.",
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the node to move.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "httpMethod": "POST",
              "id": "prod_tt_sasportal.nodes.nodes.move",
              "response": {
                "$ref": "SasPortalOperation"
              }
            },
            "get": {
              "id": "prod_tt_sasportal.nodes.nodes.get",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Required. The name of the node."
                }
              },
              "path": "v1alpha1/{+name}",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "description": "Returns a requested node.",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET"
            },
            "list": {
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/nodes",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "type": "string",
                  "pattern": "^nodes/[^/]+$"
                },
                "pageToken": {
                  "type": "string",
                  "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                  "location": "query"
                },
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of nodes to return in the response.",
                  "format": "int32",
                  "location": "query"
                }
              },
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "id": "prod_tt_sasportal.nodes.nodes.list",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Lists nodes."
            },
            "create": {
              "request": {
                "$ref": "SasPortalNode"
              },
              "path": "v1alpha1/{+parent}/nodes",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Creates a new node.",
              "parameters": {
                "parent": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "location": "path",
                  "required": true
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalNode"
              },
              "id": "prod_tt_sasportal.nodes.nodes.create"
            },
            "patch": {
              "description": "Updates an existing node.",
              "httpMethod": "PATCH",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "location": "path",
                  "required": true,
                  "description": "Output only. Resource name."
                },
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "description": "Fields to be updated.",
                  "location": "query"
                }
              },
              "id": "prod_tt_sasportal.nodes.nodes.patch",
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalNode"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}"
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "bulk": {
                  "response": {
                    "$ref": "SasPortalBulkCreateDeviceResponse"
                  },
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices:bulk",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "request": {
                    "$ref": "SasPortalBulkCreateDeviceRequest"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:bulk",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.bulk",
                  "description": "Creates a device under a node or customer. Returned devices are unordered.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ]
                },
                "list": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "parameters": {
                    "filter": {
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the parent resource."
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from."
                    },
                    "pageSize": {
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "type": "integer",
                      "format": "int32"
                    }
                  },
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "description": "Lists devices under a node or customer.",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.list",
                  "path": "v1alpha1/{+parent}/devices",
                  "httpMethod": "GET"
                },
                "createSigned": {
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "httpMethod": "POST",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.createSigned",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Creates a signed device under a node or customer.",
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the parent resource."
                    }
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned"
                },
                "create": {
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "description": "Creates a device under a node or customer.",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.devices.create",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "location": "path",
                      "type": "string",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    }
                  }
                }
              }
            },
            "nodes": {
              "methods": {
                "list": {
                  "description": "Lists nodes.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.list",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "description": "The maximum number of nodes to return in the response.",
                      "format": "int32",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  }
                },
                "create": {
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "description": "Creates a new node.",
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "description": "Required. The parent resource name where the node is to be created.",
                      "type": "string",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.create",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          }
        }
      },
      "methods": {
        "get": {
          "description": "Returns a requested node.",
          "id": "prod_tt_sasportal.nodes.get",
          "httpMethod": "GET",
          "parameters": {
            "name": {
              "description": "Required. The name of the node.",
              "pattern": "^nodes/[^/]+$",
              "location": "path",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "SasPortalNode"
          },
          "path": "v1alpha1/{+name}",
          "flatPath": "v1alpha1/nodes/{nodesId}",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [
            "name"
          ]
        }
      }
    },
    "policies": {
      "methods": {
        "test": {
          "description": "Returns permissions that a caller has on the specified resource.",
          "parameters": {},
          "parameterOrder": [],
          "path": "v1alpha1/policies:test",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "httpMethod": "POST",
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          },
          "flatPath": "v1alpha1/policies:test",
          "id": "prod_tt_sasportal.policies.test"
        },
        "set": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "httpMethod": "POST",
          "flatPath": "v1alpha1/policies:set",
          "id": "prod_tt_sasportal.policies.set",
          "parameters": {},
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "path": "v1alpha1/policies:set",
          "parameterOrder": [],
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          }
        },
        "get": {
          "httpMethod": "POST",
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          },
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "path": "v1alpha1/policies:get",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
          "parameters": {},
          "flatPath": "v1alpha1/policies:get",
          "id": "prod_tt_sasportal.policies.get",
          "parameterOrder": []
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "rootUrl": "https://prod-tt-sasportal.googleapis.com/",
  "name": "prod_tt_sasportal",
  "title": "SAS Portal API (Testing)",
  "basePath": "",
  "version_module": true,
  "revision": "20201210",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "View your email address"
        }
      }
    }
  },
  "parameters": {
    "key": {
      "type": "string",
      "location": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token."
    },
    "prettyPrint": {
      "default": "true",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "location": "query"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "location": "query",
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "alt": {
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "location": "query",
      "default": "json",
      "description": "Data format for response.",
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ]
    },
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "description": "V1 error format.",
      "location": "query",
      "type": "string",
      "enum": [
        "1",
        "2"
      ]
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    }
  },
  "mtlsRootUrl": "https://prod-tt-sasportal.mtls.googleapis.com/",
  "baseUrl": "https://prod-tt-sasportal.googleapis.com/",
  "protocol": "rest",
  "id": "prod_tt_sasportal:v1alpha1",
  "kind": "discovery#restDescription",
  "version": "v1alpha1",
  "schemas": {
    "SasPortalListNodesResponse": {
      "id": "SasPortalListNodesResponse",
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "description": "The nodes that match the request.",
          "items": {
            "$ref": "SasPortalNode"
          }
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListNodes method that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
          "type": "string"
        }
      },
      "description": "Response for ListNodes method."
    },
    "SasPortalDeviceAirInterface": {
      "type": "object",
      "description": "Information about the device's air interface.",
      "id": "SasPortalDeviceAirInterface",
      "properties": {
        "radioTechnology": {
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "This field specifies the radio access technology that is used for the CBSD. Conditional"
        },
        "supportedSpec": {
          "type": "string",
          "description": "This field is related to the radioTechnology field and provides the air interface specification that the CBSD is compliant with at the time of registration. Optional"
        }
      }
    },
    "SasPortalSignDeviceRequest": {
      "properties": {
        "device": {
          "$ref": "SasPortalDevice",
          "description": "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set."
        }
      },
      "description": "Request for SignDevice method.",
      "id": "SasPortalSignDeviceRequest",
      "type": "object"
    },
    "SasPortalGenerateSecretRequest": {
      "description": "Request for GenerateSecret method] [spectrum.sas.portal.v1alpha1.DeviceManager.GenerateSecret].",
      "id": "SasPortalGenerateSecretRequest",
      "type": "object",
      "properties": {}
    },
    "SasPortalMoveDeploymentRequest": {
      "id": "SasPortalMoveDeploymentRequest",
      "type": "object",
      "description": "Request for MoveDeployment method.",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource Node or Customer to reparent the deployment under."
        }
      }
    },
    "SasPortalGetPolicyRequest": {
      "id": "SasPortalGetPolicyRequest",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being requested."
        }
      },
      "description": "Request message for `GetPolicy` method.",
      "type": "object"
    },
    "SasPortalBulkCreateDeviceResponse": {
      "id": "SasPortalBulkCreateDeviceResponse",
      "type": "object",
      "properties": {
        "devices": {
          "description": "Required. The devices that were imported.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDevice"
          }
        }
      },
      "description": "Response for BulkCreateDevice method."
    },
    "SasPortalDeviceMetadata": {
      "description": "Device data overridable by both SAS Portal and registration requests.",
      "properties": {},
      "type": "object",
      "id": "SasPortalDeviceMetadata"
    },
    "SasPortalStatus": {
      "id": "SasPortalStatus",
      "properties": {
        "code": {
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer",
          "format": "int32"
        },
        "details": {
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors)."
    },
    "SasPortalDeviceConfig": {
      "description": "Information about the device configuration.",
      "type": "object",
      "id": "SasPortalDeviceConfig",
      "properties": {
        "installationParams": {
          "$ref": "SasPortalInstallationParams",
          "description": "Installation parameters for the device."
        },
        "category": {
          "description": "FCC category of the device.",
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ],
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ],
          "type": "string"
        },
        "state": {
          "description": "State of the configuration.",
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "type": "string",
          "enumDescriptions": [
            "",
            "",
            ""
          ]
        },
        "airInterface": {
          "description": "Information about this device's air interface.",
          "$ref": "SasPortalDeviceAirInterface"
        },
        "model": {
          "$ref": "SasPortalDeviceModel",
          "description": "Information about this device model."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output-only. The last time the device configuration was edited."
        },
        "isSigned": {
          "description": "Output-only. Whether the configuration has been signed by a CPI.",
          "type": "boolean"
        },
        "userId": {
          "description": "The identifier of a device user.",
          "type": "string"
        },
        "measurementCapabilities": {
          "items": {
            "enumDescriptions": [
              "",
              "",
              ""
            ],
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ],
            "type": "string"
          },
          "description": "Measurement reporting capabilities of the device.",
          "type": "array"
        },
        "callSign": {
          "type": "string",
          "description": "The call sign of the device operator."
        }
      }
    },
    "SasPortalCreateSignedDeviceRequest": {
      "id": "SasPortalCreateSignedDeviceRequest",
      "description": "Request for CreateSignedDevice method.",
      "type": "object",
      "properties": {
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (cpiId) from the Certified Professional Installers database."
        },
        "encodedDevice": {
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the [Device]. The user_id field must be set.",
          "type": "string",
          "format": "byte"
        }
      }
    },
    "SasPortalPolicy": {
      "properties": {
        "assignments": {
          "items": {
            "$ref": "SasPortalAssignment"
          },
          "type": "array"
        },
        "etag": {
          "format": "byte",
          "description": "The [etag] is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the [etag] in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An [etag] is returned in the response to [GetPolicy], and systems are expected to put that etag in the request to [SetPolicy] to ensure that their change will be applied to the same version of the policy. If no [etag] is provided in the call to [SetPolicy], then the existing policy is overwritten blindly.",
          "type": "string"
        }
      },
      "description": "Defines an access control policy to the resources.",
      "id": "SasPortalPolicy",
      "type": "object"
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "id": "SasPortalUpdateSignedDeviceRequest",
      "description": "Request for UpdateSignedDevice method.",
      "type": "object",
      "properties": {
        "encodedDevice": {
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
          "type": "string",
          "format": "byte"
        },
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database."
        }
      }
    },
    "SasPortalNode": {
      "id": "SasPortalNode",
      "description": "The Node.",
      "type": "object",
      "properties": {
        "displayName": {
          "description": "The node's display name.",
          "type": "string"
        },
        "sasUserIds": {
          "items": {
            "type": "string"
          },
          "description": "User ids used by the devices belonging to this node.",
          "type": "array"
        },
        "name": {
          "description": "Output only. Resource name.",
          "type": "string"
        }
      }
    },
    "SasPortalSetPolicyRequest": {
      "id": "SasPortalSetPolicyRequest",
      "description": "Request message for `SetPolicy` method.",
      "properties": {
        "policy": {
          "$ref": "SasPortalPolicy",
          "description": "Required. The policy to be applied to the `resource`."
        },
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being specified. This policy replaces any existing policy."
        }
      },
      "type": "object"
    },
    "SasPortalListDevicesResponse": {
      "description": "Response for ListDevices method.",
      "type": "object",
      "properties": {
        "devices": {
          "description": "The devices that match the request.",
          "items": {
            "$ref": "SasPortalDevice"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDevices method that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices.",
          "type": "string"
        }
      },
      "id": "SasPortalListDevicesResponse"
    },
    "SasPortalAssignment": {
      "id": "SasPortalAssignment",
      "properties": {
        "members": {
          "type": "array",
          "description": "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "description": "Required. Role that is assigned to `members`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Associates `members` with a `role`."
    },
    "SasPortalDevice": {
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Device display name."
        },
        "preloadedConfig": {
          "$ref": "SasPortalDeviceConfig",
          "description": "Configuration of the device, as specified via SAS Portal API."
        },
        "fccId": {
          "type": "string",
          "description": "The FCC identifier of the device."
        },
        "serialNumber": {
          "type": "string",
          "description": "A serial number assigned to the device by the device manufacturer."
        },
        "deviceMetadata": {
          "$ref": "SasPortalDeviceMetadata",
          "description": "Device parameters that can be overridden by both SAS Portal and SAS registration requests."
        },
        "state": {
          "description": "Output only. Device state.",
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered with SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ],
          "type": "string",
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ]
        },
        "recommendedChannels": {
          "items": {
            "$ref": "SasPortalChannelWithScore"
          },
          "description": "Output only. Recommended channels.",
          "type": "array",
          "readOnly": true
        },
        "recommendedPowerDbmPerMhz": {
          "format": "double",
          "type": "number",
          "readOnly": true,
          "description": "Output only. Recommended power for the device."
        },
        "activeConfig": {
          "$ref": "SasPortalDeviceConfig",
          "description": "Output only. Current configuration of the device as registered to the SAS."
        },
        "grants": {
          "items": {
            "$ref": "SasPortalDeviceGrant"
          },
          "type": "array",
          "description": "Output only. Grants held by the device."
        },
        "name": {
          "description": "Output only. The resource path name.",
          "type": "string"
        }
      },
      "id": "SasPortalDevice"
    },
    "SasPortalValidateInstallerResponse": {
      "id": "SasPortalValidateInstallerResponse",
      "description": "Response for ValidateInstaller method] [spectrum.sas.portal.v1alpha1.DeviceManager.ValidateInstaller].",
      "type": "object",
      "properties": {}
    },
    "SasPortalValidateInstallerRequest": {
      "description": "Request for ValidateInstaller method.",
      "id": "SasPortalValidateInstallerRequest",
      "properties": {
        "encodedSecret": {
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret."
        },
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (cpiId) from the Certified Professional Installers database."
        },
        "secret": {
          "description": "Required. Secret returned by the GenerateSecret method.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SasPortalDeviceModel": {
      "properties": {
        "hardwareVersion": {
          "description": "The hardware version of the device.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "The name of the device model."
        },
        "firmwareVersion": {
          "description": "The firmware version of the device.",
          "type": "string"
        },
        "softwareVersion": {
          "type": "string",
          "description": "The software version of the device."
        },
        "vendor": {
          "type": "string",
          "description": "The name of the device vendor."
        }
      },
      "description": "Information about the model of the device.",
      "id": "SasPortalDeviceModel",
      "type": "object"
    },
    "SasPortalMoveNodeRequest": {
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource node or Customer) to reparent the node under."
        }
      },
      "description": "Request for MoveNode method.",
      "id": "SasPortalMoveNodeRequest",
      "type": "object"
    },
    "SasPortalGenerateSecretResponse": {
      "description": "Response for GenerateSecret method.",
      "id": "SasPortalGenerateSecretResponse",
      "type": "object",
      "properties": {
        "secret": {
          "type": "string",
          "description": "The secret generated by the string and used by [ValidateInstaller] method."
        }
      }
    },
    "SasPortalTestPermissionsRequest": {
      "description": "Request message for `TestPermissions` method.",
      "type": "object",
      "properties": {
        "resource": {
          "description": "Required. The resource for which the permissions are being requested.",
          "type": "string"
        },
        "permissions": {
          "description": "The set of permissions to check for the `resource`.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SasPortalTestPermissionsRequest"
    },
    "SasPortalListCustomersResponse": {
      "type": "object",
      "properties": {
        "customers": {
          "type": "array",
          "description": "The list of customers that match the request.",
          "items": {
            "$ref": "SasPortalCustomer"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to ListCustomers method that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers."
        }
      },
      "description": "Response for `ListCustomers`.",
      "id": "SasPortalListCustomersResponse"
    },
    "SasPortalMoveDeviceRequest": {
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource (Node or Customer) to reparent the device under.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "SasPortalMoveDeviceRequest",
      "description": "Request for MoveDevice method."
    },
    "SasPortalTestPermissionsResponse": {
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A set of permissions that the caller is allowed."
        }
      },
      "description": "Response message for `TestPermissions` method.",
      "id": "SasPortalTestPermissionsResponse"
    },
    "SasPortalDeviceGrant": {
      "description": "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.",
      "type": "object",
      "properties": {
        "grantId": {
          "type": "string",
          "description": "Grant Id."
        },
        "suspensionReason": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "If the grant is suspended, the reason(s) for suspension."
        },
        "state": {
          "type": "string",
          "description": "State of the grant.",
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ],
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ]
        },
        "channelType": {
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string",
          "description": "Type of channel used."
        },
        "expireTime": {
          "description": "The expiration time of the grant.",
          "format": "google-datetime",
          "type": "string"
        },
        "moveList": {
          "description": "The DPA move lists on which this grant appears.",
          "items": {
            "$ref": "SasPortalDpaMoveList"
          },
          "type": "array"
        },
        "frequencyRange": {
          "$ref": "SasPortalFrequencyRange",
          "description": "The transmission frequency range."
        },
        "maxEirp": {
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of maxEirp represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).",
          "type": "number",
          "format": "double"
        }
      },
      "id": "SasPortalDeviceGrant"
    },
    "SasPortalOperation": {
      "properties": {
        "error": {
          "$ref": "SasPortalStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "metadata": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      },
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "id": "SasPortalOperation",
      "type": "object"
    },
    "SasPortalFrequencyRange": {
      "description": "Frequency range from `low_frequency` to `high_frequency`.",
      "properties": {
        "lowFrequencyMhz": {
          "description": "The lowest frequency of the frequency range in MHz.",
          "format": "double",
          "type": "number"
        },
        "highFrequencyMhz": {
          "format": "double",
          "type": "number",
          "description": "The highest frequency of the frequency range in MHz."
        }
      },
      "type": "object",
      "id": "SasPortalFrequencyRange"
    },
    "SasPortalChannelWithScore": {
      "description": "The channel with score.",
      "type": "object",
      "properties": {
        "score": {
          "format": "double",
          "description": "The channel score, normalized to be in [0,1].",
          "type": "number"
        },
        "frequencyRange": {
          "description": "The frequency range of the channel.",
          "$ref": "SasPortalFrequencyRange"
        }
      },
      "id": "SasPortalChannelWithScore"
    },
    "SasPortalDpaMoveList": {
      "description": "An entry in a DPA's move list.",
      "type": "object",
      "id": "SasPortalDpaMoveList",
      "properties": {
        "frequencyRange": {
          "description": "The frequency range that the move list affects.",
          "$ref": "SasPortalFrequencyRange"
        },
        "dpaId": {
          "type": "string",
          "description": "The ID of the DPA."
        }
      }
    },
    "SasPortalEmpty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "SasPortalEmpty",
      "properties": {},
      "type": "object"
    },
    "SasPortalBulkCreateDeviceRequest": {
      "description": "Request for BulkCreateDevice method.",
      "id": "SasPortalBulkCreateDeviceRequest",
      "type": "object",
      "properties": {
        "csv": {
          "description": "Required. A csv with each row representing a [device]. Each row must conform to the regulations described on CreateDeviceRequest's device field.",
          "type": "string"
        }
      }
    },
    "SasPortalCustomer": {
      "properties": {
        "displayName": {
          "description": "Required. Name of the organization that the customer entity represents.",
          "type": "string"
        },
        "name": {
          "description": "Output only. Resource name of the customer.",
          "type": "string"
        },
        "sasUserIds": {
          "description": "User IDs used by the devices belonging to this customer.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "id": "SasPortalCustomer",
      "description": "Entity representing a SAS customer."
    },
    "SasPortalInstallationParams": {
      "description": "Information about the device installation parameters.",
      "type": "object",
      "properties": {
        "antennaDowntilt": {
          "description": "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices.",
          "format": "int32",
          "type": "integer"
        },
        "latitude": {
          "description": "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator.",
          "format": "double",
          "type": "number"
        },
        "antennaAzimuth": {
          "type": "integer",
          "format": "int32",
          "description": "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices."
        },
        "eirpCapability": {
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category.",
          "type": "integer",
          "format": "int32"
        },
        "antennaGain": {
          "format": "int32",
          "type": "integer",
          "description": "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive."
        },
        "indoorDeployment": {
          "description": "Whether the device antenna is indoor or not. True: indoor. False: outdoor.",
          "type": "boolean"
        },
        "cpeCbsdIndication": {
          "type": "boolean",
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not."
        },
        "antennaBeamwidth": {
          "type": "integer",
          "format": "int32",
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices."
        },
        "antennaModel": {
          "type": "string",
          "description": "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets."
        },
        "height": {
          "format": "double",
          "type": "number",
          "description": "Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum."
        },
        "heightType": {
          "type": "string",
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ],
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ],
          "description": "Specifies how the height is measured."
        },
        "verticalAccuracy": {
          "type": "number",
          "format": "double",
          "description": "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters."
        },
        "horizontalAccuracy": {
          "description": "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters.",
          "format": "double",
          "type": "number"
        },
        "longitude": {
          "type": "number",
          "format": "double",
          "description": "Longitude of the device antenna location. in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian."
        }
      },
      "id": "SasPortalInstallationParams"
    }
  },
  "ownerDomain": "google.com",
  "servicePath": "",
  "icons": {
    "x16": "http://www.google.com/images/icons/product/search-16.gif",
    "x32": "http://www.google.com/images/icons/product/search-32.gif"
  },
  "ownerName": "Google"
}
