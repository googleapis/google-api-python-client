{
  "resources": {
    "deployments": {
      "resources": {
        "devices": {
          "methods": {
            "updateSigned": {
              "id": "prod_tt_sasportal.deployments.devices.updateSigned",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the device to update.",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path",
                  "required": true
                }
              },
              "httpMethod": "PATCH",
              "description": "Updates a signed device.",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "get": {
              "httpMethod": "GET",
              "parameters": {
                "name": {
                  "type": "string",
                  "description": "Required. The name of the device.",
                  "required": true,
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Gets details about a device.",
              "id": "prod_tt_sasportal.deployments.devices.get",
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}"
            },
            "signDevice": {
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "id": "prod_tt_sasportal.deployments.devices.signDevice",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:signDevice",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Output only. The resource path name.",
                  "type": "string",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$"
                }
              },
              "description": "Signs a device.",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "path": "v1alpha1/{+name}:signDevice"
            },
            "delete": {
              "parameters": {
                "name": {
                  "location": "path",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the device.",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "id": "prod_tt_sasportal.deployments.devices.delete",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "DELETE",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "description": "Deletes a device."
            },
            "patch": {
              "description": "Updates a device.",
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.deployments.devices.patch",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}",
              "httpMethod": "PATCH",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Output only. The resource path name.",
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "type": "string"
                },
                "updateMask": {
                  "format": "google-fieldmask",
                  "description": "Fields to be updated.",
                  "location": "query",
                  "type": "string"
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "move": {
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "httpMethod": "POST",
              "description": "Moves a device under another node or customer.",
              "flatPath": "v1alpha1/deployments/{deploymentsId}/devices/{devicesId}:move",
              "id": "prod_tt_sasportal.deployments.devices.move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "pattern": "^deployments/[^/]+/devices/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "Required. The name of the device to move."
                }
              },
              "path": "v1alpha1/{+name}:move",
              "response": {
                "$ref": "SasPortalOperation"
              }
            }
          }
        }
      }
    },
    "policies": {
      "methods": {
        "set": {
          "parameters": {},
          "id": "prod_tt_sasportal.policies.set",
          "flatPath": "v1alpha1/policies:set",
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalPolicy"
          },
          "request": {
            "$ref": "SasPortalSetPolicyRequest"
          },
          "path": "v1alpha1/policies:set",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Sets the access control policy on the specified resource. Replaces any existing policy.",
          "httpMethod": "POST"
        },
        "test": {
          "path": "v1alpha1/policies:test",
          "description": "Returns permissions that a caller has on the specified resource.",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "request": {
            "$ref": "SasPortalTestPermissionsRequest"
          },
          "parameters": {},
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalTestPermissionsResponse"
          },
          "id": "prod_tt_sasportal.policies.test",
          "flatPath": "v1alpha1/policies:test",
          "httpMethod": "POST"
        },
        "get": {
          "path": "v1alpha1/policies:get",
          "flatPath": "v1alpha1/policies:get",
          "request": {
            "$ref": "SasPortalGetPolicyRequest"
          },
          "id": "prod_tt_sasportal.policies.get",
          "parameters": {},
          "parameterOrder": [],
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
          "httpMethod": "POST",
          "response": {
            "$ref": "SasPortalPolicy"
          }
        }
      }
    },
    "customers": {
      "resources": {
        "devices": {
          "methods": {
            "delete": {
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.devices.delete",
              "httpMethod": "DELETE",
              "description": "Deletes a device.",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device.",
                  "type": "string",
                  "required": true,
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ]
            },
            "list": {
              "flatPath": "v1alpha1/customers/{customersId}/devices",
              "description": "Lists devices under a node or customer.",
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "id": "prod_tt_sasportal.customers.devices.list",
              "parameters": {
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "type": "string",
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                  "location": "query"
                },
                "pageSize": {
                  "location": "query",
                  "format": "int32",
                  "type": "integer",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                },
                "parent": {
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the parent resource."
                }
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "bulk": {
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices:bulk",
              "parameters": {
                "parent": {
                  "pattern": "^customers/[^/]+$",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "location": "path"
                }
              },
              "id": "prod_tt_sasportal.customers.devices.bulk",
              "flatPath": "v1alpha1/customers/{customersId}/devices:bulk",
              "parameterOrder": [
                "parent"
              ],
              "httpMethod": "POST",
              "description": "Creates a device under a node or customer. Returned devices are unordered."
            },
            "patch": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}",
              "httpMethod": "PATCH",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.customers.devices.patch",
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Fields to be updated."
                },
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Output only. The resource path name."
                }
              },
              "description": "Updates a device.",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}"
            },
            "signDevice": {
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Output only. The resource path name."
                }
              },
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "id": "prod_tt_sasportal.customers.devices.signDevice",
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:signDevice",
              "description": "Signs a device.",
              "path": "v1alpha1/{+name}:signDevice"
            },
            "updateSigned": {
              "description": "Updates a signed device.",
              "httpMethod": "PATCH",
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:updateSigned",
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              },
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to update.",
                  "required": true
                }
              },
              "path": "v1alpha1/{+name}:updateSigned",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.customers.devices.updateSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "createSigned": {
              "parameterOrder": [
                "parent"
              ],
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "description": "Creates a signed device under a node or customer.",
              "httpMethod": "POST",
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "parent": {
                  "description": "Required. The name of the parent resource.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+$"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices:createSigned",
              "id": "prod_tt_sasportal.customers.devices.createSigned",
              "response": {
                "$ref": "SasPortalDevice"
              }
            },
            "create": {
              "path": "v1alpha1/{+parent}/devices",
              "parameters": {
                "parent": {
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.devices.create",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Creates a device under a node or customer.",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices"
            },
            "move": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}:move",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "pattern": "^customers/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to move.",
                  "type": "string"
                }
              },
              "id": "prod_tt_sasportal.customers.devices.move",
              "parameterOrder": [
                "name"
              ],
              "description": "Moves a device under another node or customer.",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "path": "v1alpha1/{+name}:move",
              "httpMethod": "POST"
            },
            "get": {
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "description": "Gets details about a device.",
              "id": "prod_tt_sasportal.customers.devices.get",
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "flatPath": "v1alpha1/customers/{customersId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the device.",
                  "pattern": "^customers/[^/]+/devices/[^/]+$"
                }
              }
            }
          }
        },
        "deployments": {
          "methods": {
            "move": {
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "description": "Moves a deployment under another node or customer.",
              "parameters": {
                "name": {
                  "pattern": "^customers/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the deployment to move.",
                  "type": "string",
                  "location": "path"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}:move",
              "httpMethod": "POST",
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.customers.deployments.move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:move",
              "response": {
                "$ref": "SasPortalOperation"
              }
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "createSigned": {
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "description": "Creates a signed device under a node or customer.",
                  "parameters": {
                    "parent": {
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "id": "prod_tt_sasportal.customers.deployments.devices.createSigned",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices:createSigned",
                  "httpMethod": "POST"
                },
                "list": {
                  "description": "Lists devices under a node or customer.",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query"
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "location": "path"
                    },
                    "pageSize": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.customers.deployments.devices.list",
                  "path": "v1alpha1/{+parent}/devices"
                },
                "create": {
                  "id": "prod_tt_sasportal.customers.deployments.devices.create",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a device under a node or customer.",
                  "flatPath": "v1alpha1/customers/{customersId}/deployments/{deploymentsId}/devices",
                  "path": "v1alpha1/{+parent}/devices",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^customers/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the parent resource."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ]
                }
              }
            }
          }
        },
        "nodes": {
          "methods": {
            "patch": {
              "request": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "type": "string",
                  "description": "Output only. Resource name.",
                  "location": "path"
                },
                "updateMask": {
                  "description": "Fields to be updated.",
                  "type": "string",
                  "location": "query",
                  "format": "google-fieldmask"
                }
              },
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "id": "prod_tt_sasportal.customers.nodes.patch",
              "description": "Updates an existing node.",
              "response": {
                "$ref": "SasPortalNode"
              },
              "httpMethod": "PATCH",
              "path": "v1alpha1/{+name}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "list": {
              "httpMethod": "GET",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "description": "Lists nodes.",
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "id": "prod_tt_sasportal.customers.nodes.list",
              "path": "v1alpha1/{+parent}/nodes",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "location": "path",
                  "type": "string",
                  "pattern": "^customers/[^/]+$"
                },
                "pageToken": {
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                  "type": "string"
                },
                "pageSize": {
                  "format": "int32",
                  "location": "query",
                  "description": "The maximum number of nodes to return in the response.",
                  "type": "integer"
                }
              }
            },
            "create": {
              "request": {
                "$ref": "SasPortalNode"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.nodes.create",
              "flatPath": "v1alpha1/customers/{customersId}/nodes",
              "response": {
                "$ref": "SasPortalNode"
              },
              "description": "Creates a new node.",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+$",
                  "type": "string",
                  "description": "Required. The parent resource name where the node is to be created."
                }
              },
              "path": "v1alpha1/{+parent}/nodes",
              "httpMethod": "POST",
              "parameterOrder": [
                "parent"
              ]
            },
            "move": {
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}:move",
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "description": "Moves a node under another node or customer.",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "path": "v1alpha1/{+name}:move",
              "parameters": {
                "name": {
                  "location": "path",
                  "type": "string",
                  "required": true,
                  "description": "Required. The name of the node to move.",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$"
                }
              },
              "id": "prod_tt_sasportal.customers.nodes.move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "get": {
              "id": "prod_tt_sasportal.customers.nodes.get",
              "response": {
                "$ref": "SasPortalNode"
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ],
              "parameters": {
                "name": {
                  "description": "Required. The name of the node.",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$"
                }
              },
              "path": "v1alpha1/{+name}",
              "description": "Returns a requested node.",
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            },
            "delete": {
              "httpMethod": "DELETE",
              "parameters": {
                "name": {
                  "location": "path",
                  "description": "Required. The name of the node.",
                  "type": "string",
                  "pattern": "^customers/[^/]+/nodes/[^/]+$",
                  "required": true
                }
              },
              "path": "v1alpha1/{+name}",
              "description": "Deletes a node.",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.customers.nodes.delete"
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "list": {
                  "description": "Lists devices under a node or customer.",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "id": "prod_tt_sasportal.customers.nodes.devices.list",
                  "path": "v1alpha1/{+parent}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "pageSize": {
                      "type": "integer",
                      "location": "query",
                      "format": "int32",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "location": "path",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$"
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                      "type": "string",
                      "location": "query"
                    }
                  }
                },
                "create": {
                  "description": "Creates a device under a node or customer.",
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/devices",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "httpMethod": "POST",
                  "id": "prod_tt_sasportal.customers.nodes.devices.create",
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path"
                    }
                  }
                },
                "createSigned": {
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "id": "prod_tt_sasportal.customers.nodes.devices.createSigned",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "description": "Creates a signed device under a node or customer.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "parent": {
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/devices:createSigned"
                }
              }
            },
            "nodes": {
              "methods": {
                "list": {
                  "description": "Lists nodes.",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "path": "v1alpha1/{+parent}/nodes",
                  "httpMethod": "GET",
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from."
                    },
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of nodes to return in the response.",
                      "type": "integer",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "description": "Required. The parent resource name, for example, \"nodes/1\".",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes",
                  "id": "prod_tt_sasportal.customers.nodes.nodes.list"
                },
                "create": {
                  "request": {
                    "$ref": "SasPortalNode"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "parameters": {
                    "parent": {
                      "description": "Required. The parent resource name where the node is to be created.",
                      "required": true,
                      "location": "path",
                      "pattern": "^customers/[^/]+/nodes/[^/]+$",
                      "type": "string"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/nodes",
                  "id": "prod_tt_sasportal.customers.nodes.nodes.create",
                  "description": "Creates a new node.",
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "flatPath": "v1alpha1/customers/{customersId}/nodes/{nodesId}/nodes"
                }
              }
            }
          }
        }
      },
      "methods": {
        "patch": {
          "description": "Updates an existing customer.",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "parameters": {
            "name": {
              "required": true,
              "type": "string",
              "description": "Output only. Resource name of the customer.",
              "location": "path",
              "pattern": "^customers/[^/]+$"
            },
            "updateMask": {
              "description": "Fields to be updated.",
              "type": "string",
              "location": "query",
              "format": "google-fieldmask"
            }
          },
          "request": {
            "$ref": "SasPortalCustomer"
          },
          "id": "prod_tt_sasportal.customers.patch",
          "flatPath": "v1alpha1/customers/{customersId}",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "httpMethod": "PATCH",
          "path": "v1alpha1/{+name}"
        },
        "get": {
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "path": "v1alpha1/{+name}",
          "id": "prod_tt_sasportal.customers.get",
          "response": {
            "$ref": "SasPortalCustomer"
          },
          "description": "Returns a requested customer.",
          "parameterOrder": [
            "name"
          ],
          "httpMethod": "GET",
          "flatPath": "v1alpha1/customers/{customersId}",
          "parameters": {
            "name": {
              "description": "Required. The name of the customer.",
              "type": "string",
              "location": "path",
              "pattern": "^customers/[^/]+$",
              "required": true
            }
          }
        },
        "list": {
          "parameterOrder": [],
          "id": "prod_tt_sasportal.customers.list",
          "path": "v1alpha1/customers",
          "httpMethod": "GET",
          "flatPath": "v1alpha1/customers",
          "parameters": {
            "pageSize": {
              "format": "int32",
              "location": "query",
              "type": "integer",
              "description": "The maximum number of customers to return in the response."
            },
            "pageToken": {
              "type": "string",
              "description": "A pagination token returned from a previous call to ListCustomers method that indicates where this listing should continue from.",
              "location": "query"
            }
          },
          "description": "Returns a list of requested customers.",
          "response": {
            "$ref": "SasPortalListCustomersResponse"
          },
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        }
      }
    },
    "installer": {
      "methods": {
        "generateSecret": {
          "parameters": {},
          "path": "v1alpha1/installer:generateSecret",
          "parameterOrder": [],
          "flatPath": "v1alpha1/installer:generateSecret",
          "request": {
            "$ref": "SasPortalGenerateSecretRequest"
          },
          "id": "prod_tt_sasportal.installer.generateSecret",
          "httpMethod": "POST",
          "response": {
            "$ref": "SasPortalGenerateSecretResponse"
          },
          "description": "Generates a secret to be used with the ValidateInstaller method",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ]
        },
        "validate": {
          "path": "v1alpha1/installer:validate",
          "parameters": {},
          "request": {
            "$ref": "SasPortalValidateInstallerRequest"
          },
          "flatPath": "v1alpha1/installer:validate",
          "id": "prod_tt_sasportal.installer.validate",
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "parameterOrder": [],
          "response": {
            "$ref": "SasPortalValidateInstallerResponse"
          },
          "description": "Validates the identity of a Certified Professional Installer (CPI).",
          "httpMethod": "POST"
        }
      }
    },
    "nodes": {
      "methods": {
        "get": {
          "httpMethod": "GET",
          "flatPath": "v1alpha1/nodes/{nodesId}",
          "id": "prod_tt_sasportal.nodes.get",
          "path": "v1alpha1/{+name}",
          "parameters": {
            "name": {
              "required": true,
              "pattern": "^nodes/[^/]+$",
              "location": "path",
              "description": "Required. The name of the node.",
              "type": "string"
            }
          },
          "description": "Returns a requested node.",
          "parameterOrder": [
            "name"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/userinfo.email"
          ],
          "response": {
            "$ref": "SasPortalNode"
          }
        }
      },
      "resources": {
        "devices": {
          "methods": {
            "move": {
              "description": "Moves a device under another node or customer.",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalMoveDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}:move",
              "httpMethod": "POST",
              "id": "prod_tt_sasportal.nodes.devices.move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:move",
              "parameters": {
                "name": {
                  "type": "string",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "description": "Required. The name of the device to move.",
                  "required": true
                }
              }
            },
            "patch": {
              "parameterOrder": [
                "name"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "PATCH",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "description": "Updates a device.",
              "id": "prod_tt_sasportal.nodes.devices.patch",
              "path": "v1alpha1/{+name}",
              "parameters": {
                "updateMask": {
                  "format": "google-fieldmask",
                  "type": "string",
                  "location": "query",
                  "description": "Fields to be updated."
                },
                "name": {
                  "description": "Output only. The resource path name.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}"
            },
            "create": {
              "parameterOrder": [
                "parent"
              ],
              "description": "Creates a device under a node or customer.",
              "id": "prod_tt_sasportal.nodes.devices.create",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "parameters": {
                "parent": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "httpMethod": "POST",
              "request": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+parent}/devices"
            },
            "updateSigned": {
              "id": "prod_tt_sasportal.nodes.devices.updateSigned",
              "description": "Updates a signed device.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:updateSigned",
              "parameters": {
                "name": {
                  "required": true,
                  "description": "Required. The name of the device to update.",
                  "location": "path",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "type": "string"
                }
              },
              "httpMethod": "PATCH",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "path": "v1alpha1/{+name}:updateSigned",
              "parameterOrder": [
                "name"
              ],
              "request": {
                "$ref": "SasPortalUpdateSignedDeviceRequest"
              }
            },
            "bulk": {
              "description": "Creates a device under a node or customer. Returned devices are unordered.",
              "httpMethod": "POST",
              "parameters": {
                "parent": {
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "location": "path",
                  "pattern": "^nodes/[^/]+$",
                  "type": "string"
                }
              },
              "id": "prod_tt_sasportal.nodes.devices.bulk",
              "response": {
                "$ref": "SasPortalBulkCreateDeviceResponse"
              },
              "request": {
                "$ref": "SasPortalBulkCreateDeviceRequest"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:bulk",
              "parameterOrder": [
                "parent"
              ],
              "path": "v1alpha1/{+parent}/devices:bulk"
            },
            "signDevice": {
              "parameterOrder": [
                "name"
              ],
              "description": "Signs a device.",
              "id": "prod_tt_sasportal.nodes.devices.signDevice",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "request": {
                "$ref": "SasPortalSignDeviceRequest"
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}:signDevice",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "required": true,
                  "type": "string",
                  "description": "Output only. The resource path name.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$",
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+name}:signDevice",
              "httpMethod": "POST"
            },
            "delete": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "DELETE",
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "id": "prod_tt_sasportal.nodes.devices.delete",
              "description": "Deletes a device.",
              "path": "v1alpha1/{+name}",
              "parameterOrder": [
                "name"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}",
              "parameters": {
                "name": {
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the device.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              }
            },
            "get": {
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.devices.get",
              "path": "v1alpha1/{+name}",
              "description": "Gets details about a device.",
              "parameters": {
                "name": {
                  "location": "path",
                  "required": true,
                  "type": "string",
                  "description": "Required. The name of the device.",
                  "pattern": "^nodes/[^/]+/devices/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalDevice"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "httpMethod": "GET",
              "flatPath": "v1alpha1/nodes/{nodesId}/devices/{devicesId}"
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                  "location": "query",
                  "format": "int32"
                },
                "parent": {
                  "required": true,
                  "description": "Required. The name of the parent resource.",
                  "pattern": "^nodes/[^/]+$",
                  "type": "string",
                  "location": "path"
                },
                "pageToken": {
                  "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                  "location": "query",
                  "type": "string"
                },
                "filter": {
                  "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                  "location": "query",
                  "type": "string"
                }
              },
              "flatPath": "v1alpha1/nodes/{nodesId}/devices",
              "response": {
                "$ref": "SasPortalListDevicesResponse"
              },
              "description": "Lists devices under a node or customer.",
              "parameterOrder": [
                "parent"
              ],
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.nodes.devices.list",
              "httpMethod": "GET",
              "path": "v1alpha1/{+parent}/devices"
            },
            "createSigned": {
              "flatPath": "v1alpha1/nodes/{nodesId}/devices:createSigned",
              "request": {
                "$ref": "SasPortalCreateSignedDeviceRequest"
              },
              "path": "v1alpha1/{+parent}/devices:createSigned",
              "parameterOrder": [
                "parent"
              ],
              "parameters": {
                "parent": {
                  "location": "path",
                  "pattern": "^nodes/[^/]+$",
                  "description": "Required. The name of the parent resource.",
                  "type": "string",
                  "required": true
                }
              },
              "httpMethod": "POST",
              "description": "Creates a signed device under a node or customer.",
              "response": {
                "$ref": "SasPortalDevice"
              },
              "id": "prod_tt_sasportal.nodes.devices.createSigned",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ]
            }
          }
        },
        "nodes": {
          "resources": {
            "nodes": {
              "methods": {
                "list": {
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "pageSize": {
                      "format": "int32",
                      "description": "The maximum number of nodes to return in the response.",
                      "location": "query",
                      "type": "integer"
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from.",
                      "type": "string",
                      "location": "query"
                    },
                    "parent": {
                      "type": "string",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path",
                      "description": "Required. The parent resource name, for example, \"nodes/1\"."
                    }
                  },
                  "path": "v1alpha1/{+parent}/nodes",
                  "description": "Lists nodes.",
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.list",
                  "response": {
                    "$ref": "SasPortalListNodesResponse"
                  },
                  "httpMethod": "GET"
                },
                "create": {
                  "response": {
                    "$ref": "SasPortalNode"
                  },
                  "id": "prod_tt_sasportal.nodes.nodes.nodes.create",
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "required": true,
                      "type": "string",
                      "location": "path",
                      "description": "Required. The parent resource name where the node is to be created."
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "httpMethod": "POST",
                  "path": "v1alpha1/{+parent}/nodes",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/nodes",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "description": "Creates a new node.",
                  "request": {
                    "$ref": "SasPortalNode"
                  }
                }
              }
            },
            "devices": {
              "methods": {
                "createSigned": {
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "description": "Required. The name of the parent resource.",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:createSigned",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.createSigned",
                  "description": "Creates a signed device under a node or customer."
                },
                "create": {
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "parameters": {
                    "parent": {
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Creates a device under a node or customer.",
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "path": "v1alpha1/{+parent}/devices",
                  "id": "prod_tt_sasportal.nodes.nodes.devices.create",
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "httpMethod": "POST"
                },
                "bulk": {
                  "id": "prod_tt_sasportal.nodes.nodes.devices.bulk",
                  "description": "Creates a device under a node or customer. Returned devices are unordered.",
                  "path": "v1alpha1/{+parent}/devices:bulk",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "parameters": {
                    "parent": {
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "request": {
                    "$ref": "SasPortalBulkCreateDeviceRequest"
                  },
                  "httpMethod": "POST",
                  "response": {
                    "$ref": "SasPortalBulkCreateDeviceResponse"
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices:bulk"
                },
                "list": {
                  "id": "prod_tt_sasportal.nodes.nodes.devices.list",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "parameters": {
                    "parent": {
                      "location": "path",
                      "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the parent resource.",
                      "required": true
                    },
                    "filter": {
                      "location": "query",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive.",
                      "type": "string"
                    },
                    "pageToken": {
                      "location": "query",
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "type": "string"
                    },
                    "pageSize": {
                      "format": "int32",
                      "location": "query",
                      "type": "integer",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000]."
                    }
                  },
                  "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "description": "Lists devices under a node or customer.",
                  "httpMethod": "GET",
                  "path": "v1alpha1/{+parent}/devices"
                }
              }
            }
          },
          "methods": {
            "delete": {
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "DELETE",
              "description": "Deletes a node.",
              "parameters": {
                "name": {
                  "description": "Required. The name of the node.",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$"
                }
              },
              "response": {
                "$ref": "SasPortalEmpty"
              },
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}",
              "id": "prod_tt_sasportal.nodes.nodes.delete"
            },
            "get": {
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "description": "Returns a requested node.",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "id": "prod_tt_sasportal.nodes.nodes.get",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "required": true,
                  "description": "Required. The name of the node.",
                  "type": "string",
                  "location": "path"
                }
              },
              "httpMethod": "GET",
              "parameterOrder": [
                "name"
              ]
            },
            "create": {
              "path": "v1alpha1/{+parent}/nodes",
              "httpMethod": "POST",
              "response": {
                "$ref": "SasPortalNode"
              },
              "description": "Creates a new node.",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.create",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "parameters": {
                "parent": {
                  "location": "path",
                  "description": "Required. The parent resource name where the node is to be created.",
                  "type": "string",
                  "required": true,
                  "pattern": "^nodes/[^/]+$"
                }
              },
              "request": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "parent"
              ]
            },
            "move": {
              "request": {
                "$ref": "SasPortalMoveNodeRequest"
              },
              "description": "Moves a node under another node or customer.",
              "id": "prod_tt_sasportal.nodes.nodes.move",
              "path": "v1alpha1/{+name}:move",
              "response": {
                "$ref": "SasPortalOperation"
              },
              "parameterOrder": [
                "name"
              ],
              "httpMethod": "POST",
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}:move",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "name": {
                  "type": "string",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "description": "Required. The name of the node to move.",
                  "required": true,
                  "location": "path"
                }
              }
            },
            "list": {
              "parameters": {
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The maximum number of nodes to return in the response.",
                  "location": "query"
                },
                "pageToken": {
                  "type": "string",
                  "location": "query",
                  "description": "A pagination token returned from a previous call to ListNodes method that indicates where this listing should continue from."
                },
                "parent": {
                  "type": "string",
                  "description": "Required. The parent resource name, for example, \"nodes/1\".",
                  "required": true,
                  "pattern": "^nodes/[^/]+$",
                  "location": "path"
                }
              },
              "path": "v1alpha1/{+parent}/nodes",
              "response": {
                "$ref": "SasPortalListNodesResponse"
              },
              "httpMethod": "GET",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes",
              "id": "prod_tt_sasportal.nodes.nodes.list",
              "parameterOrder": [
                "parent"
              ],
              "description": "Lists nodes."
            },
            "patch": {
              "flatPath": "v1alpha1/nodes/{nodesId}/nodes/{nodesId1}",
              "path": "v1alpha1/{+name}",
              "response": {
                "$ref": "SasPortalNode"
              },
              "parameterOrder": [
                "name"
              ],
              "id": "prod_tt_sasportal.nodes.nodes.patch",
              "request": {
                "$ref": "SasPortalNode"
              },
              "httpMethod": "PATCH",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "parameters": {
                "updateMask": {
                  "type": "string",
                  "format": "google-fieldmask",
                  "location": "query",
                  "description": "Fields to be updated."
                },
                "name": {
                  "required": true,
                  "location": "path",
                  "description": "Output only. Resource name.",
                  "pattern": "^nodes/[^/]+/nodes/[^/]+$",
                  "type": "string"
                }
              },
              "description": "Updates an existing node."
            }
          }
        },
        "deployments": {
          "methods": {
            "move": {
              "parameterOrder": [
                "name"
              ],
              "path": "v1alpha1/{+name}:move",
              "description": "Moves a deployment under another node or customer.",
              "id": "prod_tt_sasportal.nodes.deployments.move",
              "httpMethod": "POST",
              "scopes": [
                "https://www.googleapis.com/auth/userinfo.email"
              ],
              "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}:move",
              "parameters": {
                "name": {
                  "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                  "required": true,
                  "location": "path",
                  "type": "string",
                  "description": "Required. The name of the deployment to move."
                }
              },
              "request": {
                "$ref": "SasPortalMoveDeploymentRequest"
              },
              "response": {
                "$ref": "SasPortalOperation"
              }
            }
          },
          "resources": {
            "devices": {
              "methods": {
                "create": {
                  "description": "Creates a device under a node or customer.",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "id": "prod_tt_sasportal.nodes.deployments.devices.create",
                  "path": "v1alpha1/{+parent}/devices",
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "request": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameters": {
                    "parent": {
                      "required": true,
                      "location": "path",
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "type": "string",
                      "description": "Required. The name of the parent resource."
                    }
                  }
                },
                "createSigned": {
                  "request": {
                    "$ref": "SasPortalCreateSignedDeviceRequest"
                  },
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "description": "Required. The name of the parent resource.",
                      "type": "string",
                      "required": true,
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "httpMethod": "POST",
                  "description": "Creates a signed device under a node or customer.",
                  "response": {
                    "$ref": "SasPortalDevice"
                  },
                  "parameterOrder": [
                    "parent"
                  ],
                  "id": "prod_tt_sasportal.nodes.deployments.devices.createSigned",
                  "path": "v1alpha1/{+parent}/devices:createSigned",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices:createSigned"
                },
                "list": {
                  "response": {
                    "$ref": "SasPortalListDevicesResponse"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/userinfo.email"
                  ],
                  "id": "prod_tt_sasportal.nodes.deployments.devices.list",
                  "flatPath": "v1alpha1/nodes/{nodesId}/deployments/{deploymentsId}/devices",
                  "httpMethod": "GET",
                  "description": "Lists devices under a node or customer.",
                  "parameterOrder": [
                    "parent"
                  ],
                  "path": "v1alpha1/{+parent}/devices",
                  "parameters": {
                    "parent": {
                      "pattern": "^nodes/[^/]+/deployments/[^/]+$",
                      "required": true,
                      "location": "path",
                      "description": "Required. The name of the parent resource.",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The filter expression. The filter should have one of the following formats: \"sn=123454\" or \"display_name=MyDevice\". sn corresponds to serial_number of the device. The filter is case insensitive."
                    },
                    "pageSize": {
                      "type": "integer",
                      "format": "int32",
                      "description": "The maximum number of devices to return in the response. If empty or zero, all devices will be listed. Must be in the range [0, 1000].",
                      "location": "query"
                    },
                    "pageToken": {
                      "description": "A pagination token returned from a previous call to ListDevices that indicates where this listing should continue from.",
                      "location": "query",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "ownerName": "Google",
  "version_module": true,
  "canonicalName": "SAS Portal Testing",
  "fullyEncodeReservedExpansion": true,
  "mtlsRootUrl": "https://prod-tt-sasportal.mtls.googleapis.com/",
  "name": "prod_tt_sasportal",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "revision": "20201211",
  "documentationLink": "https://developers.google.com/spectrum-access-system/",
  "description": "",
  "ownerDomain": "google.com",
  "parameters": {
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "description": "OAuth 2.0 token for the current user.",
      "location": "query"
    },
    "$.xgafv": {
      "location": "query",
      "enum": [
        "1",
        "2"
      ],
      "description": "V1 error format.",
      "type": "string",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ]
    },
    "callback": {
      "description": "JSONP",
      "type": "string",
      "location": "query"
    },
    "alt": {
      "type": "string",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "description": "Data format for response.",
      "location": "query",
      "default": "json"
    },
    "access_token": {
      "location": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "upload_protocol": {
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "prettyPrint": {
      "description": "Returns response with indentations and line breaks.",
      "location": "query",
      "default": "true",
      "type": "boolean"
    },
    "quotaUser": {
      "type": "string",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query"
    },
    "uploadType": {
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    }
  },
  "discoveryVersion": "v1",
  "basePath": "",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/userinfo.email": {
          "description": "View your email address"
        }
      }
    }
  },
  "version": "v1alpha1",
  "rootUrl": "https://prod-tt-sasportal.googleapis.com/",
  "baseUrl": "https://prod-tt-sasportal.googleapis.com/",
  "protocol": "rest",
  "kind": "discovery#restDescription",
  "id": "prod_tt_sasportal:v1alpha1",
  "title": "SAS Portal API (Testing)",
  "schemas": {
    "SasPortalListNodesResponse": {
      "type": "object",
      "properties": {
        "nodes": {
          "items": {
            "$ref": "SasPortalNode"
          },
          "description": "The nodes that match the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListNodes method that indicates from where listing should continue. If the field is missing or empty, it means there is no more nodes.",
          "type": "string"
        }
      },
      "description": "Response for ListNodes method.",
      "id": "SasPortalListNodesResponse"
    },
    "SasPortalBulkCreateDeviceResponse": {
      "properties": {
        "devices": {
          "items": {
            "$ref": "SasPortalDevice"
          },
          "description": "Required. The devices that were imported.",
          "type": "array"
        }
      },
      "id": "SasPortalBulkCreateDeviceResponse",
      "type": "object",
      "description": "Response for BulkCreateDevice method."
    },
    "SasPortalUpdateSignedDeviceRequest": {
      "properties": {
        "installerId": {
          "description": "Required. Unique installer ID (CPI ID) from the Certified Professional Installers database.",
          "type": "string"
        },
        "encodedDevice": {
          "description": "Required. The JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the device. The user_id field must be set.",
          "type": "string",
          "format": "byte"
        }
      },
      "id": "SasPortalUpdateSignedDeviceRequest",
      "type": "object",
      "description": "Request for UpdateSignedDevice method."
    },
    "SasPortalNode": {
      "description": "The Node.",
      "type": "object",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "The node's display name."
        },
        "name": {
          "description": "Output only. Resource name.",
          "type": "string"
        },
        "sasUserIds": {
          "items": {
            "type": "string"
          },
          "description": "User ids used by the devices belonging to this node.",
          "type": "array"
        }
      },
      "id": "SasPortalNode"
    },
    "SasPortalTestPermissionsResponse": {
      "id": "SasPortalTestPermissionsResponse",
      "description": "Response message for `TestPermissions` method.",
      "type": "object",
      "properties": {
        "permissions": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A set of permissions that the caller is allowed."
        }
      }
    },
    "SasPortalInstallationParams": {
      "properties": {
        "indoorDeployment": {
          "type": "boolean",
          "description": "Whether the device antenna is indoor or not. True: indoor. False: outdoor."
        },
        "latitude": {
          "type": "number",
          "format": "double",
          "description": "Latitude of the device antenna location in degrees relative to the WGS 84 datum. The allowed range is from -90.000000 to +90.000000. Positive values represent latitudes north of the equator; negative values south of the equator."
        },
        "height": {
          "format": "double",
          "type": "number",
          "description": "Device antenna height in meters. When the heightType parameter value is \"AGL\", the antenna height should be given relative to ground level. When the heightType parameter value is \"AMSL\", it is given with respect to WGS84 datum."
        },
        "antennaGain": {
          "description": "Peak antenna gain in dBi. This parameter is an integer with a value between -127 and +128 (dBi) inclusive.",
          "format": "int32",
          "type": "integer"
        },
        "horizontalAccuracy": {
          "type": "number",
          "description": "A positive number in meters to indicate accuracy of the device antenna horizontal location. This optional parameter should only be present if its value is less than the FCC requirement of 50 meters.",
          "format": "double"
        },
        "eirpCapability": {
          "type": "integer",
          "description": "This parameter is the maximum device EIRP in units of dBm/10MHz and is an integer with a value between -127 and +47 (dBm/10 MHz) inclusive. If not included, SAS interprets it as maximum allowable EIRP in units of dBm/10MHz for device category.",
          "format": "int32"
        },
        "antennaModel": {
          "type": "string",
          "description": "If an external antenna is used, the antenna model is optionally provided in this field. The string has a maximum length of 128 octets."
        },
        "verticalAccuracy": {
          "type": "number",
          "format": "double",
          "description": "A positive number in meters to indicate accuracy of the device antenna vertical location. This optional parameter should only be present if its value is less than the FCC requirement of 3 meters."
        },
        "antennaDowntilt": {
          "format": "int32",
          "type": "integer",
          "description": "Antenna downtilt in degrees and is an integer with a value between -90 and +90 inclusive; a negative value means the antenna is tilted up (above horizontal). This parameter is optional for Category A devices and conditional for Category B devices."
        },
        "antennaBeamwidth": {
          "description": "3-dB antenna beamwidth of the antenna in the horizontal-plane in degrees. This parameter is an unsigned integer having a value between 0 and 360 (degrees) inclusive; it is optional for Category A devices and conditional for Category B devices.",
          "format": "int32",
          "type": "integer"
        },
        "antennaAzimuth": {
          "description": "Boresight direction of the horizontal plane of the antenna in degrees with respect to true north. The value of this parameter is an integer with a value between 0 and 359 inclusive. A value of 0 degrees means true north; a value of 90 degrees means east. This parameter is optional for Category A devices and conditional for Category B devices.",
          "type": "integer",
          "format": "int32"
        },
        "cpeCbsdIndication": {
          "description": "If present, this parameter specifies whether the CBSD is a CPE-CBSD or not.",
          "type": "boolean"
        },
        "longitude": {
          "description": "Longitude of the device antenna location. in degrees relative to the WGS 84 datum. The allowed range is from -180.000000 to +180.000000. Positive values represent longitudes east of the prime meridian; negative values west of the prime meridian.",
          "format": "double",
          "type": "number"
        },
        "heightType": {
          "enumDescriptions": [
            "Unspecified height type.",
            "AGL height is measured relative to the ground level.",
            "AMSL height is measured relative to the mean sea level."
          ],
          "type": "string",
          "enum": [
            "HEIGHT_TYPE_UNSPECIFIED",
            "HEIGHT_TYPE_AGL",
            "HEIGHT_TYPE_AMSL"
          ],
          "description": "Specifies how the height is measured."
        }
      },
      "id": "SasPortalInstallationParams",
      "type": "object",
      "description": "Information about the device installation parameters."
    },
    "SasPortalDeviceMetadata": {
      "type": "object",
      "id": "SasPortalDeviceMetadata",
      "properties": {},
      "description": "Device data overridable by both SAS Portal and registration requests."
    },
    "SasPortalMoveDeviceRequest": {
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource (Node or Customer) to reparent the device under."
        }
      },
      "id": "SasPortalMoveDeviceRequest",
      "type": "object",
      "description": "Request for MoveDevice method."
    },
    "SasPortalDpaMoveList": {
      "type": "object",
      "properties": {
        "frequencyRange": {
          "$ref": "SasPortalFrequencyRange",
          "description": "The frequency range that the move list affects."
        },
        "dpaId": {
          "description": "The ID of the DPA.",
          "type": "string"
        }
      },
      "description": "An entry in a DPA's move list.",
      "id": "SasPortalDpaMoveList"
    },
    "SasPortalGenerateSecretResponse": {
      "type": "object",
      "id": "SasPortalGenerateSecretResponse",
      "description": "Response for GenerateSecret method.",
      "properties": {
        "secret": {
          "description": "The secret generated by the string and used by [ValidateInstaller] method.",
          "type": "string"
        }
      }
    },
    "SasPortalListDevicesResponse": {
      "description": "Response for ListDevices method.",
      "id": "SasPortalListDevicesResponse",
      "properties": {
        "nextPageToken": {
          "description": "A pagination token returned from a previous call to ListDevices method that indicates from where listing should continue. If the field is missing or empty, it means there is no more devices.",
          "type": "string"
        },
        "devices": {
          "description": "The devices that match the request.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDevice"
          }
        }
      },
      "type": "object"
    },
    "SasPortalStatus": {
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array",
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use."
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "SasPortalStatus"
    },
    "SasPortalCustomer": {
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Required. Name of the organization that the customer entity represents."
        },
        "name": {
          "description": "Output only. Resource name of the customer.",
          "type": "string"
        },
        "sasUserIds": {
          "description": "User IDs used by the devices belonging to this customer.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object",
      "description": "Entity representing a SAS customer.",
      "id": "SasPortalCustomer"
    },
    "SasPortalOperation": {
      "id": "SasPortalOperation",
      "description": "This resource represents a long-running operation that is the result of a network API call.",
      "type": "object",
      "properties": {
        "response": {
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "error": {
          "$ref": "SasPortalStatus",
          "description": "The error result of the operation in case of failure or cancellation."
        },
        "metadata": {
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
          "type": "object",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          }
        },
        "name": {
          "type": "string",
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`."
        }
      }
    },
    "SasPortalDevice": {
      "type": "object",
      "properties": {
        "preloadedConfig": {
          "description": "Configuration of the device, as specified via SAS Portal API.",
          "$ref": "SasPortalDeviceConfig"
        },
        "state": {
          "type": "string",
          "enumDescriptions": [
            "Unspecified state.",
            "Device created in the SAS Portal, however, not yet registered with SAS.",
            "Device registered with SAS.",
            "Device de-registered with SAS."
          ],
          "description": "Output only. Device state.",
          "enum": [
            "DEVICE_STATE_UNSPECIFIED",
            "RESERVED",
            "REGISTERED",
            "DEREGISTERED"
          ]
        },
        "name": {
          "type": "string",
          "description": "Output only. The resource path name."
        },
        "grants": {
          "description": "Output only. Grants held by the device.",
          "type": "array",
          "items": {
            "$ref": "SasPortalDeviceGrant"
          }
        },
        "serialNumber": {
          "description": "A serial number assigned to the device by the device manufacturer.",
          "type": "string"
        },
        "activeConfig": {
          "$ref": "SasPortalDeviceConfig",
          "description": "Output only. Current configuration of the device as registered to the SAS."
        },
        "displayName": {
          "type": "string",
          "description": "Device display name."
        },
        "fccId": {
          "description": "The FCC identifier of the device.",
          "type": "string"
        },
        "deviceMetadata": {
          "description": "Device parameters that can be overridden by both SAS Portal and SAS registration requests.",
          "$ref": "SasPortalDeviceMetadata"
        }
      },
      "id": "SasPortalDevice"
    },
    "SasPortalDeviceAirInterface": {
      "properties": {
        "radioTechnology": {
          "type": "string",
          "description": "This field specifies the radio access technology that is used for the CBSD. Conditional",
          "enum": [
            "RADIO_TECHNOLOGY_UNSPECIFIED",
            "E_UTRA",
            "CAMBIUM_NETWORKS",
            "FOUR_G_BBW_SAA_1",
            "NR",
            "DOODLE_CBRS",
            "CW",
            "REDLINE",
            "TARANA_WIRELESS"
          ],
          "enumDescriptions": [
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
          ]
        },
        "supportedSpec": {
          "type": "string",
          "description": "This field is related to the radioTechnology field and provides the air interface specification that the CBSD is compliant with at the time of registration. Optional"
        }
      },
      "id": "SasPortalDeviceAirInterface",
      "description": "Information about the device's air interface.",
      "type": "object"
    },
    "SasPortalGetPolicyRequest": {
      "id": "SasPortalGetPolicyRequest",
      "properties": {
        "resource": {
          "description": "Required. The resource for which the policy is being requested.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request message for `GetPolicy` method."
    },
    "SasPortalCreateSignedDeviceRequest": {
      "type": "object",
      "properties": {
        "encodedDevice": {
          "format": "byte",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must be the JSON encoding of the [Device]. The user_id field must be set.",
          "type": "string"
        },
        "installerId": {
          "description": "Required. Unique installer id (cpiId) from the Certified Professional Installers database.",
          "type": "string"
        }
      },
      "description": "Request for CreateSignedDevice method.",
      "id": "SasPortalCreateSignedDeviceRequest"
    },
    "SasPortalValidateInstallerResponse": {
      "properties": {},
      "type": "object",
      "id": "SasPortalValidateInstallerResponse",
      "description": "Response for ValidateInstaller method] [spectrum.sas.portal.v1alpha1.DeviceManager.ValidateInstaller]."
    },
    "SasPortalMoveNodeRequest": {
      "properties": {
        "destination": {
          "description": "Required. The name of the new parent resource node or Customer) to reparent the node under.",
          "type": "string"
        }
      },
      "description": "Request for MoveNode method.",
      "id": "SasPortalMoveNodeRequest",
      "type": "object"
    },
    "SasPortalTestPermissionsRequest": {
      "description": "Request message for `TestPermissions` method.",
      "id": "SasPortalTestPermissionsRequest",
      "type": "object",
      "properties": {
        "permissions": {
          "items": {
            "type": "string"
          },
          "description": "The set of permissions to check for the `resource`.",
          "type": "array"
        },
        "resource": {
          "description": "Required. The resource for which the permissions are being requested.",
          "type": "string"
        }
      }
    },
    "SasPortalFrequencyRange": {
      "description": "Frequency range from `low_frequency` to `high_frequency`.",
      "properties": {
        "highFrequencyMhz": {
          "description": "The highest frequency of the frequency range in MHz.",
          "type": "number",
          "format": "double"
        },
        "lowFrequencyMhz": {
          "description": "The lowest frequency of the frequency range in MHz.",
          "type": "number",
          "format": "double"
        }
      },
      "type": "object",
      "id": "SasPortalFrequencyRange"
    },
    "SasPortalGenerateSecretRequest": {
      "description": "Request for GenerateSecret method] [spectrum.sas.portal.v1alpha1.DeviceManager.GenerateSecret].",
      "id": "SasPortalGenerateSecretRequest",
      "properties": {},
      "type": "object"
    },
    "SasPortalEmpty": {
      "type": "object",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "SasPortalEmpty"
    },
    "SasPortalSignDeviceRequest": {
      "type": "object",
      "properties": {
        "device": {
          "description": "Required. The device to sign. The device fields name, fcc_id and serial_number must be set. The user_id field must be set.",
          "$ref": "SasPortalDevice"
        }
      },
      "id": "SasPortalSignDeviceRequest",
      "description": "Request for SignDevice method."
    },
    "SasPortalValidateInstallerRequest": {
      "id": "SasPortalValidateInstallerRequest",
      "type": "object",
      "description": "Request for ValidateInstaller method.",
      "properties": {
        "encodedSecret": {
          "type": "string",
          "description": "Required. JSON Web Token signed using a CPI private key. Payload must include a \"secret\" claim whose value is the secret."
        },
        "secret": {
          "type": "string",
          "description": "Required. Secret returned by the GenerateSecret method."
        },
        "installerId": {
          "type": "string",
          "description": "Required. Unique installer id (cpiId) from the Certified Professional Installers database."
        }
      }
    },
    "SasPortalSetPolicyRequest": {
      "type": "object",
      "properties": {
        "resource": {
          "type": "string",
          "description": "Required. The resource for which the policy is being specified. This policy replaces any existing policy."
        },
        "policy": {
          "$ref": "SasPortalPolicy",
          "description": "Required. The policy to be applied to the `resource`."
        }
      },
      "description": "Request message for `SetPolicy` method.",
      "id": "SasPortalSetPolicyRequest"
    },
    "SasPortalAssignment": {
      "id": "SasPortalAssignment",
      "type": "object",
      "description": "Associates `members` with a `role`.",
      "properties": {
        "members": {
          "type": "array",
          "description": "The identities the role is assigned to. It can have the following values: * `{user_email}`: An email address that represents a specific Google account. For example: `alice@gmail.com`. * `{group_email}`: An email address that represents a Google group. For example, `viewers@gmail.com`.",
          "items": {
            "type": "string"
          }
        },
        "role": {
          "type": "string",
          "description": "Required. Role that is assigned to `members`."
        }
      }
    },
    "SasPortalDeviceConfig": {
      "properties": {
        "measurementCapabilities": {
          "description": "Measurement reporting capabilities of the device.",
          "items": {
            "type": "string",
            "enum": [
              "MEASUREMENT_CAPABILITY_UNSPECIFIED",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITH_GRANT",
              "MEASUREMENT_CAPABILITY_RECEIVED_POWER_WITHOUT_GRANT"
            ],
            "enumDescriptions": [
              "",
              "",
              ""
            ]
          },
          "type": "array"
        },
        "category": {
          "enum": [
            "DEVICE_CATEGORY_UNSPECIFIED",
            "DEVICE_CATEGORY_A",
            "DEVICE_CATEGORY_B"
          ],
          "enumDescriptions": [
            "Unspecified device category.",
            "Category A.",
            "Category B."
          ],
          "description": "FCC category of the device.",
          "type": "string"
        },
        "userId": {
          "type": "string",
          "description": "The identifier of a device user."
        },
        "model": {
          "description": "Information about this device model.",
          "$ref": "SasPortalDeviceModel"
        },
        "callSign": {
          "type": "string",
          "description": "The call sign of the device operator."
        },
        "state": {
          "enum": [
            "DEVICE_CONFIG_STATE_UNSPECIFIED",
            "DRAFT",
            "FINAL"
          ],
          "description": "State of the configuration.",
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "type": "string"
        },
        "airInterface": {
          "$ref": "SasPortalDeviceAirInterface",
          "description": "Information about this device's air interface."
        },
        "isSigned": {
          "description": "Output-only. Whether the configuration has been signed by a CPI.",
          "type": "boolean"
        },
        "updateTime": {
          "type": "string",
          "description": "Output-only. The last time the device configuration was edited.",
          "format": "google-datetime"
        },
        "installationParams": {
          "description": "Installation parameters for the device.",
          "$ref": "SasPortalInstallationParams"
        }
      },
      "description": "Information about the device configuration.",
      "id": "SasPortalDeviceConfig",
      "type": "object"
    },
    "SasPortalPolicy": {
      "description": "Defines an access control policy to the resources.",
      "id": "SasPortalPolicy",
      "type": "object",
      "properties": {
        "etag": {
          "type": "string",
          "format": "byte",
          "description": "The [etag] is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the [etag] in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An [etag] is returned in the response to [GetPolicy], and systems are expected to put that etag in the request to [SetPolicy] to ensure that their change will be applied to the same version of the policy. If no [etag] is provided in the call to [SetPolicy], then the existing policy is overwritten blindly."
        },
        "assignments": {
          "items": {
            "$ref": "SasPortalAssignment"
          },
          "type": "array"
        }
      }
    },
    "SasPortalMoveDeploymentRequest": {
      "description": "Request for MoveDeployment method.",
      "id": "SasPortalMoveDeploymentRequest",
      "properties": {
        "destination": {
          "type": "string",
          "description": "Required. The name of the new parent resource Node or Customer to reparent the deployment under."
        }
      },
      "type": "object"
    },
    "SasPortalDeviceGrant": {
      "id": "SasPortalDeviceGrant",
      "properties": {
        "moveList": {
          "description": "The DPA move lists on which this grant appears.",
          "items": {
            "$ref": "SasPortalDpaMoveList"
          },
          "type": "array"
        },
        "channelType": {
          "enum": [
            "CHANNEL_TYPE_UNSPECIFIED",
            "CHANNEL_TYPE_GAA",
            "CHANNEL_TYPE_PAL"
          ],
          "enumDescriptions": [
            "",
            "",
            ""
          ],
          "description": "Type of channel used.",
          "type": "string"
        },
        "frequencyRange": {
          "description": "The transmission frequency range.",
          "$ref": "SasPortalFrequencyRange"
        },
        "suspensionReason": {
          "description": "If the grant is suspended, the reason(s) for suspension.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "grantId": {
          "type": "string",
          "description": "Grant Id."
        },
        "maxEirp": {
          "type": "number",
          "description": "Maximum Equivalent Isotropically Radiated Power (EIRP) permitted by the grant. The maximum EIRP is in units of dBm/MHz. The value of maxEirp represents the average (RMS) EIRP that would be measured by the procedure defined in FCC part 96.41(e)(3).",
          "format": "double"
        },
        "state": {
          "description": "State of the grant.",
          "enum": [
            "GRANT_STATE_UNSPECIFIED",
            "GRANT_STATE_GRANTED",
            "GRANT_STATE_TERMINATED",
            "GRANT_STATE_SUSPENDED",
            "GRANT_STATE_AUTHORIZED",
            "GRANT_STATE_EXPIRED"
          ],
          "enumDescriptions": [
            "",
            "The grant has been granted but the device is not heartbeating on it.",
            "The grant has been terminated by the SAS.",
            "The grant has been suspended by the SAS.",
            "The device is currently transmitting.",
            "The grant has expired."
          ],
          "type": "string"
        },
        "expireTime": {
          "format": "google-datetime",
          "description": "The expiration time of the grant.",
          "type": "string"
        }
      },
      "description": "Device grant. It is an authorization provided by the Spectrum Access System to a device to transmit using specified operating parameters after a successful heartbeat by the device.",
      "type": "object"
    },
    "SasPortalListCustomersResponse": {
      "properties": {
        "customers": {
          "description": "The list of customers that match the request.",
          "type": "array",
          "items": {
            "$ref": "SasPortalCustomer"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "A pagination token returned from a previous call to ListCustomers method that indicates from where listing should continue. If the field is missing or empty, it means there are no more customers."
        }
      },
      "id": "SasPortalListCustomersResponse",
      "type": "object",
      "description": "Response for `ListCustomers`."
    },
    "SasPortalDeviceModel": {
      "id": "SasPortalDeviceModel",
      "properties": {
        "softwareVersion": {
          "description": "The software version of the device.",
          "type": "string"
        },
        "hardwareVersion": {
          "type": "string",
          "description": "The hardware version of the device."
        },
        "name": {
          "description": "The name of the device model.",
          "type": "string"
        },
        "vendor": {
          "description": "The name of the device vendor.",
          "type": "string"
        },
        "firmwareVersion": {
          "type": "string",
          "description": "The firmware version of the device."
        }
      },
      "description": "Information about the model of the device.",
      "type": "object"
    },
    "SasPortalBulkCreateDeviceRequest": {
      "description": "Request for BulkCreateDevice method.",
      "properties": {
        "csv": {
          "description": "Required. A csv with each row representing a [device]. Each row must conform to the regulations described on CreateDeviceRequest's device field.",
          "type": "string"
        }
      },
      "id": "SasPortalBulkCreateDeviceRequest",
      "type": "object"
    }
  },
  "batchPath": "batch"
}
