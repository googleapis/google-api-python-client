{
  "ownerDomain": "google.com",
  "schemas": {
    "Location": {
      "type": "object",
      "properties": {
        "labels": {
          "description": "Cross-service attributes for the location. For example {\"cloud.googleapis.com/region\": \"us-east1\"}",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        },
        "displayName": {
          "type": "string",
          "description": "The friendly name for this location, typically a nearby city name. For example, \"Tokyo\"."
        },
        "name": {
          "description": "Resource name for the location, which may vary between implementations. For example: `\"projects/example-project/locations/us-east1\"`",
          "type": "string"
        },
        "locationId": {
          "description": "The canonical id for this location. For example: `\"us-east1\"`.",
          "type": "string"
        },
        "metadata": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "Service-specific metadata. For example the available capacity at the given location."
        }
      },
      "description": "A resource that represents Google Cloud Platform location.",
      "id": "Location"
    },
    "ActivateCertificateAuthorityRequest": {
      "type": "object",
      "description": "Request message for CertificateAuthorityService.ActivateCertificateAuthority.",
      "id": "ActivateCertificateAuthorityRequest",
      "properties": {
        "pemCaCertificate": {
          "description": "Required. The signed CA certificate issued from FetchCertificateAuthorityCsrResponse.pem_csr.",
          "type": "string"
        },
        "subordinateConfig": {
          "description": "Required. Must include information about the issuer of 'pem_ca_certificate', and any further issuers until the self-signed CA.",
          "$ref": "SubordinateConfig"
        },
        "requestId": {
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "OperationMetadata": {
      "properties": {
        "endTime": {
          "description": "Output only. The time the operation finished running.",
          "type": "string",
          "readOnly": true,
          "format": "google-datetime"
        },
        "createTime": {
          "readOnly": true,
          "description": "Output only. The time the operation was created.",
          "type": "string",
          "format": "google-datetime"
        },
        "apiVersion": {
          "type": "string",
          "description": "Output only. API version used to start the operation.",
          "readOnly": true
        },
        "verb": {
          "readOnly": true,
          "description": "Output only. Name of the verb executed by the operation.",
          "type": "string"
        },
        "target": {
          "readOnly": true,
          "type": "string",
          "description": "Output only. Server-defined resource path for the target of the operation."
        },
        "requestedCancellation": {
          "type": "boolean",
          "readOnly": true,
          "description": "Output only. Identifies whether the user has requested cancellation of the operation. Operations that have successfully been cancelled have Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`."
        },
        "statusMessage": {
          "description": "Output only. Human-readable status of the operation, if any.",
          "type": "string",
          "readOnly": true
        }
      },
      "type": "object",
      "id": "OperationMetadata",
      "description": "Represents the metadata of the long-running operation."
    },
    "ListReusableConfigsResponse": {
      "id": "ListReusableConfigsResponse",
      "type": "object",
      "properties": {
        "unreachable": {
          "type": "array",
          "description": "A list of locations (e.g. \"us-west1\") that could not be reached.",
          "items": {
            "type": "string"
          }
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass this value in ListReusableConfigsRequest.next_page_token to retrieve the next page of results.",
          "type": "string"
        },
        "reusableConfigs": {
          "description": "The list of ReusableConfigs.",
          "type": "array",
          "items": {
            "$ref": "ReusableConfig"
          }
        }
      },
      "description": "Response message for CertificateAuthorityService.ListReusableConfigs."
    },
    "AllowedSubjectAltNames": {
      "id": "AllowedSubjectAltNames",
      "description": "AllowedSubjectAltNames specifies the allowed values for SubjectAltNames by the CertificateAuthority when issuing Certificates.",
      "type": "object",
      "properties": {
        "allowedDnsNames": {
          "description": "Optional. Contains valid, fully-qualified host names. Glob patterns are also supported. To allow an explicit wildcard certificate, escape with backlash (i.e. \"\\*\"). E.g. for globbed entries: '*bar.com' will allow 'foo.bar.com', but not '*.bar.com', unless the allow_globbing_dns_wildcards field is set. E.g. for wildcard entries: '\\*.bar.com' will allow '*.bar.com', but not 'foo.bar.com'.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allowedUris": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Contains valid RFC 3986 URIs. Glob patterns are also supported. To match across path seperators (i.e. '/') use the double star glob pattern (i.e. '**')."
        },
        "allowGlobbingDnsWildcards": {
          "type": "boolean",
          "description": "Optional. Specifies if glob patterns used for allowed_dns_names allow wildcard certificates. If this is set, certificate requests with wildcard domains will be permitted to match a glob pattern specified in allowed_dns_names. Otherwise, certificate requests with wildcard domains will be permitted only if allowed_dns_names contains a literal wildcard."
        },
        "allowedIps": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Optional. Contains valid 32-bit IPv4 addresses and subnet ranges or RFC 4291 IPv6 addresses and subnet ranges. Subnet ranges are specified using the '/' notation (e.g. 10.0.0.0/8, 2001:700:300:1800::/64). Glob patterns are supported only for ip address entries (i.e. not for subnet ranges)."
        },
        "allowedEmailAddresses": {
          "description": "Optional. Contains valid RFC 2822 E-mail addresses. Glob patterns are also supported.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "allowCustomSans": {
          "description": "Optional. Specifies if to allow custom X509Extension values.",
          "type": "boolean"
        }
      }
    },
    "AuditConfig": {
      "properties": {
        "auditLogConfigs": {
          "description": "The configuration for logging of each type of permission.",
          "type": "array",
          "items": {
            "$ref": "AuditLogConfig"
          }
        },
        "service": {
          "description": "Specifies a service that will be enabled for audit logging. For example, `storage.googleapis.com`, `cloudsql.googleapis.com`. `allServices` is a special value that covers all services.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "AuditConfig",
      "description": "Specifies the audit configuration for a service. The configuration determines which permission types are logged, and what identities, if any, are exempted from logging. An AuditConfig must have one or more AuditLogConfigs. If there are AuditConfigs for both `allServices` and a specific service, the union of the two AuditConfigs is used for that service: the log_types specified in each AuditConfig are enabled, and the exempted_members in each AuditLogConfig are exempted. Example Policy with multiple AuditConfigs: { \"audit_configs\": [ { \"service\": \"allServices\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" }, { \"log_type\": \"ADMIN_READ\" } ] }, { \"service\": \"sampleservice.googleapis.com\", \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\" }, { \"log_type\": \"DATA_WRITE\", \"exempted_members\": [ \"user:aliya@example.com\" ] } ] } ] } For sampleservice, this policy enables DATA_READ, DATA_WRITE and ADMIN_READ logging. It also exempts jose@example.com from DATA_READ logging, and aliya@example.com from DATA_WRITE logging."
    },
    "EnableCertificateAuthorityRequest": {
      "description": "Request message for CertificateAuthorityService.EnableCertificateAuthority.",
      "type": "object",
      "id": "EnableCertificateAuthorityRequest",
      "properties": {
        "requestId": {
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1AttributeValue": {
      "description": "The allowed types for [VALUE] in a `[KEY]:[VALUE]` attribute.",
      "type": "object",
      "properties": {
        "stringValue": {
          "description": "A string up to 256 bytes long.",
          "$ref": "GoogleApiServicecontrolV1TruncatableString"
        },
        "intValue": {
          "description": "A 64-bit signed integer.",
          "format": "int64",
          "type": "string"
        },
        "boolValue": {
          "description": "A Boolean value represented by `true` or `false`.",
          "type": "boolean"
        }
      },
      "id": "GoogleApiServicecontrolV1AttributeValue"
    },
    "ReusableConfig": {
      "type": "object",
      "description": "A ReusableConfig refers to a managed ReusableConfigValues. Those, in turn, are used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.",
      "properties": {
        "name": {
          "description": "Output only. The resource path for this ReusableConfig in the format `projects/*/locations/*/reusableConfigs/*`.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which this ReusableConfig was created.",
          "format": "google-datetime"
        },
        "description": {
          "description": "Optional. A human-readable description of scenarios these ReusableConfigValues may be compatible with.",
          "type": "string"
        },
        "values": {
          "description": "Required. The config values.",
          "$ref": "ReusableConfigValues"
        },
        "labels": {
          "description": "Optional. Labels with user-defined metadata.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this ReusableConfig was updated."
        }
      },
      "id": "ReusableConfig"
    },
    "GoogleApiServicecontrolV1MetricValueSet": {
      "type": "object",
      "properties": {
        "metricName": {
          "description": "The metric name defined in the service configuration.",
          "type": "string"
        },
        "metricValues": {
          "type": "array",
          "description": "The values in this metric.",
          "items": {
            "$ref": "GoogleApiServicecontrolV1MetricValue"
          }
        }
      },
      "description": "Represents a set of metric values in the same metric. Each metric value in the set should have a unique combination of start time, end time, and label values.",
      "id": "GoogleApiServicecontrolV1MetricValueSet"
    },
    "CertificateConfig": {
      "description": "A CertificateConfig describes an X.509 certificate or CSR that is to be created, as an alternative to using ASN.1.",
      "type": "object",
      "properties": {
        "publicKey": {
          "description": "Optional. The public key that corresponds to this config. This is, for example, used when issuing Certificates, but not when creating a self-signed CertificateAuthority or CertificateAuthority CSR.",
          "$ref": "PublicKey"
        },
        "reusableConfig": {
          "description": "Required. Describes how some of the technical fields in a certificate should be populated.",
          "$ref": "ReusableConfigWrapper"
        },
        "subjectConfig": {
          "description": "Required. Specifies some of the values in a certificate that are related to the subject.",
          "$ref": "SubjectConfig"
        }
      },
      "id": "CertificateConfig"
    },
    "ReusableConfigValues": {
      "description": "A ReusableConfigValues is used to describe certain fields of an X.509 certificate, such as the key usage fields, fields specific to CA certificates, certificate policy extensions and custom extensions.",
      "type": "object",
      "id": "ReusableConfigValues",
      "properties": {
        "keyUsage": {
          "description": "Optional. Indicates the intended use for keys that correspond to a certificate.",
          "$ref": "KeyUsage"
        },
        "aiaOcspServers": {
          "description": "Optional. Describes Online Certificate Status Protocol (OCSP) endpoint addresses that appear in the \"Authority Information Access\" extension in the certificate.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "policyIds": {
          "description": "Optional. Describes the X.509 certificate policy object identifiers, per https://tools.ietf.org/html/rfc5280#section-4.2.1.4.",
          "type": "array",
          "items": {
            "$ref": "ObjectId"
          }
        },
        "additionalExtensions": {
          "description": "Optional. Describes custom X.509 extensions.",
          "items": {
            "$ref": "X509Extension"
          },
          "type": "array"
        },
        "caOptions": {
          "$ref": "CaOptions",
          "description": "Optional. Describes options in this ReusableConfigValues that are relevant in a CA certificate."
        }
      }
    },
    "GoogleApiServicecontrolV1Attributes": {
      "type": "object",
      "id": "GoogleApiServicecontrolV1Attributes",
      "description": "A set of attributes, each in the format `[KEY]:[VALUE]`.",
      "properties": {
        "droppedAttributesCount": {
          "description": "The number of attributes that were discarded. Attributes can be discarded because their keys are too long or because there are too many attributes. If this value is 0 then all attributes are valid.",
          "type": "integer",
          "format": "int32"
        },
        "attributeMap": {
          "type": "object",
          "description": "The set of attributes. Each attribute's key can be up to 128 bytes long. The value can be a string up to 256 bytes, a signed 64-bit integer, or the Boolean values `true` and `false`. For example: \"/instance_id\": \"my-instance\" \"/http/user_agent\": \"\" \"/http/request_bytes\": 300 \"abc.com/myattribute\": true",
          "additionalProperties": {
            "$ref": "GoogleApiServicecontrolV1AttributeValue"
          }
        }
      }
    },
    "AuditLogConfig": {
      "type": "object",
      "properties": {
        "logType": {
          "enum": [
            "LOG_TYPE_UNSPECIFIED",
            "ADMIN_READ",
            "DATA_WRITE",
            "DATA_READ"
          ],
          "enumDescriptions": [
            "Default case. Should never be this.",
            "Admin reads. Example: CloudIAM getIamPolicy",
            "Data writes. Example: CloudSQL Users create",
            "Data reads. Example: CloudSQL Users list"
          ],
          "description": "The log type that this config enables.",
          "type": "string"
        },
        "exemptedMembers": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "Specifies the identities that do not cause logging for this type of permission. Follows the same format of Binding.members."
        }
      },
      "description": "Provides the configuration for logging a type of permissions. Example: { \"audit_log_configs\": [ { \"log_type\": \"DATA_READ\", \"exempted_members\": [ \"user:jose@example.com\" ] }, { \"log_type\": \"DATA_WRITE\" } ] } This enables 'DATA_READ' and 'DATA_WRITE' logging, while exempting jose@example.com from DATA_READ logging.",
      "id": "AuditLogConfig"
    },
    "Operation": {
      "id": "Operation",
      "properties": {
        "response": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "type": "object",
          "description": "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`."
        },
        "error": {
          "description": "The error result of the operation in case of failure or cancellation.",
          "$ref": "Status"
        },
        "done": {
          "type": "boolean",
          "description": "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available."
        },
        "metadata": {
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object",
          "description": "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any."
        },
        "name": {
          "description": "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "This resource represents a long-running operation that is the result of a network API call."
    },
    "AllowedConfigList": {
      "type": "object",
      "properties": {
        "allowedConfigValues": {
          "type": "array",
          "description": "Required. All Certificates issued by the CertificateAuthority must match at least one listed ReusableConfigWrapper. If a ReusableConfigWrapper has an empty field, any value will be allowed for that field.",
          "items": {
            "$ref": "ReusableConfigWrapper"
          }
        }
      },
      "id": "AllowedConfigList"
    },
    "AccessUrls": {
      "type": "object",
      "id": "AccessUrls",
      "description": "URLs where a CertificateAuthority will publish content.",
      "properties": {
        "crlAccessUrl": {
          "type": "string",
          "description": "The URL where this CertificateAuthority's CRLs are published. This will only be set for CAs that have been activated."
        },
        "caCertificateAccessUrl": {
          "type": "string",
          "description": "The URL where this CertificateAuthority's CA certificate is published. This will only be set for CAs that have been activated."
        }
      }
    },
    "GoogleApiServicecontrolV1HttpRequest": {
      "id": "GoogleApiServicecontrolV1HttpRequest",
      "description": "A common proto for logging HTTP requests. Only contains semantics defined by the HTTP specification. Product-specific logging information MUST be defined in a separate message.",
      "properties": {
        "cacheHit": {
          "description": "Whether or not an entity was served from cache (with or without validation).",
          "type": "boolean"
        },
        "requestUrl": {
          "description": "The scheme (http, https), the host name, the path, and the query portion of the URL that was requested. Example: `\"http://example.com/some/info?color=red\"`.",
          "type": "string"
        },
        "cacheFillBytes": {
          "type": "string",
          "description": "The number of HTTP response bytes inserted into cache. Set only when a cache fill was attempted.",
          "format": "int64"
        },
        "cacheLookup": {
          "description": "Whether or not a cache lookup was attempted.",
          "type": "boolean"
        },
        "referer": {
          "type": "string",
          "description": "The referer URL of the request, as defined in [HTTP/1.1 Header Field Definitions](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html)."
        },
        "responseSize": {
          "format": "int64",
          "type": "string",
          "description": "The size of the HTTP response message sent back to the client, in bytes, including the response headers and the response body."
        },
        "requestSize": {
          "type": "string",
          "format": "int64",
          "description": "The size of the HTTP request message in bytes, including the request headers and the request body."
        },
        "latency": {
          "description": "The request processing latency on the server, from the time the request was received until the response was sent.",
          "type": "string",
          "format": "google-duration"
        },
        "protocol": {
          "type": "string",
          "description": "Protocol used for the request. Examples: \"HTTP/1.1\", \"HTTP/2\", \"websocket\""
        },
        "requestMethod": {
          "description": "The request method. Examples: `\"GET\"`, `\"HEAD\"`, `\"PUT\"`, `\"POST\"`.",
          "type": "string"
        },
        "serverIp": {
          "description": "The IP address (IPv4 or IPv6) of the origin server that the request was sent to.",
          "type": "string"
        },
        "status": {
          "format": "int32",
          "description": "The response code indicating the status of the response. Examples: 200, 404.",
          "type": "integer"
        },
        "cacheValidatedWithOriginServer": {
          "type": "boolean",
          "description": "Whether or not the response was validated with the origin server before being served from cache. This field is only meaningful if `cache_hit` is True."
        },
        "remoteIp": {
          "type": "string",
          "description": "The IP address (IPv4 or IPv6) of the client that issued the HTTP request. Examples: `\"192.168.1.1\"`, `\"FE80::0202:B3FF:FE1E:8329\"`."
        },
        "userAgent": {
          "description": "The user agent sent by the client. Example: `\"Mozilla/4.0 (compatible; MSIE 6.0; Windows 98; Q312461; .NET CLR 1.0.3705)\"`.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "ScheduleDeleteCertificateAuthorityRequest": {
      "id": "ScheduleDeleteCertificateAuthorityRequest",
      "type": "object",
      "description": "Request message for CertificateAuthorityService.ScheduleDeleteCertificateAuthority.",
      "properties": {
        "requestId": {
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        },
        "ignoreActiveCertificates": {
          "type": "boolean",
          "description": "Optional. This field allows the CA to be scheduled for deletion even if the CA has active certs. Active certs include both unrevoked and unexpired certs."
        }
      }
    },
    "Expr": {
      "type": "object",
      "id": "Expr",
      "description": "Represents a textual expression in the Common Expression Language (CEL) syntax. CEL is a C-like expression language. The syntax and semantics of CEL are documented at https://github.com/google/cel-spec. Example (Comparison): title: \"Summary size limit\" description: \"Determines if a summary is less than 100 chars\" expression: \"document.summary.size() \u003c 100\" Example (Equality): title: \"Requestor is owner\" description: \"Determines if requestor is the document owner\" expression: \"document.owner == request.auth.claims.email\" Example (Logic): title: \"Public documents\" description: \"Determine whether the document should be publicly visible\" expression: \"document.type != 'private' && document.type != 'internal'\" Example (Data Manipulation): title: \"Notification string\" description: \"Create a notification string with a timestamp.\" expression: \"'New message received at ' + string(document.create_time)\" The exact variables and functions that may be referenced within an expression are determined by the service that evaluates it. See the service documentation for additional information.",
      "properties": {
        "expression": {
          "description": "Textual representation of an expression in Common Expression Language syntax.",
          "type": "string"
        },
        "title": {
          "type": "string",
          "description": "Optional. Title for the expression, i.e. a short string describing its purpose. This can be used e.g. in UIs which allow to enter the expression."
        },
        "location": {
          "type": "string",
          "description": "Optional. String indicating the location of the expression for error reporting, e.g. a file name and a position in the file."
        },
        "description": {
          "description": "Optional. Description of the expression. This is a longer text which describes the expression, e.g. when hovered over it in a UI.",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1ReportRequest": {
      "properties": {
        "serviceConfigId": {
          "type": "string",
          "description": "Specifies which version of service config should be used to process the request. If unspecified or no matching version can be found, the latest one will be used."
        },
        "serviceName": {
          "description": "The service name as specified in its service configuration. For example, `\"pubsub.googleapis.com\"`. See [google.api.Service](https://cloud.google.com/service-management/reference/rpc/google.api#google.api.Service) for the definition of a service name.",
          "type": "string"
        },
        "operations": {
          "items": {
            "$ref": "GoogleApiServicecontrolV1Operation"
          },
          "type": "array",
          "description": "Operations to be reported. Typically the service should report one operation per request. Putting multiple operations into a single request is allowed, but should be used only when multiple operations are natually available at the time of the report. There is no limit on the number of operations in the same ReportRequest, however the ReportRequest size should be no larger than 1MB. See ReportResponse.report_errors for partial failure behavior."
        }
      },
      "id": "GoogleApiServicecontrolV1ReportRequest",
      "type": "object",
      "description": "Request message for the Report method."
    },
    "TestIamPermissionsResponse": {
      "description": "Response message for `TestIamPermissions` method.",
      "type": "object",
      "id": "TestIamPermissionsResponse",
      "properties": {
        "permissions": {
          "description": "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GoogleApiServicecontrolV1LogEntrySourceLocation": {
      "type": "object",
      "properties": {
        "function": {
          "description": "Optional. Human-readable name of the function or method being invoked, with optional context such as the class or package name. This information may be used in contexts such as the logs viewer, where a file and line number are less meaningful. The format can vary by language. For example: `qual.if.ied.Class.method` (Java), `dir/package.func` (Go), `function` (Python).",
          "type": "string"
        },
        "line": {
          "type": "string",
          "format": "int64",
          "description": "Optional. Line within the source file. 1-based; 0 indicates no line number available."
        },
        "file": {
          "type": "string",
          "description": "Optional. Source file name. Depending on the runtime environment, this might be a simple name or a fully-qualified name."
        }
      },
      "description": "Additional information about the source code location that produced the log entry.",
      "id": "GoogleApiServicecontrolV1LogEntrySourceLocation"
    },
    "GoogleApiServicecontrolV1TraceSpan": {
      "properties": {
        "parentSpanId": {
          "type": "string",
          "description": "The [SPAN_ID] of this span's parent span. If this is a root span, then this field must be empty."
        },
        "displayName": {
          "description": "A description of the span's operation (up to 128 bytes). Stackdriver Trace displays the description in the Google Cloud Platform Console. For example, the display name can be a qualified method name or a file name and a line number where the operation is called. A best practice is to use the same display name within an application and at the same call point. This makes it easier to correlate spans in different traces.",
          "$ref": "GoogleApiServicecontrolV1TruncatableString"
        },
        "spanKind": {
          "enum": [
            "SPAN_KIND_UNSPECIFIED",
            "INTERNAL",
            "SERVER",
            "CLIENT",
            "PRODUCER",
            "CONSUMER"
          ],
          "description": "Distinguishes between spans generated in a particular context. For example, two spans with the same name may be distinguished using `CLIENT` (caller) and `SERVER` (callee) to identify an RPC call.",
          "enumDescriptions": [
            "Unspecified. Do NOT use as default. Implementations MAY assume SpanKind.INTERNAL to be default.",
            "Indicates that the span is used internally. Default value.",
            "Indicates that the span covers server-side handling of an RPC or other remote network request.",
            "Indicates that the span covers the client-side wrapper around an RPC or other remote request.",
            "Indicates that the span describes producer sending a message to a broker. Unlike client and server, there is no direct critical path latency relationship between producer and consumer spans (e.g. publishing a message to a pubsub service).",
            "Indicates that the span describes consumer receiving a message from a broker. Unlike client and server, there is no direct critical path latency relationship between producer and consumer spans (e.g. receiving a message from a pubsub service subscription)."
          ],
          "type": "string"
        },
        "startTime": {
          "format": "google-datetime",
          "description": "The start time of the span. On the client side, this is the time kept by the local machine where the span execution starts. On the server side, this is the time when the server's application handler starts running.",
          "type": "string"
        },
        "endTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "The end time of the span. On the client side, this is the time kept by the local machine where the span execution ends. On the server side, this is the time when the server application handler stops running."
        },
        "sameProcessAsParentSpan": {
          "type": "boolean",
          "description": "(Optional) Set this parameter to indicate whether this span is in the same process as its parent. If you do not set this parameter, Stackdriver Trace is unable to take advantage of this helpful information."
        },
        "childSpanCount": {
          "type": "integer",
          "format": "int32",
          "description": "An optional number of child spans that were generated while this span was active. If set, allows implementation to detect missing child spans."
        },
        "name": {
          "description": "The resource name of the span in the following format: projects/[PROJECT_ID]/traces/[TRACE_ID]/spans/SPAN_ID is a unique identifier for a trace within a project; it is a 32-character hexadecimal encoding of a 16-byte array. [SPAN_ID] is a unique identifier for a span within a trace; it is a 16-character hexadecimal encoding of an 8-byte array.",
          "type": "string"
        },
        "status": {
          "$ref": "Status",
          "description": "An optional final status for this span."
        },
        "spanId": {
          "description": "The [SPAN_ID] portion of the span's resource name.",
          "type": "string"
        },
        "attributes": {
          "$ref": "GoogleApiServicecontrolV1Attributes",
          "description": "A set of attributes on the span. You can have up to 32 attributes per span."
        }
      },
      "id": "GoogleApiServicecontrolV1TraceSpan",
      "description": "A span represents a single operation within a trace. Spans can be nested to form a trace tree. Often, a trace contains a root span that describes the end-to-end latency, and one or more subspans for its sub-operations. A trace can also contain multiple root spans, or none at all. Spans do not need to be contiguous—there may be gaps or overlaps between spans in a trace.",
      "type": "object"
    },
    "RevokedCertificate": {
      "properties": {
        "certificate": {
          "description": "The resource path for the Certificate in the format `projects/*/locations/*/certificateAuthorities/*/certificates/*`.",
          "type": "string"
        },
        "revocationReason": {
          "type": "string",
          "enum": [
            "REVOCATION_REASON_UNSPECIFIED",
            "KEY_COMPROMISE",
            "CERTIFICATE_AUTHORITY_COMPROMISE",
            "AFFILIATION_CHANGED",
            "SUPERSEDED",
            "CESSATION_OF_OPERATION",
            "CERTIFICATE_HOLD",
            "PRIVILEGE_WITHDRAWN",
            "ATTRIBUTE_AUTHORITY_COMPROMISE"
          ],
          "enumDescriptions": [
            "Default unspecified value. This value does indicate that a Certificate has been revoked, but that a reason has not been recorded.",
            "Key material for this Certificate may have leaked.",
            "The key material for a certificate authority in the issuing path may have leaked.",
            "The subject or other attributes in this Certificate have changed.",
            "This Certificate has been superseded.",
            "This Certificate or entities in the issuing path have ceased to operate.",
            "This Certificate should not be considered valid, it is expected that it may become valid in the future.",
            "This Certificate no longer has permission to assert the listed attributes.",
            "The authority which determines appropriate attributes for a Certificate may have been compromised."
          ],
          "description": "The reason the Certificate was revoked."
        },
        "hexSerialNumber": {
          "description": "The serial number of the Certificate.",
          "type": "string"
        }
      },
      "description": "Describes a revoked Certificate.",
      "id": "RevokedCertificate",
      "type": "object"
    },
    "ListLocationsResponse": {
      "description": "The response message for Locations.ListLocations.",
      "id": "ListLocationsResponse",
      "properties": {
        "locations": {
          "description": "A list of locations that matches the specified filter in the request.",
          "items": {
            "$ref": "Location"
          },
          "type": "array"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The standard List next-page token."
        }
      },
      "type": "object"
    },
    "TestIamPermissionsRequest": {
      "properties": {
        "permissions": {
          "description": "The set of permissions to check for the `resource`. Permissions with wildcards (such as '*' or 'storage.*') are not allowed. For more information see [IAM Overview](https://cloud.google.com/iam/docs/overview#permissions).",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "TestIamPermissionsRequest",
      "description": "Request message for `TestIamPermissions` method.",
      "type": "object"
    },
    "FetchCertificateAuthorityCsrResponse": {
      "id": "FetchCertificateAuthorityCsrResponse",
      "description": "Response message for CertificateAuthorityService.FetchCertificateAuthorityCsr.",
      "type": "object",
      "properties": {
        "pemCsr": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The PEM-encoded signed certificate signing request (CSR)."
        }
      }
    },
    "RevokeCertificateRequest": {
      "type": "object",
      "properties": {
        "reason": {
          "enum": [
            "REVOCATION_REASON_UNSPECIFIED",
            "KEY_COMPROMISE",
            "CERTIFICATE_AUTHORITY_COMPROMISE",
            "AFFILIATION_CHANGED",
            "SUPERSEDED",
            "CESSATION_OF_OPERATION",
            "CERTIFICATE_HOLD",
            "PRIVILEGE_WITHDRAWN",
            "ATTRIBUTE_AUTHORITY_COMPROMISE"
          ],
          "enumDescriptions": [
            "Default unspecified value. This value does indicate that a Certificate has been revoked, but that a reason has not been recorded.",
            "Key material for this Certificate may have leaked.",
            "The key material for a certificate authority in the issuing path may have leaked.",
            "The subject or other attributes in this Certificate have changed.",
            "This Certificate has been superseded.",
            "This Certificate or entities in the issuing path have ceased to operate.",
            "This Certificate should not be considered valid, it is expected that it may become valid in the future.",
            "This Certificate no longer has permission to assert the listed attributes.",
            "The authority which determines appropriate attributes for a Certificate may have been compromised."
          ],
          "type": "string",
          "description": "Required. The RevocationReason for revoking this certificate."
        },
        "requestId": {
          "type": "string",
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "description": "Request message for CertificateAuthorityService.RevokeCertificate.",
      "id": "RevokeCertificateRequest"
    },
    "Status": {
      "properties": {
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "code": {
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "type": "integer"
        },
        "message": {
          "type": "string",
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client."
        }
      },
      "type": "object",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "id": "Status"
    },
    "Subject": {
      "description": "Subject describes parts of a distinguished name that, in turn, describes the subject of the certificate.",
      "type": "object",
      "id": "Subject",
      "properties": {
        "locality": {
          "description": "The locality or city of the subject.",
          "type": "string"
        },
        "organizationalUnit": {
          "description": "The organizational_unit of the subject.",
          "type": "string"
        },
        "organization": {
          "type": "string",
          "description": "The organization of the subject."
        },
        "streetAddress": {
          "type": "string",
          "description": "The street address of the subject."
        },
        "postalCode": {
          "type": "string",
          "description": "The postal code of the subject."
        },
        "countryCode": {
          "type": "string",
          "description": "The country code of the subject."
        },
        "province": {
          "description": "The province, territory, or regional state of the subject.",
          "type": "string"
        }
      }
    },
    "ListCertificateAuthoritiesResponse": {
      "id": "ListCertificateAuthoritiesResponse",
      "type": "object",
      "description": "Response message for CertificateAuthorityService.ListCertificateAuthorities.",
      "properties": {
        "certificateAuthorities": {
          "description": "The list of CertificateAuthorities.",
          "items": {
            "$ref": "CertificateAuthority"
          },
          "type": "array"
        },
        "unreachable": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "A list of locations (e.g. \"us-west1\") that could not be reached."
        },
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass this value in ListCertificateAuthoritiesRequest.next_page_token to retrieve the next page of results.",
          "type": "string"
        }
      }
    },
    "GoogleApiServicecontrolV1ResourceInfo": {
      "description": "Describes a resource associated with this operation.",
      "id": "GoogleApiServicecontrolV1ResourceInfo",
      "properties": {
        "resourceLocation": {
          "description": "The location of the resource. If not empty, the resource will be checked against location policy. The value must be a valid zone, region or multiregion. For example: \"europe-west4\" or \"northamerica-northeast1-a\"",
          "type": "string"
        },
        "resourceName": {
          "description": "Name of the resource. This is used for auditing purposes.",
          "type": "string"
        },
        "resourceContainer": {
          "description": "The identifier of the parent of this resource instance. Must be in one of the following formats: - `projects/` - `folders/` - `organizations/`",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Binding": {
      "type": "object",
      "properties": {
        "role": {
          "type": "string",
          "description": "Role that is assigned to `members`. For example, `roles/viewer`, `roles/editor`, or `roles/owner`."
        },
        "condition": {
          "description": "The condition that is associated with this binding. If the condition evaluates to `true`, then this binding applies to the current request. If the condition evaluates to `false`, then this binding does not apply to the current request. However, a different role binding might grant the same role to one or more of the members in this binding. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "$ref": "Expr"
        },
        "members": {
          "description": "Specifies the identities requesting access for a Cloud Platform resource. `members` can have the following values: * `allUsers`: A special identifier that represents anyone who is on the internet; with or without a Google account. * `allAuthenticatedUsers`: A special identifier that represents anyone who is authenticated with a Google account or a service account. * `user:{emailid}`: An email address that represents a specific Google account. For example, `alice@example.com` . * `serviceAccount:{emailid}`: An email address that represents a service account. For example, `my-other-app@appspot.gserviceaccount.com`. * `group:{emailid}`: An email address that represents a Google group. For example, `admins@example.com`. * `deleted:user:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a user that has been recently deleted. For example, `alice@example.com?uid=123456789012345678901`. If the user is recovered, this value reverts to `user:{emailid}` and the recovered user retains the role in the binding. * `deleted:serviceAccount:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a service account that has been recently deleted. For example, `my-other-app@appspot.gserviceaccount.com?uid=123456789012345678901`. If the service account is undeleted, this value reverts to `serviceAccount:{emailid}` and the undeleted service account retains the role in the binding. * `deleted:group:{emailid}?uid={uniqueid}`: An email address (plus unique identifier) representing a Google group that has been recently deleted. For example, `admins@example.com?uid=123456789012345678901`. If the group is recovered, this value reverts to `group:{emailid}` and the recovered group retains the role in the binding. * `domain:{domain}`: The G Suite domain (primary) that represents all the users of that domain. For example, `google.com` or `example.com`. ",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "id": "Binding",
      "description": "Associates `members` with a `role`."
    },
    "KeyVersionSpec": {
      "type": "object",
      "properties": {
        "algorithm": {
          "description": "Required. The algorithm to use for creating a managed Cloud KMS key for a for a simplified experience. All managed keys will be have their ProtectionLevel as `HSM`.",
          "type": "string",
          "enumDescriptions": [
            "Not specified.",
            "maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_2048_SHA256",
            "maps to CryptoKeyVersionAlgorithm. RSA_SIGN_PSS_3072_SHA256",
            "maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PSS_4096_SHA256",
            "maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_2048_SHA256",
            "maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_3072_SHA256",
            "maps to CryptoKeyVersionAlgorithm.RSA_SIGN_PKCS1_4096_SHA256",
            "maps to CryptoKeyVersionAlgorithm.EC_SIGN_P256_SHA256",
            "maps to CryptoKeyVersionAlgorithm.EC_SIGN_P384_SHA384"
          ],
          "enum": [
            "SIGN_HASH_ALGORITHM_UNSPECIFIED",
            "RSA_PSS_2048_SHA256",
            "RSA_PSS_3072_SHA256",
            "RSA_PSS_4096_SHA256",
            "RSA_PKCS1_2048_SHA256",
            "RSA_PKCS1_3072_SHA256",
            "RSA_PKCS1_4096_SHA256",
            "EC_P256_SHA256",
            "EC_P384_SHA384"
          ]
        },
        "cloudKmsKeyVersion": {
          "type": "string",
          "description": "Required. The resource name for an existing Cloud KMS CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`. This option enables full flexibility in the key's capabilities and properties."
        }
      },
      "id": "KeyVersionSpec",
      "description": "A Cloud KMS key configuration that a CertificateAuthority will use."
    },
    "SubordinateConfigChain": {
      "properties": {
        "pemCertificates": {
          "description": "Required. Expected to be in leaf-to-root order according to RFC 5246.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "description": "This message describes a subordinate CA's issuer certificate chain. This wrapper exists for compatibility reasons.",
      "id": "SubordinateConfigChain",
      "type": "object"
    },
    "GoogleApiServicecontrolV1Distribution": {
      "properties": {
        "exemplars": {
          "type": "array",
          "description": "Example points. Must be in increasing order of `value` field.",
          "items": {
            "$ref": "Exemplar"
          }
        },
        "mean": {
          "format": "double",
          "description": "The arithmetic mean of the samples in the distribution. If `count` is zero then this field must be zero.",
          "type": "number"
        },
        "exponentialBuckets": {
          "$ref": "GoogleApiServicecontrolV1ExponentialBuckets",
          "description": "Buckets with exponentially growing width."
        },
        "linearBuckets": {
          "description": "Buckets with constant width.",
          "$ref": "GoogleApiServicecontrolV1LinearBuckets"
        },
        "sumOfSquaredDeviation": {
          "description": "The sum of squared deviations from the mean: Sum[i=1..count]((x_i - mean)^2) where each x_i is a sample values. If `count` is zero then this field must be zero, otherwise validation of the request fails.",
          "format": "double",
          "type": "number"
        },
        "bucketCounts": {
          "description": "The number of samples in each histogram bucket. `bucket_counts` are optional. If present, they must sum to the `count` value. The buckets are defined below in `bucket_option`. There are N buckets. `bucket_counts[0]` is the number of samples in the underflow bucket. `bucket_counts[1]` to `bucket_counts[N-1]` are the numbers of samples in each of the finite buckets. And `bucket_counts[N] is the number of samples in the overflow bucket. See the comments of `bucket_option` below for more details. Any suffix of trailing zeros may be omitted.",
          "items": {
            "type": "string",
            "format": "int64"
          },
          "type": "array"
        },
        "minimum": {
          "format": "double",
          "description": "The minimum of the population of values. Ignored if `count` is zero.",
          "type": "number"
        },
        "explicitBuckets": {
          "$ref": "GoogleApiServicecontrolV1ExplicitBuckets",
          "description": "Buckets with arbitrary user-provided width."
        },
        "maximum": {
          "type": "number",
          "description": "The maximum of the population of values. Ignored if `count` is zero.",
          "format": "double"
        },
        "count": {
          "description": "The total number of samples in the distribution. Must be \u003e= 0.",
          "format": "int64",
          "type": "string"
        }
      },
      "id": "GoogleApiServicecontrolV1Distribution",
      "description": "Distribution represents a frequency distribution of double-valued sample points. It contains the size of the population of sample points plus additional optional information: - the arithmetic mean of the samples - the minimum and maximum of the samples - the sum-squared-deviation of the samples, used to compute variance - a histogram of the values of the sample points",
      "type": "object"
    },
    "GoogleApiServicecontrolV1MetricValue": {
      "id": "GoogleApiServicecontrolV1MetricValue",
      "properties": {
        "moneyValue": {
          "description": "A money value.",
          "$ref": "Money"
        },
        "distributionValue": {
          "$ref": "GoogleApiServicecontrolV1Distribution",
          "description": "A distribution value."
        },
        "startTime": {
          "type": "string",
          "description": "The start of the time period over which this metric value's measurement applies. The time period has different semantics for different metric types (cumulative, delta, and gauge). See the metric definition documentation in the service configuration for details. If not specified, google.api.servicecontrol.v1.Operation.start_time will be used.",
          "format": "google-datetime"
        },
        "stringValue": {
          "description": "A text string value.",
          "type": "string"
        },
        "boolValue": {
          "type": "boolean",
          "description": "A boolean value."
        },
        "endTime": {
          "type": "string",
          "description": "The end of the time period over which this metric value's measurement applies. If not specified, google.api.servicecontrol.v1.Operation.end_time will be used.",
          "format": "google-datetime"
        },
        "int64Value": {
          "format": "int64",
          "description": "A signed 64-bit integer value.",
          "type": "string"
        },
        "doubleValue": {
          "type": "number",
          "format": "double",
          "description": "A double precision floating point value."
        },
        "labels": {
          "description": "The labels describing the metric value. See comments on google.api.servicecontrol.v1.Operation.labels for the overriding relationship. Note that this map must not contain monitored resource labels.",
          "additionalProperties": {
            "type": "string"
          },
          "type": "object"
        }
      },
      "description": "Represents a single metric value.",
      "type": "object"
    },
    "CancelOperationRequest": {
      "type": "object",
      "properties": {},
      "description": "The request message for Operations.CancelOperation.",
      "id": "CancelOperationRequest"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "id": "Empty",
      "properties": {},
      "type": "object"
    },
    "CertificateAuthority": {
      "properties": {
        "createTime": {
          "description": "Output only. The time at which this CertificateAuthority was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        },
        "accessUrls": {
          "readOnly": true,
          "description": "Output only. URLs for accessing content published by this CA, such as the CA certificate and CRLs.",
          "$ref": "AccessUrls"
        },
        "updateTime": {
          "type": "string",
          "readOnly": true,
          "format": "google-datetime",
          "description": "Output only. The time at which this CertificateAuthority was updated."
        },
        "pemCaCertificates": {
          "readOnly": true,
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Output only. This CertificateAuthority's certificate chain, including the current CertificateAuthority's certificate. Ordered such that the root issuer is the final element (consistent with RFC 5246). For a self-signed CA, this will only list the current CertificateAuthority's certificate."
        },
        "certificatePolicy": {
          "$ref": "CertificateAuthorityPolicy",
          "description": "Optional. The CertificateAuthorityPolicy to enforce when issuing Certificates from this CertificateAuthority."
        },
        "state": {
          "enum": [
            "STATE_UNSPECIFIED",
            "ENABLED",
            "DISABLED",
            "PENDING_ACTIVATION",
            "PENDING_DELETION"
          ],
          "description": "Output only. The State for this CertificateAuthority.",
          "enumDescriptions": [
            "Not specified.",
            "Certificates can be issued from this CA. CRLs will be generated for this CA.",
            "Certificates cannot be issued from this CA. CRLs will still be generated.",
            "Certificates cannot be issued from this CA. CRLs will not be generated.",
            "Certificates cannot be issued from this CA. CRLs will not be generated."
          ],
          "readOnly": true,
          "type": "string"
        },
        "subordinateConfig": {
          "description": "Optional. If this is a subordinate CertificateAuthority, this field will be set with the subordinate configuration, which describes its issuers. This may be updated, but this CertificateAuthority must continue to validate.",
          "$ref": "SubordinateConfig"
        },
        "type": {
          "description": "Required. Immutable. The Type of this CertificateAuthority.",
          "type": "string",
          "enum": [
            "TYPE_UNSPECIFIED",
            "SELF_SIGNED",
            "SUBORDINATE"
          ],
          "enumDescriptions": [
            "Not specified.",
            "Self-signed CA.",
            "Subordinate CA. Could be issued by a Private CA CertificateAuthority or an unmanaged CA."
          ]
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Labels with user-defined metadata."
        },
        "issuingOptions": {
          "description": "Optional. The IssuingOptions to follow when issuing Certificates from this CertificateAuthority.",
          "$ref": "IssuingOptions"
        },
        "config": {
          "description": "Required. Immutable. The config used to create a self-signed X.509 certificate or CSR.",
          "$ref": "CertificateConfig"
        },
        "gcsBucket": {
          "type": "string",
          "description": "Immutable. The name of a Cloud Storage bucket where this CertificateAuthority will publish content, such as the CA certificate and CRLs. This must be a bucket name, without any prefixes (such as `gs://`) or suffixes (such as `.googleapis.com`). For example, to use a bucket named `my-bucket`, you would simply specify `my-bucket`. If not specified, a managed bucket will be created."
        },
        "caCertificateDescriptions": {
          "items": {
            "$ref": "CertificateDescription"
          },
          "readOnly": true,
          "description": "Output only. A structured description of this CertificateAuthority's CA certificate and its issuers. Ordered as self-to-root.",
          "type": "array"
        },
        "deleteTime": {
          "description": "Output only. The time at which this CertificateAuthority will be deleted, if scheduled for deletion.",
          "readOnly": true,
          "type": "string",
          "format": "google-datetime"
        },
        "lifetime": {
          "format": "google-duration",
          "description": "Required. The desired lifetime of the CA certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate.",
          "type": "string"
        },
        "keySpec": {
          "$ref": "KeyVersionSpec",
          "description": "Required. Immutable. Used when issuing certificates for this CertificateAuthority. If this CertificateAuthority is a self-signed CertificateAuthority, this key is also used to sign the self-signed CA certificate. Otherwise, it is used to sign a CSR."
        },
        "tier": {
          "enum": [
            "TIER_UNSPECIFIED",
            "ENTERPRISE",
            "DEVOPS"
          ],
          "description": "Required. Immutable. The Tier of this CertificateAuthority.",
          "enumDescriptions": [
            "Not specified.",
            "Enterprise tier.",
            "DevOps tier."
          ],
          "type": "string"
        },
        "name": {
          "description": "Output only. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
          "readOnly": true,
          "type": "string"
        }
      },
      "type": "object",
      "description": "A CertificateAuthority represents an individual Certificate Authority. A CertificateAuthority can be used to create Certificates.",
      "id": "CertificateAuthority"
    },
    "SetIamPolicyRequest": {
      "properties": {
        "policy": {
          "$ref": "Policy",
          "description": "REQUIRED: The complete policy to be applied to the `resource`. The size of the policy is limited to a few 10s of KB. An empty policy is a valid policy but certain Cloud Platform services (such as Projects) might reject them."
        },
        "updateMask": {
          "type": "string",
          "description": "OPTIONAL: A FieldMask specifying which fields of the policy to modify. Only the fields in the mask will be modified. If no mask is provided, the following default mask is used: `paths: \"bindings, etag\"`",
          "format": "google-fieldmask"
        }
      },
      "id": "SetIamPolicyRequest",
      "type": "object",
      "description": "Request message for `SetIamPolicy` method."
    },
    "KeyUsageOptions": {
      "properties": {
        "contentCommitment": {
          "description": "The key may be used for cryptographic commitments. Note that this may also be referred to as \"non-repudiation\".",
          "type": "boolean"
        },
        "dataEncipherment": {
          "description": "The key may be used to encipher data.",
          "type": "boolean"
        },
        "digitalSignature": {
          "description": "The key may be used for digital signatures.",
          "type": "boolean"
        },
        "keyEncipherment": {
          "type": "boolean",
          "description": "The key may be used to encipher other keys."
        },
        "decipherOnly": {
          "type": "boolean",
          "description": "The key may be used to decipher only."
        },
        "keyAgreement": {
          "description": "The key may be used in a key agreement protocol.",
          "type": "boolean"
        },
        "encipherOnly": {
          "type": "boolean",
          "description": "The key may be used to encipher only."
        },
        "certSign": {
          "type": "boolean",
          "description": "The key may be used to sign certificates."
        },
        "crlSign": {
          "description": "The key may be used sign certificate revocation lists.",
          "type": "boolean"
        }
      },
      "type": "object",
      "description": "KeyUsage.KeyUsageOptions corresponds to the key usage values described in https://tools.ietf.org/html/rfc5280#section-4.2.1.3.",
      "id": "KeyUsageOptions"
    },
    "GoogleApiServicecontrolV1LinearBuckets": {
      "type": "object",
      "id": "GoogleApiServicecontrolV1LinearBuckets",
      "description": "Describing buckets with constant width.",
      "properties": {
        "width": {
          "description": "The i'th linear bucket covers the interval [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive. Must be strictly positive.",
          "type": "number",
          "format": "double"
        },
        "offset": {
          "format": "double",
          "description": "The i'th linear bucket covers the interval [offset + (i-1) * width, offset + i * width) where i ranges from 1 to num_finite_buckets, inclusive.",
          "type": "number"
        },
        "numFiniteBuckets": {
          "type": "integer",
          "format": "int32",
          "description": "The number of finite buckets. With the underflow and overflow buckets, the total number of buckets is `num_finite_buckets` + 2. See comments on `bucket_options` for details."
        }
      }
    },
    "GoogleApiServicecontrolV1QuotaProperties": {
      "id": "GoogleApiServicecontrolV1QuotaProperties",
      "type": "object",
      "properties": {
        "quotaMode": {
          "description": "Quota mode for this operation.",
          "enumDescriptions": [
            "Decreases available quota by the cost specified for the operation. If cost is higher than available quota, operation fails and returns error.",
            "Decreases available quota by the cost specified for the operation. If cost is higher than available quota, operation does not fail and available quota goes down to zero but it returns error.",
            "Does not change any available quota. Only checks if there is enough quota. No lock is placed on the checked tokens neither.",
            "Increases available quota by the operation cost specified for the operation."
          ],
          "enum": [
            "ACQUIRE",
            "ACQUIRE_BEST_EFFORT",
            "CHECK",
            "RELEASE"
          ],
          "type": "string"
        }
      },
      "description": "Represents the properties needed for quota operations."
    },
    "CaOptions": {
      "id": "CaOptions",
      "type": "object",
      "properties": {
        "maxIssuerPathLength": {
          "format": "int32",
          "description": "Optional. Refers to the path length restriction X.509 extension. For a CA certificate, this value describes the depth of subordinate CA certificates that are allowed. If this value is less than 0, the request will fail. If this value is missing, the max path length will be omitted from the CA certificate.",
          "type": "integer"
        },
        "isCa": {
          "type": "boolean",
          "description": "Optional. Refers to the \"CA\" X.509 extension, which is a boolean value. When this value is missing, the extension will be omitted from the CA certificate."
        }
      },
      "description": "Describes values that are relevant in a CA certificate."
    },
    "RevocationDetails": {
      "type": "object",
      "id": "RevocationDetails",
      "description": "Describes fields that are relavent to the revocation of a Certificate.",
      "properties": {
        "revocationState": {
          "enumDescriptions": [
            "Default unspecified value. This value does indicate that a Certificate has been revoked, but that a reason has not been recorded.",
            "Key material for this Certificate may have leaked.",
            "The key material for a certificate authority in the issuing path may have leaked.",
            "The subject or other attributes in this Certificate have changed.",
            "This Certificate has been superseded.",
            "This Certificate or entities in the issuing path have ceased to operate.",
            "This Certificate should not be considered valid, it is expected that it may become valid in the future.",
            "This Certificate no longer has permission to assert the listed attributes.",
            "The authority which determines appropriate attributes for a Certificate may have been compromised."
          ],
          "description": "Indicates why a Certificate was revoked.",
          "type": "string",
          "enum": [
            "REVOCATION_REASON_UNSPECIFIED",
            "KEY_COMPROMISE",
            "CERTIFICATE_AUTHORITY_COMPROMISE",
            "AFFILIATION_CHANGED",
            "SUPERSEDED",
            "CESSATION_OF_OPERATION",
            "CERTIFICATE_HOLD",
            "PRIVILEGE_WITHDRAWN",
            "ATTRIBUTE_AUTHORITY_COMPROMISE"
          ]
        },
        "revocationTime": {
          "type": "string",
          "description": "The time at which this Certificate was revoked.",
          "format": "google-datetime"
        }
      }
    },
    "SubjectAltNames": {
      "type": "object",
      "properties": {
        "dnsNames": {
          "items": {
            "type": "string"
          },
          "description": "Contains only valid, fully-qualified host names.",
          "type": "array"
        },
        "customSans": {
          "items": {
            "$ref": "X509Extension"
          },
          "description": "Contains additional subject alternative name values.",
          "type": "array"
        },
        "ipAddresses": {
          "description": "Contains only valid 32-bit IPv4 addresses or RFC 4291 IPv6 addresses.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "emailAddresses": {
          "items": {
            "type": "string"
          },
          "description": "Contains only valid RFC 2822 E-mail addresses.",
          "type": "array"
        },
        "uris": {
          "description": "Contains only valid RFC 3986 URIs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "id": "SubjectAltNames",
      "description": "SubjectAltNames corresponds to a more modern way of listing what the asserted identity is in a certificate (i.e., compared to the \"common name\" in the distinguished name)."
    },
    "RestoreCertificateAuthorityRequest": {
      "type": "object",
      "properties": {
        "requestId": {
          "type": "string",
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
        }
      },
      "id": "RestoreCertificateAuthorityRequest",
      "description": "Request message for CertificateAuthorityService.RestoreCertificateAuthority."
    },
    "IssuingOptions": {
      "id": "IssuingOptions",
      "description": "Options that affect all certificates issued by a CertificateAuthority.",
      "type": "object",
      "properties": {
        "includeCrlAccessUrl": {
          "description": "Required. When true, includes a URL to the CRL corresponding to certificates issued from a CertificateAuthority. CRLs will expire 7 days from their creation. However, we will rebuild daily. CRLs are also rebuilt shortly after a certificate is revoked.",
          "type": "boolean"
        },
        "includeCaCertUrl": {
          "description": "Required. When true, includes a URL to the issuing CA certificate in the \"authority information access\" X.509 extension.",
          "type": "boolean"
        }
      }
    },
    "ListCertificateRevocationListsResponse": {
      "type": "object",
      "properties": {
        "nextPageToken": {
          "description": "A token to retrieve next page of results. Pass this value in ListCertificateRevocationListsRequest.next_page_token to retrieve the next page of results.",
          "type": "string"
        },
        "unreachable": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "description": "A list of locations (e.g. \"us-west1\") that could not be reached."
        },
        "certificateRevocationLists": {
          "type": "array",
          "items": {
            "$ref": "CertificateRevocationList"
          },
          "description": "The list of CertificateRevocationLists."
        }
      },
      "id": "ListCertificateRevocationListsResponse",
      "description": "Response message for CertificateAuthorityService.ListCertificateRevocationLists."
    },
    "GoogleApiServicecontrolV1ExponentialBuckets": {
      "type": "object",
      "description": "Describing buckets with exponentially growing width.",
      "properties": {
        "numFiniteBuckets": {
          "format": "int32",
          "description": "The number of finite buckets. With the underflow and overflow buckets, the total number of buckets is `num_finite_buckets` + 2. See comments on `bucket_options` for details.",
          "type": "integer"
        },
        "scale": {
          "format": "double",
          "description": "The i'th exponential bucket covers the interval [scale * growth_factor^(i-1), scale * growth_factor^i) where i ranges from 1 to num_finite_buckets inclusive. Must be \u003e 0.",
          "type": "number"
        },
        "growthFactor": {
          "description": "The i'th exponential bucket covers the interval [scale * growth_factor^(i-1), scale * growth_factor^i) where i ranges from 1 to num_finite_buckets inclusive. Must be larger than 1.0.",
          "type": "number",
          "format": "double"
        }
      },
      "id": "GoogleApiServicecontrolV1ExponentialBuckets"
    },
    "KeyUsage": {
      "properties": {
        "unknownExtendedKeyUsages": {
          "items": {
            "$ref": "ObjectId"
          },
          "type": "array",
          "description": "Used to describe extended key usages that are not listed in the KeyUsage.ExtendedKeyUsageOptions message."
        },
        "baseKeyUsage": {
          "$ref": "KeyUsageOptions",
          "description": "Describes high-level ways in which a key may be used."
        },
        "extendedKeyUsage": {
          "$ref": "ExtendedKeyUsageOptions",
          "description": "Detailed scenarios in which a key may be used."
        }
      },
      "description": "A KeyUsage describes key usage values that may appear in an X.509 certificate.",
      "type": "object",
      "id": "KeyUsage"
    },
    "SubjectDescription": {
      "id": "SubjectDescription",
      "properties": {
        "notBeforeTime": {
          "description": "The time at which the certificate becomes valid.",
          "format": "google-datetime",
          "type": "string"
        },
        "subject": {
          "$ref": "Subject",
          "description": "Contains distinguished name fields such as the location and organization."
        },
        "commonName": {
          "description": "The \"common name\" of the distinguished name.",
          "type": "string"
        },
        "notAfterTime": {
          "description": "The time at which the certificate expires.",
          "format": "google-datetime",
          "type": "string"
        },
        "hexSerialNumber": {
          "type": "string",
          "description": "The serial number encoded in lowercase hexadecimal."
        },
        "subjectAltName": {
          "description": "The subject alternative name fields.",
          "$ref": "SubjectAltNames"
        },
        "lifetime": {
          "type": "string",
          "format": "google-duration",
          "description": "For convenience, the actual lifetime of an issued certificate. Corresponds to 'not_after_time' - 'not_before_time'."
        }
      },
      "description": "These values describe fields in an issued X.509 certificate such as the distinguished name, subject alternative names, serial number, and lifetime.",
      "type": "object"
    },
    "KeyId": {
      "description": "A KeyId identifies a specific public key, usually by hashing the public key.",
      "type": "object",
      "id": "KeyId",
      "properties": {
        "keyId": {
          "description": "Optional. The value of this KeyId encoded in lowercase hexadecimal. This is most likely the 160 bit SHA-1 hash of the public key.",
          "type": "string"
        }
      }
    },
    "CertificateDescription": {
      "id": "CertificateDescription",
      "properties": {
        "aiaIssuingCertificateUrls": {
          "type": "array",
          "description": "Describes lists of issuer CA certificate URLs that appear in the \"Authority Information Access\" extension in the certificate.",
          "items": {
            "type": "string"
          }
        },
        "certFingerprint": {
          "$ref": "CertificateFingerprint",
          "description": "The hash of the x.509 certificate."
        },
        "crlDistributionPoints": {
          "items": {
            "type": "string"
          },
          "description": "Describes a list of locations to obtain CRL information, i.e. the DistributionPoint.fullName described by https://tools.ietf.org/html/rfc5280#section-4.2.1.13",
          "type": "array"
        },
        "subjectDescription": {
          "description": "Describes some of the values in a certificate that are related to the subject and lifetime.",
          "$ref": "SubjectDescription"
        },
        "publicKey": {
          "description": "The public key that corresponds to an issued certificate.",
          "$ref": "PublicKey"
        },
        "authorityKeyId": {
          "description": "Identifies the subject_key_id of the parent certificate, per https://tools.ietf.org/html/rfc5280#section-4.2.1.1",
          "$ref": "KeyId"
        },
        "subjectKeyId": {
          "$ref": "KeyId",
          "description": "Provides a means of identifiying certificates that contain a particular public key, per https://tools.ietf.org/html/rfc5280#section-4.2.1.2."
        },
        "configValues": {
          "$ref": "ReusableConfigValues",
          "description": "Describes some of the technical fields in a certificate."
        }
      },
      "type": "object",
      "description": "A CertificateDescription describes an X.509 certificate or CSR that has been issued, as an alternative to using ASN.1 / X.509."
    },
    "BillingView": {
      "id": "BillingView",
      "properties": {
        "reportRequests": {
          "description": "Billing requests to be reported for cloud.eventstream.v2.ResourceEvent Each request contains billing operations to be reported under a service name. See go/billing-view-construction for documentation on constructing billing view report requests.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1ReportRequest"
          }
        }
      },
      "description": "Message for reporting billing requests through Eventstream.",
      "type": "object"
    },
    "Money": {
      "properties": {
        "currencyCode": {
          "description": "The three-letter currency code defined in ISO 4217.",
          "type": "string"
        },
        "nanos": {
          "description": "Number of nano (10^-9) units of the amount. The value must be between -999,999,999 and +999,999,999 inclusive. If `units` is positive, `nanos` must be positive or zero. If `units` is zero, `nanos` can be positive, zero, or negative. If `units` is negative, `nanos` must be negative or zero. For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.",
          "format": "int32",
          "type": "integer"
        },
        "units": {
          "description": "The whole units of the amount. For example if `currencyCode` is `\"USD\"`, then 1 unit is one US dollar.",
          "type": "string",
          "format": "int64"
        }
      },
      "type": "object",
      "description": "Represents an amount of money with its currency type.",
      "id": "Money"
    },
    "SubjectConfig": {
      "id": "SubjectConfig",
      "properties": {
        "subjectAltName": {
          "description": "Optional. The subject alternative name fields.",
          "$ref": "SubjectAltNames"
        },
        "commonName": {
          "description": "Optional. The \"common name\" of the distinguished name.",
          "type": "string"
        },
        "subject": {
          "$ref": "Subject",
          "description": "Required. Contains distinguished name fields such as the location and organization."
        }
      },
      "type": "object",
      "description": "These values are used to create the distinguished name and subject alternative name fields in an X.509 certificate."
    },
    "ListCertificatesResponse": {
      "description": "Response message for CertificateAuthorityService.ListCertificates.",
      "id": "ListCertificatesResponse",
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "A token to retrieve next page of results. Pass this value in ListCertificatesRequest.next_page_token to retrieve the next page of results."
        },
        "certificates": {
          "description": "The list of Certificates.",
          "type": "array",
          "items": {
            "$ref": "Certificate"
          }
        },
        "unreachable": {
          "description": "A list of locations (e.g. \"us-west1\") that could not be reached.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "type": "object"
    },
    "SubordinateConfig": {
      "id": "SubordinateConfig",
      "properties": {
        "pemIssuerChain": {
          "$ref": "SubordinateConfigChain",
          "description": "Required. Contains the PEM certificate chain for the issuers of this CertificateAuthority, but not pem certificate for this CA itself."
        },
        "certificateAuthority": {
          "type": "string",
          "description": "Required. This can refer to a CertificateAuthority in the same project that was used to create a subordinate CertificateAuthority. This field is used for information and usability purposes only. The resource name is in the format `projects/*/locations/*/certificateAuthorities/*`."
        }
      },
      "description": "Describes a subordinate CA's issuers. This is either a resource path to a known issuing CertificateAuthority, or a PEM issuer certificate chain.",
      "type": "object"
    },
    "GoogleApiServicecontrolV1Operation": {
      "description": "Represents information regarding an operation.",
      "properties": {
        "traceSpans": {
          "description": "Unimplemented. A list of Cloud Trace spans. The span names shall contain the id of the destination project which can be either the produce or the consumer project.",
          "items": {
            "$ref": "GoogleApiServicecontrolV1TraceSpan"
          },
          "type": "array"
        },
        "endTime": {
          "description": "End time of the operation. Required when the operation is used in ServiceController.Report, but optional when the operation is used in ServiceController.Check.",
          "format": "google-datetime",
          "type": "string"
        },
        "userLabels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "User defined labels for the resource that this operation is associated with. Only a combination of 1000 user labels per consumer project are allowed."
        },
        "metricValueSets": {
          "description": "Represents information about this operation. Each MetricValueSet corresponds to a metric defined in the service configuration. The data type used in the MetricValueSet must agree with the data type specified in the metric definition. Within a single operation, it is not allowed to have more than one MetricValue instances that have the same metric names and identical label value combinations. If a request has such duplicated MetricValue instances, the entire request is rejected with an invalid argument error.",
          "items": {
            "$ref": "GoogleApiServicecontrolV1MetricValueSet"
          },
          "type": "array"
        },
        "startTime": {
          "description": "Required. Start time of the operation.",
          "type": "string",
          "format": "google-datetime"
        },
        "consumerId": {
          "type": "string",
          "description": "Identity of the consumer who is using the service. This field should be filled in for the operations initiated by a consumer, but not for service-initiated operations that are not related to a specific consumer. - This can be in one of the following formats: - project:PROJECT_ID, - project`_`number:PROJECT_NUMBER, - projects/PROJECT_ID or PROJECT_NUMBER, - folders/FOLDER_NUMBER, - organizations/ORGANIZATION_NUMBER, - api`_`key:API_KEY."
        },
        "resources": {
          "items": {
            "$ref": "GoogleApiServicecontrolV1ResourceInfo"
          },
          "type": "array",
          "description": "The resources that are involved in the operation. The maximum supported number of entries in this field is 100."
        },
        "operationId": {
          "description": "Identity of the operation. This must be unique within the scope of the service that generated the operation. If the service calls Check() and Report() on the same operation, the two calls should carry the same id. UUID version 4 is recommended, though not required. In scenarios where an operation is computed from existing information and an idempotent id is desirable for deduplication purpose, UUID version 5 is recommended. See RFC 4122 for details.",
          "type": "string"
        },
        "operationName": {
          "description": "Fully qualified name of the operation. Reserved for future use.",
          "type": "string"
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "Labels describing the operation. Only the following labels are allowed: - Labels describing monitored resources as defined in the service configuration. - Default labels of metric values. When specified, labels defined in the metric value override these default. - The following labels defined by Google Cloud Platform: - `cloud.googleapis.com/location` describing the location where the operation happened, - `servicecontrol.googleapis.com/user_agent` describing the user agent of the API request, - `servicecontrol.googleapis.com/service_agent` describing the service used to handle the API request (e.g. ESP), - `servicecontrol.googleapis.com/platform` describing the platform where the API is served, such as App Engine, Compute Engine, or Kubernetes Engine."
        },
        "quotaProperties": {
          "$ref": "GoogleApiServicecontrolV1QuotaProperties",
          "description": "Represents the properties needed for quota check. Applicable only if this operation is for a quota check request. If this is not specified, no quota check will be performed."
        },
        "extensions": {
          "items": {
            "additionalProperties": {
              "type": "any",
              "description": "Properties of the object. Contains field @type with type URL."
            },
            "type": "object"
          },
          "type": "array",
          "description": "Unimplemented."
        },
        "logEntries": {
          "description": "Represents information to be logged.",
          "type": "array",
          "items": {
            "$ref": "GoogleApiServicecontrolV1LogEntry"
          }
        },
        "importance": {
          "enum": [
            "LOW",
            "HIGH",
            "DEBUG"
          ],
          "type": "string",
          "description": "DO NOT USE. This is an experimental field.",
          "enumDescriptions": [
            "Allows data caching, batching, and aggregation. It provides higher performance with higher data loss risk.",
            "Disables data aggregation to minimize data loss. It is for operations that contains significant monetary value or audit trail. This feature only applies to the client libraries.",
            "Deprecated. Do not use. Disables data aggregation and enables additional validation logic. It should only be used during the onboarding process. It is only available to Google internal services, and the service must be approved by chemist-dev@google.com in order to use this level."
          ]
        }
      },
      "id": "GoogleApiServicecontrolV1Operation",
      "type": "object"
    },
    "GoogleApiServicecontrolV1TruncatableString": {
      "id": "GoogleApiServicecontrolV1TruncatableString",
      "properties": {
        "truncatedByteCount": {
          "format": "int32",
          "type": "integer",
          "description": "The number of bytes removed from the original string. If this value is 0, then the string was not shortened."
        },
        "value": {
          "type": "string",
          "description": "The shortened string. For example, if the original string is 500 bytes long and the limit of the string is 128 bytes, then `value` contains the first 128 bytes of the 500-byte string. Truncation always happens on a UTF8 character boundary. If there are multi-byte characters in the string, then the length of the shortened string might be less than the size limit."
        }
      },
      "type": "object",
      "description": "Represents a string that might be shortened to a specified length."
    },
    "PublicKey": {
      "type": "object",
      "id": "PublicKey",
      "properties": {
        "key": {
          "format": "byte",
          "type": "string",
          "description": "Required. A public key. When this is specified in a request, the padding and encoding can be any of the options described by the respective 'KeyType' value. When this is generated by the service, it will always be an RFC 5280 [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1) structure containing an algorithm identifier and a key."
        },
        "type": {
          "enum": [
            "KEY_TYPE_UNSPECIFIED",
            "PEM_RSA_KEY",
            "PEM_EC_KEY"
          ],
          "type": "string",
          "enumDescriptions": [
            "Default unspecified value.",
            "A PEM-encoded PKCS#1/RFC 3447 RSAPublicKey structure, or an RFC 5280 [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1) structure containing the former.",
            "An RFC 5280 [SubjectPublicKeyInfo](https://tools.ietf.org/html/rfc5280#section-4.1) structure containing a PEM-encoded compressed NIST P-256/secp256r1/prime256v1 or P-384 key."
          ],
          "description": "Optional. The type of public key. If specified, it must match the public key used for the`key` field."
        }
      },
      "description": "A PublicKey describes a public key."
    },
    "CertificateFingerprint": {
      "type": "object",
      "description": "A group of fingerprints for the x509 certificate.",
      "id": "CertificateFingerprint",
      "properties": {
        "sha256Hash": {
          "type": "string",
          "description": "The SHA 256 hash, encoded in hexadecimal, of the DER x509 certificate."
        }
      }
    },
    "GoogleApiServicecontrolV1LogEntryOperation": {
      "description": "Additional information about a potentially long-running operation with which a log entry is associated.",
      "id": "GoogleApiServicecontrolV1LogEntryOperation",
      "type": "object",
      "properties": {
        "last": {
          "description": "Optional. Set this to True if this is the last log entry in the operation.",
          "type": "boolean"
        },
        "id": {
          "type": "string",
          "description": "Optional. An arbitrary operation identifier. Log entries with the same identifier are assumed to be part of the same operation."
        },
        "producer": {
          "description": "Optional. An arbitrary producer identifier. The combination of `id` and `producer` must be globally unique. Examples for `producer`: `\"MyDivision.MyBigCompany.com\"`, `\"github.com/MyProject/MyApplication\"`.",
          "type": "string"
        },
        "first": {
          "type": "boolean",
          "description": "Optional. Set this to True if this is the first log entry in the operation."
        }
      }
    },
    "Certificate": {
      "type": "object",
      "properties": {
        "pemCertificateChain": {
          "items": {
            "type": "string"
          },
          "readOnly": true,
          "description": "Output only. The chain that may be used to verify the X.509 certificate. Expected to be in issuer-to-root order according to RFC 5246.",
          "type": "array"
        },
        "lifetime": {
          "format": "google-duration",
          "description": "Required. Immutable. The desired lifetime of a certificate. Used to create the \"not_before_time\" and \"not_after_time\" fields inside an X.509 certificate. Note that the lifetime may be truncated if it would extend past the life of any certificate authority in the issuing chain.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The resource path for this Certificate in the format `projects/*/locations/*/certificateAuthorities/*/certificates/*`."
        },
        "pemCsr": {
          "type": "string",
          "description": "Immutable. A pem-encoded X.509 certificate signing request (CSR)."
        },
        "revocationDetails": {
          "$ref": "RevocationDetails",
          "description": "Output only. Details regarding the revocation of this Certificate. This Certificate is considered revoked if and only if this field is present.",
          "readOnly": true
        },
        "config": {
          "$ref": "CertificateConfig",
          "description": "Immutable. A description of the certificate and key that does not require X.509 or ASN.1."
        },
        "pemCertificate": {
          "description": "Output only. The pem-encoded, signed X.509 certificate.",
          "type": "string",
          "readOnly": true
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The time at which this Certificate was updated.",
          "type": "string",
          "format": "google-datetime"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Optional. Labels with user-defined metadata.",
          "type": "object"
        },
        "certificateDescription": {
          "description": "Output only. A structured description of the issued X.509 certificate.",
          "$ref": "CertificateDescription",
          "readOnly": true
        },
        "createTime": {
          "description": "Output only. The time at which this Certificate was created.",
          "readOnly": true,
          "format": "google-datetime",
          "type": "string"
        }
      },
      "id": "Certificate",
      "description": "A Certificate corresponds to a signed X.509 certificate issued by a CertificateAuthority."
    },
    "GoogleApiServicecontrolV1LogEntry": {
      "type": "object",
      "description": "An individual log entry.",
      "properties": {
        "sourceLocation": {
          "$ref": "GoogleApiServicecontrolV1LogEntrySourceLocation",
          "description": "Optional. Source code location information associated with the log entry, if any."
        },
        "trace": {
          "description": "Optional. Resource name of the trace associated with the log entry, if any. If this field contains a relative resource name, you can assume the name is relative to `//tracing.googleapis.com`. Example: `projects/my-projectid/traces/06796866738c859f2f19b7cfb3214824`",
          "type": "string"
        },
        "textPayload": {
          "type": "string",
          "description": "The log entry payload, represented as a Unicode string (UTF-8)."
        },
        "timestamp": {
          "description": "The time the event described by the log entry occurred. If omitted, defaults to operation start time.",
          "type": "string",
          "format": "google-datetime"
        },
        "insertId": {
          "description": "A unique ID for the log entry used for deduplication. If omitted, the implementation will generate one based on operation_id.",
          "type": "string"
        },
        "httpRequest": {
          "description": "Optional. Information about the HTTP request associated with this log entry, if applicable.",
          "$ref": "GoogleApiServicecontrolV1HttpRequest"
        },
        "operation": {
          "$ref": "GoogleApiServicecontrolV1LogEntryOperation",
          "description": "Optional. Information about an operation associated with the log entry, if applicable."
        },
        "structPayload": {
          "description": "The log entry payload, represented as a structure that is expressed as a JSON object.",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object."
          },
          "type": "object"
        },
        "name": {
          "description": "Required. The log to which this log entry belongs. Examples: `\"syslog\"`, `\"book_log\"`.",
          "type": "string"
        },
        "protoPayload": {
          "description": "The log entry payload, represented as a protocol buffer that is expressed as a JSON object. The only accepted type currently is AuditLog.",
          "type": "object",
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          }
        },
        "severity": {
          "type": "string",
          "description": "The severity of the log entry. The default value is `LogSeverity.DEFAULT`.",
          "enumDescriptions": [
            "(0) The log entry has no assigned severity level.",
            "(100) Debug or trace information.",
            "(200) Routine information, such as ongoing status or performance.",
            "(300) Normal but significant events, such as start up, shut down, or a configuration change.",
            "(400) Warning events might cause problems.",
            "(500) Error events are likely to cause problems.",
            "(600) Critical events cause more severe problems or outages.",
            "(700) A person must take an action immediately.",
            "(800) One or more systems are unusable."
          ],
          "enum": [
            "DEFAULT",
            "DEBUG",
            "INFO",
            "NOTICE",
            "WARNING",
            "ERROR",
            "CRITICAL",
            "ALERT",
            "EMERGENCY"
          ]
        },
        "labels": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "description": "A set of user-defined (key, value) data that provides additional information about the log entry."
        }
      },
      "id": "GoogleApiServicecontrolV1LogEntry"
    },
    "GoogleApiServicecontrolV1ExplicitBuckets": {
      "type": "object",
      "id": "GoogleApiServicecontrolV1ExplicitBuckets",
      "properties": {
        "bounds": {
          "type": "array",
          "description": "'bound' is a list of strictly increasing boundaries between buckets. Note that a list of length N-1 defines N buckets because of fenceposting. See comments on `bucket_options` for details. The i'th finite bucket covers the interval [bound[i-1], bound[i]) where i ranges from 1 to bound_size() - 1. Note that there are no finite buckets at all if 'bound' only contains a single element; in that special case the single bound defines the boundary between the underflow and overflow buckets. bucket number lower bound upper bound i == 0 (underflow) -inf bound[i] 0 \u003c i \u003c bound_size() bound[i-1] bound[i] i == bound_size() (overflow) bound[i-1] +inf",
          "items": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "description": "Describing buckets with arbitrary user-provided width."
    },
    "DisableCertificateAuthorityRequest": {
      "id": "DisableCertificateAuthorityRequest",
      "properties": {
        "requestId": {
          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Request message for CertificateAuthorityService.DisableCertificateAuthority."
    },
    "CertificateAuthorityPolicy": {
      "properties": {
        "allowedIssuanceModes": {
          "description": "Optional. If specified, then only methods allowed in the IssuanceModes may be used to issue Certificates.",
          "$ref": "IssuanceModes"
        },
        "allowedLocationsAndOrganizations": {
          "items": {
            "$ref": "Subject"
          },
          "description": "Optional. If any Subject is specified here, then all Certificates issued by the CertificateAuthority must match at least one listed Subject. If a Subject has an empty field, any value will be allowed for that field.",
          "type": "array"
        },
        "allowedSans": {
          "description": "Optional. If a AllowedSubjectAltNames is specified here, then all Certificates issued by the CertificateAuthority must match AllowedSubjectAltNames. If no value or an empty value is specified, any value will be allowed for the SubjectAltNames field.",
          "$ref": "AllowedSubjectAltNames"
        },
        "allowedCommonNames": {
          "description": "Optional. If any value is specified here, then all Certificates issued by the CertificateAuthority must match at least one listed value. If no value is specified, all values will be allowed for this fied. Glob patterns are also supported.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "maximumLifetime": {
          "format": "google-duration",
          "description": "Optional. The maximum lifetime allowed by the CertificateAuthority. Note that if the any part if the issuing chain expires before a Certificate's requested maximum_lifetime, the effective lifetime will be explicitly truncated.",
          "type": "string"
        },
        "allowedConfigList": {
          "description": "Optional. All Certificates issued by the CertificateAuthority must match at least one listed ReusableConfigWrapper in the list.",
          "$ref": "AllowedConfigList"
        },
        "overwriteConfigValues": {
          "description": "Optional. All Certificates issued by the CertificateAuthority will use the provided configuration values, overwriting any requested configuration values.",
          "$ref": "ReusableConfigWrapper"
        }
      },
      "type": "object",
      "id": "CertificateAuthorityPolicy",
      "description": "The issuing policy for a CertificateAuthority. Certificates will not be successfully issued from this CertificateAuthority if they violate the policy."
    },
    "ObjectId": {
      "description": "An ObjectId specifies an object identifier (OID). These provide context and describe types in ASN.1 messages.",
      "id": "ObjectId",
      "properties": {
        "objectIdPath": {
          "description": "Required. The parts of an OID path. The most significant parts of the path come first.",
          "type": "array",
          "items": {
            "format": "int32",
            "type": "integer"
          }
        }
      },
      "type": "object"
    },
    "Policy": {
      "description": "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members` to a single `role`. Members can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time \u003c timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time \u003c timestamp('2020-10-01T00:00:00.000Z') - etag: BwWWja0YfJA= - version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
      "id": "Policy",
      "type": "object",
      "properties": {
        "auditConfigs": {
          "type": "array",
          "description": "Specifies cloud audit logging configuration for this policy.",
          "items": {
            "$ref": "AuditConfig"
          }
        },
        "bindings": {
          "description": "Associates a list of `members` to a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one member.",
          "items": {
            "$ref": "Binding"
          },
          "type": "array"
        },
        "etag": {
          "type": "string",
          "description": "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
          "format": "byte"
        },
        "version": {
          "description": "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "ListOperationsResponse": {
      "properties": {
        "operations": {
          "items": {
            "$ref": "Operation"
          },
          "description": "A list of operations that matches the specified filter in the request.",
          "type": "array"
        },
        "nextPageToken": {
          "description": "The standard List next-page token.",
          "type": "string"
        }
      },
      "description": "The response message for Operations.ListOperations.",
      "id": "ListOperationsResponse",
      "type": "object"
    },
    "ExtendedKeyUsageOptions": {
      "id": "ExtendedKeyUsageOptions",
      "description": "KeyUsage.ExtendedKeyUsageOptions has fields that correspond to certain common OIDs that could be specified as an extended key usage value.",
      "type": "object",
      "properties": {
        "timeStamping": {
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.8. Officially described as \"Binding the hash of an object to a time\".",
          "type": "boolean"
        },
        "emailProtection": {
          "type": "boolean",
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.4. Officially described as \"Email protection\"."
        },
        "clientAuth": {
          "type": "boolean",
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.2. Officially described as \"TLS WWW client authentication\", though regularly used for non-WWW TLS."
        },
        "ocspSigning": {
          "type": "boolean",
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.9. Officially described as \"Signing OCSP responses\"."
        },
        "codeSigning": {
          "type": "boolean",
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.3. Officially described as \"Signing of downloadable executable code client authentication\"."
        },
        "serverAuth": {
          "type": "boolean",
          "description": "Corresponds to OID 1.3.6.1.5.5.7.3.1. Officially described as \"TLS WWW server authentication\", though regularly used for non-WWW TLS."
        }
      }
    },
    "CertificateRevocationList": {
      "type": "object",
      "id": "CertificateRevocationList",
      "properties": {
        "name": {
          "description": "Output only. The resource path for this CertificateRevocationList in the format `projects/*/locations/*/certificateAuthorities/*/ certificateRevocationLists/*`.",
          "readOnly": true,
          "type": "string"
        },
        "revokedCertificates": {
          "items": {
            "$ref": "RevokedCertificate"
          },
          "readOnly": true,
          "type": "array",
          "description": "Output only. The revoked serial numbers that appear in pem_crl."
        },
        "state": {
          "readOnly": true,
          "enumDescriptions": [
            "Not specified.",
            "The CertificateRevocationList is up to date.",
            "The CertificateRevocationList is no longer current."
          ],
          "description": "Output only. The State for this CertificateRevocationList.",
          "type": "string",
          "enum": [
            "STATE_UNSPECIFIED",
            "ACTIVE",
            "SUPERSEDED"
          ]
        },
        "accessUrl": {
          "readOnly": true,
          "description": "Output only. The location where 'pem_crl' can be accessed.",
          "type": "string"
        },
        "pemCrl": {
          "description": "Output only. The PEM-encoded X.509 CRL.",
          "type": "string",
          "readOnly": true
        },
        "createTime": {
          "type": "string",
          "readOnly": true,
          "description": "Output only. The time at which this CertificateRevocationList was created.",
          "format": "google-datetime"
        },
        "updateTime": {
          "readOnly": true,
          "description": "Output only. The time at which this CertificateRevocationList was updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "sequenceNumber": {
          "readOnly": true,
          "format": "int64",
          "description": "Output only. The CRL sequence number that appears in pem_crl.",
          "type": "string"
        },
        "labels": {
          "additionalProperties": {
            "type": "string"
          },
          "type": "object",
          "description": "Optional. Labels with user-defined metadata."
        }
      },
      "description": "A CertificateRevocationList corresponds to a signed X.509 certificate Revocation List (CRL). A CRL contains the serial numbers of certificates that should no longer be trusted."
    },
    "X509Extension": {
      "properties": {
        "value": {
          "format": "byte",
          "type": "string",
          "description": "Required. The value of this X.509 extension."
        },
        "objectId": {
          "$ref": "ObjectId",
          "description": "Required. The OID for this X.509 extension."
        },
        "critical": {
          "type": "boolean",
          "description": "Required. Indicates whether or not this extension is critical (i.e., if the client does not know how to handle this extension, the client should consider this to be an error)."
        }
      },
      "type": "object",
      "id": "X509Extension",
      "description": "An X509Extension specifies an X.509 extension, which may be used in different parts of X.509 objects like certificates, CSRs, and CRLs."
    },
    "IssuanceModes": {
      "type": "object",
      "id": "IssuanceModes",
      "properties": {
        "allowConfigBasedIssuance": {
          "description": "Required. When true, allows callers to create Certificates by specifying a CertificateConfig.",
          "type": "boolean"
        },
        "allowCsrBasedIssuance": {
          "description": "Required. When true, allows callers to create Certificates by specifying a CSR.",
          "type": "boolean"
        }
      },
      "description": "IssuanceModes specifies the allowed ways in which Certificates may be requested from this CertificateAuthority."
    },
    "Exemplar": {
      "properties": {
        "attachments": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "Contextual information about the example value. Examples are: Trace: type.googleapis.com/google.monitoring.v3.SpanContext Literal string: type.googleapis.com/google.protobuf.StringValue Labels dropped during aggregation: type.googleapis.com/google.monitoring.v3.DroppedLabels There may be only a single attachment of any given message type in a single exemplar, and this is enforced by the system.",
          "type": "array"
        },
        "timestamp": {
          "type": "string",
          "description": "The observation (sampling) time of the above value.",
          "format": "google-datetime"
        },
        "value": {
          "type": "number",
          "description": "Value of the exemplar point. This value determines to which bucket the exemplar belongs.",
          "format": "double"
        }
      },
      "type": "object",
      "id": "Exemplar",
      "description": "Exemplars are example points that may be used to annotate aggregated distribution values. They are metadata that gives information about a particular value added to a Distribution bucket, such as a trace ID that was active when a value was added. They may contain further information, such as a example values and timestamps, origin, etc."
    },
    "ReusableConfigWrapper": {
      "type": "object",
      "description": "A ReusableConfigWrapper describes values that may assist in creating an X.509 certificate, or a reference to a pre-defined set of values.",
      "properties": {
        "reusableConfigValues": {
          "$ref": "ReusableConfigValues",
          "description": "Required. A user-specified inline ReusableConfigValues."
        },
        "reusableConfig": {
          "description": "Required. A resource path to a ReusableConfig in the format `projects/*/locations/*/reusableConfigs/*`.",
          "type": "string"
        }
      },
      "id": "ReusableConfigWrapper"
    }
  },
  "title": "Certificate Authority API",
  "version": "v1beta1",
  "fullyEncodeReservedExpansion": true,
  "discoveryVersion": "v1",
  "ownerName": "Google",
  "kind": "discovery#restDescription",
  "parameters": {
    "access_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth access token."
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "oauth_token": {
      "description": "OAuth 2.0 token for the current user.",
      "location": "query",
      "type": "string"
    },
    "alt": {
      "description": "Data format for response.",
      "default": "json",
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "location": "query"
    },
    "uploadType": {
      "type": "string",
      "location": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\")."
    },
    "fields": {
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query",
      "type": "string"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "prettyPrint": {
      "default": "true",
      "description": "Returns response with indentations and line breaks.",
      "type": "boolean",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "location": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\")."
    },
    "$.xgafv": {
      "description": "V1 error format.",
      "enum": [
        "1",
        "2"
      ],
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "location": "query"
    },
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "location": "query",
      "type": "string"
    }
  },
  "documentationLink": "https://cloud.google.com/",
  "version_module": true,
  "rootUrl": "https://privateca.googleapis.com/",
  "servicePath": "",
  "resources": {
    "projects": {
      "resources": {
        "locations": {
          "methods": {
            "get": {
              "description": "Gets information about a location.",
              "parameterOrder": [
                "name"
              ],
              "id": "privateca.projects.locations.get",
              "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}",
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "path": "v1beta1/{+name}",
              "parameters": {
                "name": {
                  "description": "Resource name for the location.",
                  "required": true,
                  "type": "string",
                  "location": "path",
                  "pattern": "^projects/[^/]+/locations/[^/]+$"
                }
              },
              "httpMethod": "GET",
              "response": {
                "$ref": "Location"
              }
            },
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/cloud-platform"
              ],
              "response": {
                "$ref": "ListLocationsResponse"
              },
              "flatPath": "v1beta1/projects/{projectsId}/locations",
              "httpMethod": "GET",
              "path": "v1beta1/{+name}/locations",
              "parameterOrder": [
                "name"
              ],
              "description": "Lists information about the supported locations for this service.",
              "id": "privateca.projects.locations.list",
              "parameters": {
                "filter": {
                  "description": "The standard list filter.",
                  "location": "query",
                  "type": "string"
                },
                "name": {
                  "pattern": "^projects/[^/]+$",
                  "type": "string",
                  "required": true,
                  "location": "path",
                  "description": "The resource that owns the locations collection, if applicable."
                },
                "pageToken": {
                  "description": "The standard list page token.",
                  "location": "query",
                  "type": "string"
                },
                "pageSize": {
                  "type": "integer",
                  "format": "int32",
                  "description": "The standard list page size.",
                  "location": "query"
                }
              }
            }
          },
          "resources": {
            "reusableConfigs": {
              "methods": {
                "get": {
                  "id": "privateca.projects.locations.reusableConfigs.get",
                  "description": "Returns a ReusableConfig.",
                  "response": {
                    "$ref": "ReusableConfig"
                  },
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reusableConfigs/{reusableConfigsId}",
                  "parameters": {
                    "name": {
                      "pattern": "^projects/[^/]+/locations/[^/]+/reusableConfigs/[^/]+$",
                      "required": true,
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the ReusableConfigs to get."
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reusableConfigs/{reusableConfigsId}:testIamPermissions",
                  "httpMethod": "POST",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/reusableConfigs/[^/]+$",
                      "location": "path",
                      "required": true
                    }
                  },
                  "id": "privateca.projects.locations.reusableConfigs.testIamPermissions"
                },
                "list": {
                  "response": {
                    "$ref": "ListReusableConfigsResponse"
                  },
                  "parameters": {
                    "pageToken": {
                      "type": "string",
                      "description": "Optional. Pagination token, returned earlier via ListReusableConfigsResponse.next_page_token.",
                      "location": "query"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Specify how the results should be sorted."
                    },
                    "filter": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Only include resources that match the filter in the response."
                    },
                    "parent": {
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path",
                      "description": "Required. The resource name of the location associated with the ReusableConfigs, in the format `projects/*/locations/*`."
                    },
                    "pageSize": {
                      "location": "query",
                      "type": "integer",
                      "format": "int32",
                      "description": "Optional. Limit on the number of ReusableConfigs to include in the response. Further ReusableConfigs can subsequently be obtained by including the ListReusableConfigsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default."
                    }
                  },
                  "id": "privateca.projects.locations.reusableConfigs.list",
                  "path": "v1beta1/{+parent}/reusableConfigs",
                  "description": "Lists ReusableConfigs.",
                  "httpMethod": "GET",
                  "parameterOrder": [
                    "parent"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reusableConfigs",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "getIamPolicy": {
                  "id": "privateca.projects.locations.reusableConfigs.getIamPolicy",
                  "path": "v1beta1/{+resource}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "options.requestedPolicyVersion": {
                      "format": "int32",
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies)."
                    },
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/reusableConfigs/[^/]+$"
                    }
                  },
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reusableConfigs/{reusableConfigsId}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "Policy"
                  }
                },
                "setIamPolicy": {
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "parameterOrder": [
                    "resource"
                  ],
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/reusableConfigs/{reusableConfigsId}:setIamPolicy",
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Policy"
                  },
                  "httpMethod": "POST",
                  "id": "privateca.projects.locations.reusableConfigs.setIamPolicy",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/reusableConfigs/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field."
                    }
                  }
                }
              }
            },
            "operations": {
              "methods": {
                "cancel": {
                  "id": "privateca.projects.locations.operations.cancel",
                  "parameters": {
                    "name": {
                      "description": "The name of the operation resource to be cancelled.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "required": true
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "request": {
                    "$ref": "CancelOperationRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Starts asynchronous cancellation on a long-running operation. The server makes a best effort to cancel the operation, but success is not guaranteed. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`. Clients can use Operations.GetOperation or other methods to check whether the cancellation succeeded or whether the operation completed despite cancellation. On successful cancellation, the operation is not deleted; instead, it becomes an operation with an Operation.error value with a google.rpc.Status.code of 1, corresponding to `Code.CANCELLED`.",
                  "path": "v1beta1/{+name}:cancel",
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}:cancel"
                },
                "list": {
                  "parameters": {
                    "name": {
                      "required": true,
                      "type": "string",
                      "description": "The name of the operation's parent resource.",
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "location": "path"
                    },
                    "pageSize": {
                      "location": "query",
                      "format": "int32",
                      "type": "integer",
                      "description": "The standard list page size."
                    },
                    "pageToken": {
                      "description": "The standard list page token.",
                      "location": "query",
                      "type": "string"
                    },
                    "filter": {
                      "location": "query",
                      "type": "string",
                      "description": "The standard list filter."
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations",
                  "description": "Lists operations that match the specified filter in the request. If the server doesn't support this method, it returns `UNIMPLEMENTED`. NOTE: the `name` binding allows API services to override the binding to use different resource name schemes, such as `users/*/operations`. To override the binding, API services can add a binding such as `\"/v1/{name=users/*}/operations\"` to their service configuration. For backwards compatibility, the default name includes the operations collection id, however overriding users must ensure the name binding is the parent resource, without the operations collection id.",
                  "id": "privateca.projects.locations.operations.list",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "ListOperationsResponse"
                  },
                  "path": "v1beta1/{+name}/operations",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ]
                },
                "delete": {
                  "path": "v1beta1/{+name}",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "privateca.projects.locations.operations.delete",
                  "httpMethod": "DELETE",
                  "description": "Deletes a long-running operation. This method indicates that the client is no longer interested in the operation result. It does not cancel the operation. If the server doesn't support this method, it returns `google.rpc.Code.UNIMPLEMENTED`.",
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "The name of the operation resource to be deleted."
                    }
                  },
                  "response": {
                    "$ref": "Empty"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ]
                },
                "get": {
                  "httpMethod": "GET",
                  "path": "v1beta1/{+name}",
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "type": "string",
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/operations/[^/]+$",
                      "required": true,
                      "description": "The name of the operation resource."
                    }
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Gets the latest state of a long-running operation. Clients can use this method to poll the operation result at intervals as recommended by the API service.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/operations/{operationsId}",
                  "id": "privateca.projects.locations.operations.get"
                }
              }
            },
            "certificateAuthorities": {
              "methods": {
                "scheduleDelete": {
                  "parameters": {
                    "name": {
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "required": true,
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "location": "path"
                    }
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:scheduleDelete",
                  "request": {
                    "$ref": "ScheduleDeleteCertificateAuthorityRequest"
                  },
                  "httpMethod": "POST",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "path": "v1beta1/{+name}:scheduleDelete",
                  "id": "privateca.projects.locations.certificateAuthorities.scheduleDelete",
                  "description": "Schedule a CertificateAuthority for deletion.",
                  "parameterOrder": [
                    "name"
                  ]
                },
                "enable": {
                  "description": "Enable a CertificateAuthority.",
                  "parameters": {
                    "name": {
                      "location": "path",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "required": true,
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "type": "string"
                    }
                  },
                  "request": {
                    "$ref": "EnableCertificateAuthorityRequest"
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:enable",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.enable",
                  "httpMethod": "POST",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}:enable"
                },
                "setIamPolicy": {
                  "parameters": {
                    "resource": {
                      "location": "path",
                      "type": "string",
                      "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "required": true
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "privateca.projects.locations.certificateAuthorities.setIamPolicy",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:setIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                  "path": "v1beta1/{+resource}:setIamPolicy",
                  "request": {
                    "$ref": "SetIamPolicyRequest"
                  },
                  "httpMethod": "POST"
                },
                "create": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities",
                  "path": "v1beta1/{+parent}/certificateAuthorities",
                  "parameterOrder": [
                    "parent"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "certificateAuthorityId": {
                      "description": "Required. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`",
                      "location": "query",
                      "type": "string"
                    },
                    "parent": {
                      "type": "string",
                      "location": "path",
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "description": "Required. The resource name of the location associated with the CertificateAuthorities, in the format `projects/*/locations/*`."
                    },
                    "requestId": {
                      "type": "string",
                      "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                      "location": "query"
                    }
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.create",
                  "request": {
                    "$ref": "CertificateAuthority"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "description": "Create a new CertificateAuthority in a given Project and Location."
                },
                "disable": {
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:disable",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameterOrder": [
                    "name"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "location": "path"
                    }
                  },
                  "description": "Disable a CertificateAuthority.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.disable",
                  "path": "v1beta1/{+name}:disable",
                  "httpMethod": "POST",
                  "request": {
                    "$ref": "DisableCertificateAuthorityRequest"
                  }
                },
                "list": {
                  "id": "privateca.projects.locations.certificateAuthorities.list",
                  "parameterOrder": [
                    "parent"
                  ],
                  "response": {
                    "$ref": "ListCertificateAuthoritiesResponse"
                  },
                  "httpMethod": "GET",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "parent": {
                      "pattern": "^projects/[^/]+/locations/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "description": "Required. The resource name of the location associated with the CertificateAuthorities, in the format `projects/*/locations/*`.",
                      "required": true
                    },
                    "pageToken": {
                      "type": "string",
                      "location": "query",
                      "description": "Optional. Pagination token, returned earlier via ListCertificateAuthoritiesResponse.next_page_token."
                    },
                    "filter": {
                      "description": "Optional. Only include resources that match the filter in the response.",
                      "location": "query",
                      "type": "string"
                    },
                    "pageSize": {
                      "description": "Optional. Limit on the number of CertificateAuthorities to include in the response. Further CertificateAuthorities can subsequently be obtained by including the ListCertificateAuthoritiesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.",
                      "format": "int32",
                      "location": "query",
                      "type": "integer"
                    },
                    "orderBy": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. Specify how the results should be sorted."
                    }
                  },
                  "path": "v1beta1/{+parent}/certificateAuthorities",
                  "description": "Lists CertificateAuthorities.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities"
                },
                "getIamPolicy": {
                  "path": "v1beta1/{+resource}:getIamPolicy",
                  "parameterOrder": [
                    "resource"
                  ],
                  "id": "privateca.projects.locations.certificateAuthorities.getIamPolicy",
                  "response": {
                    "$ref": "Policy"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:getIamPolicy",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "GET",
                  "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                  "parameters": {
                    "resource": {
                      "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "type": "string",
                      "location": "path",
                      "required": true
                    },
                    "options.requestedPolicyVersion": {
                      "type": "integer",
                      "location": "query",
                      "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                      "format": "int32"
                    }
                  }
                },
                "testIamPermissions": {
                  "parameterOrder": [
                    "resource"
                  ],
                  "response": {
                    "$ref": "TestIamPermissionsResponse"
                  },
                  "path": "v1beta1/{+resource}:testIamPermissions",
                  "parameters": {
                    "resource": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "location": "path",
                      "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field.",
                      "required": true
                    }
                  },
                  "httpMethod": "POST",
                  "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:testIamPermissions",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "request": {
                    "$ref": "TestIamPermissionsRequest"
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.testIamPermissions"
                },
                "restore": {
                  "request": {
                    "$ref": "RestoreCertificateAuthorityRequest"
                  },
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "location": "path"
                    }
                  },
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Restore a CertificateAuthority that is scheduled for deletion.",
                  "response": {
                    "$ref": "Operation"
                  },
                  "httpMethod": "POST",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:restore",
                  "id": "privateca.projects.locations.certificateAuthorities.restore",
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}:restore"
                },
                "patch": {
                  "path": "v1beta1/{+name}",
                  "httpMethod": "PATCH",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "description": "Update a CertificateAuthority.",
                  "parameters": {
                    "updateMask": {
                      "type": "string",
                      "location": "query",
                      "description": "Required. A list of fields to be updated in this request.",
                      "format": "google-fieldmask"
                    },
                    "name": {
                      "description": "Output only. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "required": true,
                      "location": "path"
                    },
                    "requestId": {
                      "location": "query",
                      "type": "string",
                      "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000)."
                    }
                  },
                  "id": "privateca.projects.locations.certificateAuthorities.patch",
                  "parameterOrder": [
                    "name"
                  ],
                  "response": {
                    "$ref": "Operation"
                  },
                  "request": {
                    "$ref": "CertificateAuthority"
                  },
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}"
                },
                "fetch": {
                  "parameterOrder": [
                    "name"
                  ],
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:fetch",
                  "path": "v1beta1/{+name}:fetch",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "location": "path",
                      "required": true,
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`."
                    }
                  },
                  "description": "Fetch a certificate signing request (CSR) from a CertificateAuthority that is in state PENDING_ACTIVATION and is of type SUBORDINATE. The CSR must then be signed by the desired parent Certificate Authority, which could be another CertificateAuthority resource, or could be an on-prem certificate authority. See also ActivateCertificateAuthority.",
                  "response": {
                    "$ref": "FetchCertificateAuthorityCsrResponse"
                  },
                  "httpMethod": "GET",
                  "id": "privateca.projects.locations.certificateAuthorities.fetch"
                },
                "activate": {
                  "id": "privateca.projects.locations.certificateAuthorities.activate",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}:activate",
                  "request": {
                    "$ref": "ActivateCertificateAuthorityRequest"
                  },
                  "response": {
                    "$ref": "Operation"
                  },
                  "description": "Activate a CertificateAuthority that is in state PENDING_ACTIVATION and is of type SUBORDINATE. After the parent Certificate Authority signs a certificate signing request from FetchCertificateAuthorityCsr, this method can complete the activation process.",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "httpMethod": "POST",
                  "path": "v1beta1/{+name}:activate",
                  "parameters": {
                    "name": {
                      "type": "string",
                      "required": true,
                      "location": "path",
                      "description": "Required. The resource name for this CertificateAuthority in the format `projects/*/locations/*/certificateAuthorities/*`.",
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$"
                    }
                  },
                  "parameterOrder": [
                    "name"
                  ]
                },
                "get": {
                  "description": "Returns a CertificateAuthority.",
                  "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}",
                  "httpMethod": "GET",
                  "response": {
                    "$ref": "CertificateAuthority"
                  },
                  "parameterOrder": [
                    "name"
                  ],
                  "path": "v1beta1/{+name}",
                  "id": "privateca.projects.locations.certificateAuthorities.get",
                  "scopes": [
                    "https://www.googleapis.com/auth/cloud-platform"
                  ],
                  "parameters": {
                    "name": {
                      "required": true,
                      "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                      "location": "path",
                      "type": "string",
                      "description": "Required. The name of the CertificateAuthority to get."
                    }
                  }
                }
              },
              "resources": {
                "certificateRevocationLists": {
                  "methods": {
                    "setIamPolicy": {
                      "httpMethod": "POST",
                      "parameters": {
                        "resource": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificateRevocationLists/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being specified. See the operation documentation for the appropriate value for this field.",
                          "type": "string",
                          "location": "path",
                          "required": true
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameterOrder": [
                        "resource"
                      ],
                      "request": {
                        "$ref": "SetIamPolicyRequest"
                      },
                      "path": "v1beta1/{+resource}:setIamPolicy",
                      "description": "Sets the access control policy on the specified resource. Replaces any existing policy. Can return `NOT_FOUND`, `INVALID_ARGUMENT`, and `PERMISSION_DENIED` errors.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}:setIamPolicy",
                      "response": {
                        "$ref": "Policy"
                      },
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.setIamPolicy"
                    },
                    "list": {
                      "description": "Lists CertificateRevocationLists.",
                      "parameterOrder": [
                        "parent"
                      ],
                      "httpMethod": "GET",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "path": "v1beta1/{+parent}/certificateRevocationLists",
                      "parameters": {
                        "filter": {
                          "type": "string",
                          "description": "Optional. Only include resources that match the filter in the response.",
                          "location": "query"
                        },
                        "pageToken": {
                          "type": "string",
                          "description": "Optional. Pagination token, returned earlier via ListCertificateRevocationListsResponse.next_page_token.",
                          "location": "query"
                        },
                        "pageSize": {
                          "description": "Optional. Limit on the number of CertificateRevocationLists to include in the response. Further CertificateRevocationLists can subsequently be obtained by including the ListCertificateRevocationListsResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.",
                          "type": "integer",
                          "format": "int32",
                          "location": "query"
                        },
                        "parent": {
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                          "type": "string",
                          "location": "path",
                          "description": "Required. The resource name of the location associated with the CertificateRevocationLists, in the format `projects/*/locations/*/certificateauthorities/*`.",
                          "required": true
                        },
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Specify how the results should be sorted."
                        }
                      },
                      "response": {
                        "$ref": "ListCertificateRevocationListsResponse"
                      },
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.list",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists"
                    },
                    "getIamPolicy": {
                      "parameterOrder": [
                        "resource"
                      ],
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificateRevocationLists/[^/]+$",
                          "description": "REQUIRED: The resource for which the policy is being requested. See the operation documentation for the appropriate value for this field.",
                          "type": "string",
                          "required": true
                        },
                        "options.requestedPolicyVersion": {
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. The policy format version to be returned. Valid values are 0, 1, and 3. Requests specifying an invalid value will be rejected. Requests for policies with any conditional bindings must specify version 3. Policies without any conditional bindings may specify any valid value or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                          "type": "integer"
                        }
                      },
                      "path": "v1beta1/{+resource}:getIamPolicy",
                      "description": "Gets the access control policy for a resource. Returns an empty policy if the resource exists and does not have a policy set.",
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.getIamPolicy",
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "Policy"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}:getIamPolicy",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ]
                    },
                    "testIamPermissions": {
                      "httpMethod": "POST",
                      "path": "v1beta1/{+resource}:testIamPermissions",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}:testIamPermissions",
                      "parameters": {
                        "resource": {
                          "location": "path",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificateRevocationLists/[^/]+$",
                          "required": true,
                          "type": "string",
                          "description": "REQUIRED: The resource for which the policy detail is being requested. See the operation documentation for the appropriate value for this field."
                        }
                      },
                      "description": "Returns permissions that a caller has on the specified resource. If the resource does not exist, this will return an empty set of permissions, not a `NOT_FOUND` error. Note: This operation is designed to be used for building permission-aware UIs and command-line tools, not for authorization checking. This operation may \"fail open\" without warning.",
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.testIamPermissions",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "request": {
                        "$ref": "TestIamPermissionsRequest"
                      },
                      "response": {
                        "$ref": "TestIamPermissionsResponse"
                      },
                      "parameterOrder": [
                        "resource"
                      ]
                    },
                    "get": {
                      "httpMethod": "GET",
                      "response": {
                        "$ref": "CertificateRevocationList"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "description": "Returns a CertificateRevocationList.",
                      "parameters": {
                        "name": {
                          "description": "Required. The name of the CertificateRevocationList to get.",
                          "location": "path",
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificateRevocationLists/[^/]+$"
                        }
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "path": "v1beta1/{+name}",
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.get"
                    },
                    "patch": {
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "id": "privateca.projects.locations.certificateAuthorities.certificateRevocationLists.patch",
                      "parameters": {
                        "requestId": {
                          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "required": true,
                          "location": "path",
                          "description": "Output only. The resource path for this CertificateRevocationList in the format `projects/*/locations/*/certificateAuthorities/*/ certificateRevocationLists/*`.",
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificateRevocationLists/[^/]+$"
                        },
                        "updateMask": {
                          "description": "Required. A list of fields to be updated in this request.",
                          "type": "string",
                          "location": "query",
                          "format": "google-fieldmask"
                        }
                      },
                      "request": {
                        "$ref": "CertificateRevocationList"
                      },
                      "response": {
                        "$ref": "Operation"
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificateRevocationLists/{certificateRevocationListsId}",
                      "description": "Update a CertificateRevocationList.",
                      "path": "v1beta1/{+name}",
                      "httpMethod": "PATCH",
                      "parameterOrder": [
                        "name"
                      ]
                    }
                  }
                },
                "certificates": {
                  "methods": {
                    "create": {
                      "path": "v1beta1/{+parent}/certificates",
                      "id": "privateca.projects.locations.certificateAuthorities.certificates.create",
                      "parameters": {
                        "parent": {
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                          "required": true,
                          "location": "path",
                          "description": "Required. The resource name of the location and CertificateAuthority associated with the Certificate, in the format `projects/*/locations/*/certificateAuthorities/*`."
                        },
                        "certificateId": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. It must be unique within a location and match the regular expression `[a-zA-Z0-9_-]{1,63}`. This field is required when using a CertificateAuthority in the Enterprise CertificateAuthority.Tier, but is optional and its value is ignored otherwise."
                        },
                        "requestId": {
                          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        }
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "httpMethod": "POST",
                      "request": {
                        "$ref": "Certificate"
                      },
                      "parameterOrder": [
                        "parent"
                      ],
                      "description": "Create a new Certificate in a given Project, Location from a particular CertificateAuthority.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificates",
                      "response": {
                        "$ref": "Certificate"
                      }
                    },
                    "list": {
                      "parameters": {
                        "orderBy": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Specify how the results should be sorted. For details on supported fields and syntax, see [Certificates Sorting documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#sorting_support)."
                        },
                        "pageSize": {
                          "format": "int32",
                          "location": "query",
                          "description": "Optional. Limit on the number of Certificates to include in the response. Further Certificates can subsequently be obtained by including the ListCertificatesResponse.next_page_token in a subsequent request. If unspecified, the server will pick an appropriate default.",
                          "type": "integer"
                        },
                        "pageToken": {
                          "description": "Optional. Pagination token, returned earlier via ListCertificatesResponse.next_page_token.",
                          "location": "query",
                          "type": "string"
                        },
                        "parent": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+$",
                          "description": "Required. The resource name of the location associated with the Certificates, in the format `projects/*/locations/*/certificateauthorities/*`.",
                          "location": "path"
                        },
                        "filter": {
                          "location": "query",
                          "type": "string",
                          "description": "Optional. Only include resources that match the filter in the response. For details on supported filters and syntax, see [Certificates Filtering documentation](https://cloud.google.com/certificate-authority-service/docs/sorting-filtering-certificates#filtering_support)."
                        }
                      },
                      "path": "v1beta1/{+parent}/certificates",
                      "response": {
                        "$ref": "ListCertificatesResponse"
                      },
                      "httpMethod": "GET",
                      "parameterOrder": [
                        "parent"
                      ],
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificates",
                      "description": "Lists Certificates.",
                      "id": "privateca.projects.locations.certificateAuthorities.certificates.list"
                    },
                    "get": {
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "privateca.projects.locations.certificateAuthorities.certificates.get",
                      "httpMethod": "GET",
                      "path": "v1beta1/{+name}",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Certificate"
                      },
                      "parameters": {
                        "name": {
                          "required": true,
                          "type": "string",
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificates/[^/]+$",
                          "location": "path",
                          "description": "Required. The name of the Certificate to get."
                        }
                      },
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificates/{certificatesId}",
                      "description": "Returns a Certificate."
                    },
                    "revoke": {
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificates/{certificatesId}:revoke",
                      "path": "v1beta1/{+name}:revoke",
                      "description": "Revoke a Certificate.",
                      "parameters": {
                        "name": {
                          "description": "Required. The resource name for this Certificate in the format `projects/*/locations/*/certificateAuthorities/*/certificates/*`.",
                          "location": "path",
                          "type": "string",
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificates/[^/]+$"
                        }
                      },
                      "request": {
                        "$ref": "RevokeCertificateRequest"
                      },
                      "httpMethod": "POST",
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "response": {
                        "$ref": "Certificate"
                      },
                      "parameterOrder": [
                        "name"
                      ],
                      "id": "privateca.projects.locations.certificateAuthorities.certificates.revoke"
                    },
                    "patch": {
                      "parameterOrder": [
                        "name"
                      ],
                      "response": {
                        "$ref": "Certificate"
                      },
                      "description": "Update a Certificate. Currently, the only field you can update is the labels field.",
                      "flatPath": "v1beta1/projects/{projectsId}/locations/{locationsId}/certificateAuthorities/{certificateAuthoritiesId}/certificates/{certificatesId}",
                      "request": {
                        "$ref": "Certificate"
                      },
                      "scopes": [
                        "https://www.googleapis.com/auth/cloud-platform"
                      ],
                      "parameters": {
                        "updateMask": {
                          "description": "Required. A list of fields to be updated in this request.",
                          "format": "google-fieldmask",
                          "type": "string",
                          "location": "query"
                        },
                        "requestId": {
                          "description": "Optional. An ID to identify requests. Specify a unique request ID so that if you must retry your request, the server will know to ignore the request if it has already been completed. The server will guarantee that for at least 60 minutes since the first request. For example, consider a situation where you make an initial request and t he request times out. If you make the request again with the same request ID, the server can check if original operation with the same request ID was received, and if so, will ignore the second request. This prevents clients from accidentally creating duplicate commitments. The request ID must be a valid UUID with the exception that zero UUID is not supported (00000000-0000-0000-0000-000000000000).",
                          "location": "query",
                          "type": "string"
                        },
                        "name": {
                          "required": true,
                          "pattern": "^projects/[^/]+/locations/[^/]+/certificateAuthorities/[^/]+/certificates/[^/]+$",
                          "location": "path",
                          "description": "Output only. The resource path for this Certificate in the format `projects/*/locations/*/certificateAuthorities/*/certificates/*`.",
                          "type": "string"
                        }
                      },
                      "httpMethod": "PATCH",
                      "id": "privateca.projects.locations.certificateAuthorities.certificates.patch",
                      "path": "v1beta1/{+name}"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "baseUrl": "https://privateca.googleapis.com/",
  "protocol": "rest",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": {
          "description": "View and manage your data across Google Cloud Platform services"
        }
      }
    }
  },
  "id": "privateca:v1beta1",
  "description": "The Certificate Authority Service API is a highly-available, scalable service that enables you to simplify and automate the management of private certificate authorities (CAs) while staying in control of your private keys.\" ",
  "canonicalName": "Certificate Authority Service",
  "basePath": "",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "revision": "20201216",
  "batchPath": "batch",
  "name": "privateca",
  "mtlsRootUrl": "https://privateca.mtls.googleapis.com/"
}
