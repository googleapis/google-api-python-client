{
  "servicePath": "",
  "basePath": "",
  "name": "alertcenter",
  "parameters": {
    "quotaUser": {
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string",
      "location": "query"
    },
    "fields": {
      "location": "query",
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response."
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "type": "string",
      "location": "query"
    },
    "$.xgafv": {
      "type": "string",
      "description": "V1 error format.",
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "enum": [
        "1",
        "2"
      ]
    },
    "key": {
      "type": "string",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query"
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "callback": {
      "type": "string",
      "location": "query",
      "description": "JSONP"
    },
    "prettyPrint": {
      "location": "query",
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true"
    },
    "alt": {
      "location": "query",
      "default": "json",
      "enum": [
        "json",
        "media",
        "proto"
      ],
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "description": "Data format for response.",
      "type": "string"
    },
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    }
  },
  "mtlsRootUrl": "https://alertcenter.mtls.googleapis.com/",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/apps.alerts": {
          "description": "See and delete your domain's G Suite alerts, and send alert feedback"
        }
      }
    }
  },
  "kind": "discovery#restDescription",
  "ownerDomain": "google.com",
  "version": "v1beta1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "batchPath": "batch",
  "ownerName": "Google",
  "rootUrl": "https://alertcenter.googleapis.com/",
  "schemas": {
    "BatchDeleteAlertsRequest": {
      "type": "object",
      "id": "BatchDeleteAlertsRequest",
      "description": "A request to perform batch delete on alerts.",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with."
        },
        "alertId": {
          "items": {
            "type": "string"
          },
          "description": "Required. list of alert IDs.",
          "type": "array"
        }
      }
    },
    "PredefinedDetectorInfo": {
      "properties": {
        "detectorName": {
          "type": "string",
          "description": "Name that uniquely identifies the detector."
        }
      },
      "type": "object",
      "id": "PredefinedDetectorInfo",
      "description": "Detector provided by Google."
    },
    "GmailMessageInfo": {
      "id": "GmailMessageInfo",
      "description": "Details of a message in phishing spike alert.",
      "type": "object",
      "properties": {
        "md5HashSubject": {
          "type": "string",
          "description": "The MD5 Hash of email's subject (only available for reported emails)."
        },
        "subjectText": {
          "description": "The email subject text (only available for reported emails).",
          "type": "string"
        },
        "messageBodySnippet": {
          "description": "The snippet of the message body text (only available for reported emails).",
          "type": "string"
        },
        "attachmentsSha256Hash": {
          "type": "array",
          "description": "The `SHA256` hash of email's attachment and all MIME parts.",
          "items": {
            "type": "string"
          }
        },
        "md5HashMessageBody": {
          "type": "string",
          "description": "The hash of the message body text."
        },
        "messageId": {
          "description": "The message ID.",
          "type": "string"
        },
        "recipient": {
          "type": "string",
          "description": "The recipient of this email."
        },
        "date": {
          "type": "string",
          "description": "The date the malicious email was sent.",
          "format": "google-datetime"
        }
      }
    },
    "StateSponsoredAttack": {
      "properties": {
        "email": {
          "description": "The email of the user this incident was created for.",
          "type": "string"
        }
      },
      "id": "StateSponsoredAttack",
      "type": "object",
      "description": "A state-sponsored attack alert. Derived from audit logs."
    },
    "AccountWarning": {
      "type": "object",
      "id": "AccountWarning",
      "description": "Alerts for user account warning events.",
      "properties": {
        "loginDetails": {
          "description": "Optional. Details of the login action associated with the warning event. This is only available for: * Suspicious login * Suspicious login (less secure app) * Suspicious programmatic login * User suspended (suspicious activity)",
          "$ref": "LoginDetails"
        },
        "email": {
          "description": "Required. The email of the user that this event belongs to.",
          "type": "string"
        }
      }
    },
    "Csv": {
      "description": "A representation of a CSV file attachment, as a list of column headers and a list of data rows.",
      "properties": {
        "headers": {
          "description": "The list of headers for data columns in a CSV file.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "dataRows": {
          "items": {
            "$ref": "CsvRow"
          },
          "description": "The list of data rows in a CSV file, as string arrays rather than as a single comma-separated string.",
          "type": "array"
        }
      },
      "type": "object",
      "id": "Csv"
    },
    "DlpRuleViolation": {
      "type": "object",
      "id": "DlpRuleViolation",
      "properties": {
        "ruleViolationInfo": {
          "$ref": "RuleViolationInfo",
          "description": "Details about the violated DLP rule. Admins can use the predefined detectors provided by Google Cloud DLP https://cloud.google.com/dlp/ when setting up a DLP rule. Matched Cloud DLP detectors in this violation if any will be captured in the MatchInfo.predefined_detector."
        }
      },
      "description": "Alerts that get triggered on violations of Data Loss Prevention (DLP) rules."
    },
    "Settings": {
      "type": "object",
      "properties": {
        "notifications": {
          "type": "array",
          "description": "The list of notifications.",
          "items": {
            "$ref": "Notification"
          }
        }
      },
      "id": "Settings",
      "description": "Customer-level settings."
    },
    "ResourceInfo": {
      "description": "Proto that contains resource information.",
      "properties": {
        "documentId": {
          "type": "string",
          "description": "Drive file ID."
        },
        "resourceTitle": {
          "description": "Title of the resource, for example email subject, or document title.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "ResourceInfo"
    },
    "ListAlertFeedbackResponse": {
      "id": "ListAlertFeedbackResponse",
      "properties": {
        "feedback": {
          "items": {
            "$ref": "AlertFeedback"
          },
          "type": "array",
          "description": "The list of alert feedback. Feedback entries for each alert are ordered by creation time descending."
        }
      },
      "type": "object",
      "description": "Response message for an alert feedback listing request."
    },
    "MatchInfo": {
      "properties": {
        "userDefinedDetector": {
          "$ref": "UserDefinedDetectorInfo",
          "description": "For matched detector defined by administrators."
        },
        "predefinedDetector": {
          "$ref": "PredefinedDetectorInfo",
          "description": "For matched detector predefined by Google."
        }
      },
      "type": "object",
      "description": "Proto that contains match information from the condition part of the rule.",
      "id": "MatchInfo"
    },
    "PhishingSpike": {
      "id": "PhishingSpike",
      "description": "Alert for a spike in user reported phishing. *Warning*: This type has been deprecated. Use [MailPhishing](/admin-sdk/alertcenter/reference/rest/v1beta1/MailPhishing) instead.",
      "properties": {
        "maliciousEntity": {
          "$ref": "MaliciousEntity",
          "description": "The entity whose actions triggered a Gmail phishing alert."
        },
        "domainId": {
          "$ref": "DomainId",
          "description": "The domain ID."
        },
        "isInternal": {
          "type": "boolean",
          "description": "If `true`, the email originated from within the organization."
        },
        "messages": {
          "description": "The list of messages contained by this alert.",
          "items": {
            "$ref": "GmailMessageInfo"
          },
          "type": "array"
        }
      },
      "type": "object"
    },
    "DeviceCompromisedSecurityDetail": {
      "id": "DeviceCompromisedSecurityDetail",
      "properties": {
        "resourceId": {
          "type": "string",
          "description": "The device resource ID."
        },
        "deviceType": {
          "type": "string",
          "description": "The type of the device."
        },
        "iosVendorId": {
          "type": "string",
          "description": "Required for iOS, empty for others."
        },
        "deviceModel": {
          "description": "The model of the device.",
          "type": "string"
        },
        "serialNumber": {
          "description": "The serial number of the device.",
          "type": "string"
        },
        "deviceId": {
          "description": "Required. The device ID.",
          "type": "string"
        },
        "deviceCompromisedState": {
          "type": "string",
          "description": "The device compromised state. Possible values are \"`Compromised`\" or \"`Not Compromised`\"."
        }
      },
      "description": "Detailed information of a single MDM device compromised event.",
      "type": "object"
    },
    "BadWhitelist": {
      "description": "Alert for setting the domain or IP that malicious email comes from as whitelisted domain or IP in Gmail advanced settings.",
      "properties": {
        "messages": {
          "description": "The list of messages contained by this alert.",
          "items": {
            "$ref": "GmailMessageInfo"
          },
          "type": "array"
        },
        "domainId": {
          "$ref": "DomainId",
          "description": "The domain ID."
        },
        "sourceIp": {
          "type": "string",
          "description": "The source IP address of the malicious email, for example, `127.0.0.1`."
        },
        "maliciousEntity": {
          "$ref": "MaliciousEntity",
          "description": "The entity whose actions triggered a Gmail phishing alert."
        }
      },
      "type": "object",
      "id": "BadWhitelist"
    },
    "UndeleteAlertRequest": {
      "id": "UndeleteAlertRequest",
      "properties": {
        "customerId": {
          "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "A request to undelete a specific alert that was marked for deletion."
    },
    "SuspiciousActivity": {
      "type": "object",
      "id": "SuspiciousActivity",
      "properties": {
        "email": {
          "description": "The email of the user this alert was created for.",
          "type": "string"
        },
        "events": {
          "type": "array",
          "description": "Required. The list of security events.",
          "items": {
            "$ref": "SuspiciousActivitySecurityDetail"
          }
        }
      },
      "description": "A mobile suspicious activity alert. Derived from audit logs."
    },
    "UserDefinedDetectorInfo": {
      "id": "UserDefinedDetectorInfo",
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "Resource name that uniquely identifies the detector."
        },
        "displayName": {
          "description": "Display name of the detector.",
          "type": "string"
        }
      },
      "description": "Detector defined by administrators.",
      "type": "object"
    },
    "Status": {
      "id": "Status",
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "properties": {
        "code": {
          "type": "integer",
          "description": "The status code, which should be an enum value of google.rpc.Code.",
          "format": "int32"
        },
        "details": {
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          },
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array"
        },
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "AlertMetadata": {
      "description": "An alert metadata.",
      "properties": {
        "alertId": {
          "description": "Output only. The alert identifier.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metatdata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly."
        },
        "assignee": {
          "description": "The email address of the user assigned to the alert.",
          "type": "string"
        },
        "updateTime": {
          "description": "Output only. The time this metadata was last updated.",
          "format": "google-datetime",
          "type": "string"
        },
        "severity": {
          "description": "The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW",
          "type": "string"
        },
        "status": {
          "type": "string",
          "description": "The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED"
        },
        "customerId": {
          "type": "string",
          "description": "Output only. The unique identifier of the Google account of the customer."
        }
      },
      "type": "object",
      "id": "AlertMetadata"
    },
    "BatchUndeleteAlertsRequest": {
      "description": "A request to perform batch undelete on alerts.",
      "type": "object",
      "id": "BatchUndeleteAlertsRequest",
      "properties": {
        "alertId": {
          "type": "array",
          "description": "Required. list of alert IDs.",
          "items": {
            "type": "string"
          }
        },
        "customerId": {
          "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with.",
          "type": "string"
        }
      }
    },
    "DeviceCompromised": {
      "id": "DeviceCompromised",
      "description": "A mobile device compromised alert. Derived from audit logs.",
      "properties": {
        "events": {
          "description": "Required. The list of security events.",
          "items": {
            "$ref": "DeviceCompromisedSecurityDetail"
          },
          "type": "array"
        },
        "email": {
          "type": "string",
          "description": "The email of the user this alert was created for."
        }
      },
      "type": "object"
    },
    "DomainId": {
      "type": "object",
      "properties": {
        "customerPrimaryDomain": {
          "description": "The primary domain for the customer.",
          "type": "string"
        }
      },
      "description": "Domain ID of Gmail phishing alerts.",
      "id": "DomainId"
    },
    "AppMakerSqlSetupNotification": {
      "id": "AppMakerSqlSetupNotification",
      "description": "Alerts from App Maker to notify admins to set up default SQL instance.",
      "properties": {
        "requestInfo": {
          "type": "array",
          "items": {
            "$ref": "RequestInfo"
          },
          "description": "List of applications with requests for default SQL set up."
        }
      },
      "type": "object"
    },
    "BatchDeleteAlertsResponse": {
      "id": "BatchDeleteAlertsResponse",
      "description": "Response to batch delete operation on alerts.",
      "properties": {
        "successAlertIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The successful list of alert IDs."
        },
        "failedAlertStatus": {
          "type": "object",
          "additionalProperties": {
            "$ref": "Status"
          },
          "description": "The status details for each failed alert_id."
        }
      },
      "type": "object"
    },
    "RuleInfo": {
      "description": "Proto that contains rule information.",
      "type": "object",
      "id": "RuleInfo",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "User provided name of the rule."
        },
        "resourceName": {
          "type": "string",
          "description": "Resource name that uniquely identifies the rule."
        }
      }
    },
    "RequestInfo": {
      "id": "RequestInfo",
      "type": "object",
      "properties": {
        "appDeveloperEmail": {
          "description": "List of app developers who triggered notifications for above application.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "appKey": {
          "type": "string",
          "description": "Required. The application that requires the SQL setup."
        },
        "numberOfRequests": {
          "description": "Required. Number of requests sent for this application to set up default SQL instance.",
          "type": "string",
          "format": "int64"
        }
      },
      "description": "Requests for one application that needs default SQL setup."
    },
    "MaliciousEntity": {
      "type": "object",
      "id": "MaliciousEntity",
      "description": "Entity whose actions triggered a Gmail phishing alert.",
      "properties": {
        "fromHeader": {
          "type": "string",
          "description": "The sender email address."
        },
        "displayName": {
          "type": "string",
          "description": "The header from display name."
        },
        "entity": {
          "description": "The actor who triggered a gmail phishing alert.",
          "$ref": "User"
        }
      }
    },
    "ListAlertsResponse": {
      "id": "ListAlertsResponse",
      "description": "Response message for an alert listing request.",
      "properties": {
        "alerts": {
          "description": "The list of alerts.",
          "items": {
            "$ref": "Alert"
          },
          "type": "array"
        },
        "nextPageToken": {
          "description": "The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "User": {
      "description": "A user.",
      "id": "User",
      "properties": {
        "emailAddress": {
          "type": "string",
          "description": "Email address of the user."
        },
        "displayName": {
          "type": "string",
          "description": "Display name of the user."
        }
      },
      "type": "object"
    },
    "CsvRow": {
      "type": "object",
      "id": "CsvRow",
      "description": "A representation of a single data row in a CSV file.",
      "properties": {
        "entries": {
          "description": "The data entries in a CSV file row, as a string array rather than a single comma-separated string.",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "MailPhishing": {
      "type": "object",
      "properties": {
        "messages": {
          "description": "The list of messages contained by this alert.",
          "items": {
            "$ref": "GmailMessageInfo"
          },
          "type": "array"
        },
        "isInternal": {
          "type": "boolean",
          "description": "If `true`, the email originated from within the organization."
        },
        "maliciousEntity": {
          "$ref": "MaliciousEntity",
          "description": "The entity whose actions triggered a Gmail phishing alert."
        },
        "domainId": {
          "$ref": "DomainId",
          "description": "The domain ID."
        },
        "systemActionType": {
          "enum": [
            "SYSTEM_ACTION_TYPE_UNSPECIFIED",
            "NO_OPERATION",
            "REMOVED_FROM_INBOX"
          ],
          "type": "string",
          "enumDescriptions": [
            "System action is unspecified.",
            "No operation.",
            "Messages were removed from the inbox."
          ],
          "description": "System actions on the messages."
        }
      },
      "description": "Proto for all phishing alerts with common payload. Supported types are any of the following: * User reported phishing * User reported spam spike * Suspicious message reported * Phishing reclassification * Malware reclassification * Gmail potential employee spoofing",
      "id": "MailPhishing"
    },
    "AlertFeedback": {
      "description": "A customer feedback about an alert.",
      "properties": {
        "feedbackId": {
          "description": "Output only. The unique identifier for the feedback.",
          "type": "string"
        },
        "alertId": {
          "description": "Output only. The alert identifier.",
          "type": "string"
        },
        "createTime": {
          "format": "google-datetime",
          "description": "Output only. The time this feedback was created.",
          "type": "string"
        },
        "type": {
          "description": "Required. The type of the feedback.",
          "enumDescriptions": [
            "The feedback type is not specified.",
            "The alert report is not useful.",
            "The alert report is somewhat useful.",
            "The alert report is very useful."
          ],
          "type": "string",
          "enum": [
            "ALERT_FEEDBACK_TYPE_UNSPECIFIED",
            "NOT_USEFUL",
            "SOMEWHAT_USEFUL",
            "VERY_USEFUL"
          ]
        },
        "customerId": {
          "type": "string",
          "description": "Output only. The unique identifier of the Google account of the customer."
        },
        "email": {
          "type": "string",
          "description": "Output only. The email of the user that provided the feedback."
        }
      },
      "id": "AlertFeedback",
      "type": "object"
    },
    "BatchUndeleteAlertsResponse": {
      "type": "object",
      "properties": {
        "successAlertIds": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The successful list of alert IDs."
        },
        "failedAlertStatus": {
          "additionalProperties": {
            "$ref": "Status"
          },
          "type": "object",
          "description": "The status details for each failed alert_id."
        }
      },
      "description": "Response to batch undelete operation on alerts.",
      "id": "BatchUndeleteAlertsResponse"
    },
    "ActivityRule": {
      "description": "Alerts from G Suite Security Center rules service configured by admin.",
      "id": "ActivityRule",
      "properties": {
        "createTime": {
          "description": "Rule create timestamp.",
          "type": "string",
          "format": "google-datetime"
        },
        "description": {
          "type": "string",
          "description": "Description of the rule."
        },
        "actionNames": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of action names associated with the rule threshold."
        },
        "supersededAlerts": {
          "description": "List of alert IDs superseded by this alert. It is used to indicate that this alert is essentially extension of superseded alerts and we found the relationship after creating these alerts.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "displayName": {
          "description": "Alert display name.",
          "type": "string"
        },
        "supersedingAlert": {
          "description": "Alert ID superseding this alert. It is used to indicate that superseding alert is essentially extension of this alert and we found the relationship after creating both alerts.",
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "Rule name."
        },
        "query": {
          "description": "Query that is used to get the data from the associated source.",
          "type": "string"
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The timestamp of the last update to the rule.",
          "type": "string"
        },
        "windowSize": {
          "format": "google-duration",
          "description": "Rule window size. Possible values are 1 hour or 24 hours.",
          "type": "string"
        },
        "triggerSource": {
          "type": "string",
          "description": "The trigger sources for this rule. * GMAIL_EVENTS * DEVICE_EVENTS * USER_EVENTS"
        },
        "threshold": {
          "description": "Alert threshold is for example “COUNT \u003e 5”.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "Attachment": {
      "description": "Attachment with application-specific information about an alert.",
      "properties": {
        "csv": {
          "description": "A CSV file attachment.",
          "$ref": "Csv"
        }
      },
      "type": "object",
      "id": "Attachment"
    },
    "Empty": {
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
      "properties": {},
      "type": "object",
      "id": "Empty"
    },
    "Notification": {
      "description": "Settings for callback notifications. For more details see [Google Workspace Alert Notification](/admin-sdk/alertcenter/guides/notifications).",
      "type": "object",
      "id": "Notification",
      "properties": {
        "cloudPubsubTopic": {
          "$ref": "CloudPubsubTopic",
          "description": "A Google Cloud Pub/sub topic destination."
        }
      }
    },
    "CloudPubsubTopic": {
      "properties": {
        "topicName": {
          "description": "The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic).",
          "type": "string"
        },
        "payloadFormat": {
          "enum": [
            "PAYLOAD_FORMAT_UNSPECIFIED",
            "JSON"
          ],
          "type": "string",
          "description": "Optional. The format of the payload that would be sent. If not specified the format will be JSON.",
          "enumDescriptions": [
            "Payload format is not specified (will use JSON as default).",
            "Use JSON."
          ]
        }
      },
      "id": "CloudPubsubTopic",
      "type": "object",
      "description": "A reference to a Cloud Pubsub topic. To register for notifications, the owner of the topic must grant `alerts-api-push-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission."
    },
    "DomainWideTakeoutInitiated": {
      "description": "A takeout operation for the entire domain was initiated by an admin. Derived from audit logs.",
      "properties": {
        "email": {
          "description": "The email of the admin who initiated the takeout.",
          "type": "string"
        },
        "takeoutRequestId": {
          "type": "string",
          "description": "The takeout request ID."
        }
      },
      "id": "DomainWideTakeoutInitiated",
      "type": "object"
    },
    "LoginDetails": {
      "type": "object",
      "description": "The details of the login action.",
      "properties": {
        "loginTime": {
          "format": "google-datetime",
          "description": "Optional. The successful login time that is associated with the warning event. This isn't present for blocked login attempts.",
          "type": "string"
        },
        "ipAddress": {
          "type": "string",
          "description": "Optional. The human-readable IP address (for example, `11.22.33.44`) that is associated with the warning event."
        }
      },
      "id": "LoginDetails"
    },
    "RuleViolationInfo": {
      "properties": {
        "dataSource": {
          "enum": [
            "DATA_SOURCE_UNSPECIFIED",
            "DRIVE"
          ],
          "enumDescriptions": [
            "Data source is unspecified.",
            "Drive data source."
          ],
          "description": "Source of the data.",
          "type": "string"
        },
        "recipients": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Resource recipients. For Drive, they are grantees that the Drive file was shared with at the time of rule triggering. Valid values include user emails, group emails, domains, or 'anyone' if the file was publicly accessible. If the file was private the recipients list will be empty. For Gmail, they are emails of the users or groups that the Gmail message was sent to."
        },
        "triggeringUserEmail": {
          "type": "string",
          "description": "Email of the user who caused the violation. Value could be empty if not applicable, for example, a violation found by drive continuous scan."
        },
        "triggeredActionTypes": {
          "items": {
            "enumDescriptions": [
              "Action type is unspecified.",
              "Block sharing a file externally.",
              "Show a warning message when sharing a file externally.",
              "Send alert.",
              "Activate Rule Action",
              "Deactivate Rule Action"
            ],
            "enum": [
              "ACTION_TYPE_UNSPECIFIED",
              "DRIVE_BLOCK_EXTERNAL_SHARING",
              "DRIVE_WARN_ON_EXTERNAL_SHARING",
              "ALERT",
              "RULE_ACTIVATE",
              "RULE_DEACTIVATE"
            ],
            "type": "string"
          },
          "type": "array",
          "description": "Actions applied as a consequence of the rule being triggered."
        },
        "trigger": {
          "description": "Trigger of the rule.",
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "DRIVE_SHARE"
          ],
          "type": "string",
          "enumDescriptions": [
            "Trigger is unspecified.",
            "A Drive file is shared."
          ]
        },
        "matchInfo": {
          "items": {
            "$ref": "MatchInfo"
          },
          "type": "array",
          "description": "List of matches that were found in the resource content."
        },
        "suppressedActionTypes": {
          "type": "array",
          "items": {
            "enumDescriptions": [
              "Action type is unspecified.",
              "Block sharing a file externally.",
              "Show a warning message when sharing a file externally.",
              "Send alert.",
              "Activate Rule Action",
              "Deactivate Rule Action"
            ],
            "type": "string",
            "enum": [
              "ACTION_TYPE_UNSPECIFIED",
              "DRIVE_BLOCK_EXTERNAL_SHARING",
              "DRIVE_WARN_ON_EXTERNAL_SHARING",
              "ALERT",
              "RULE_ACTIVATE",
              "RULE_DEACTIVATE"
            ]
          },
          "description": "Actions suppressed due to other actions with higher priority."
        },
        "ruleInfo": {
          "description": "Details of the violated rule.",
          "$ref": "RuleInfo"
        },
        "resourceInfo": {
          "description": "Details of the resource which violated the rule.",
          "$ref": "ResourceInfo"
        }
      },
      "id": "RuleViolationInfo",
      "type": "object",
      "description": "Common alert information about violated rules that are configured by G Suite administrators."
    },
    "SuspiciousActivitySecurityDetail": {
      "description": "Detailed information of a single MDM suspicious activity event.",
      "type": "object",
      "properties": {
        "deviceType": {
          "type": "string",
          "description": "The type of the device."
        },
        "resourceId": {
          "description": "The device resource ID.",
          "type": "string"
        },
        "newValue": {
          "type": "string",
          "description": "The new value of the device property after the change."
        },
        "deviceModel": {
          "description": "The model of the device.",
          "type": "string"
        },
        "iosVendorId": {
          "type": "string",
          "description": "Required for iOS, empty for others."
        },
        "deviceId": {
          "type": "string",
          "description": "Required. The device ID."
        },
        "deviceProperty": {
          "description": "The device property which was changed.",
          "type": "string"
        },
        "oldValue": {
          "type": "string",
          "description": "The old value of the device property before the change."
        },
        "serialNumber": {
          "description": "The serial number of the device.",
          "type": "string"
        }
      },
      "id": "SuspiciousActivitySecurityDetail"
    },
    "Alert": {
      "id": "Alert",
      "type": "object",
      "description": "An alert affecting a customer.",
      "properties": {
        "updateTime": {
          "format": "google-datetime",
          "description": "Output only. The time this alert was last updated.",
          "type": "string"
        },
        "type": {
          "description": "Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [Google Workspace Alert types](/admin-sdk/alertcenter/reference/alert-types).",
          "type": "string"
        },
        "data": {
          "additionalProperties": {
            "type": "any",
            "description": "Properties of the object. Contains field @type with type URL."
          },
          "description": "Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised.",
          "type": "object"
        },
        "deleted": {
          "description": "Output only. `True` if this alert is marked for deletion.",
          "type": "boolean"
        },
        "endTime": {
          "format": "google-datetime",
          "description": "Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert.",
          "type": "string"
        },
        "customerId": {
          "description": "Output only. The unique identifier of the Google account of the customer.",
          "type": "string"
        },
        "etag": {
          "type": "string",
          "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly."
        },
        "metadata": {
          "description": "Output only. The metadata associated with this alert.",
          "$ref": "AlertMetadata"
        },
        "createTime": {
          "description": "Output only. The time this alert was created.",
          "format": "google-datetime",
          "type": "string"
        },
        "source": {
          "description": "Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Domain wide takeout * State sponsored attack * Google identity",
          "type": "string"
        },
        "securityInvestigationToolLink": {
          "type": "string",
          "description": "Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert."
        },
        "alertId": {
          "type": "string",
          "description": "Output only. The unique identifier for the alert."
        },
        "startTime": {
          "description": "Required. The time the event that caused this alert was started or detected.",
          "type": "string",
          "format": "google-datetime"
        }
      }
    },
    "GoogleOperations": {
      "description": "An incident reported by Google Operations for a G Suite application.",
      "properties": {
        "affectedUserEmails": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of emails which correspond to the users directly affected by the incident."
        },
        "header": {
          "description": "A header to display above the incident message. Typcially used to attach a localized notice on the timeline for followup comms translations.",
          "type": "string"
        },
        "attachmentData": {
          "$ref": "Attachment",
          "description": "Optional. Application-specific data for an incident, provided when the G Suite application which reported the incident cannot be completely restored to a valid state."
        },
        "description": {
          "description": "A detailed, freeform incident description.",
          "type": "string"
        },
        "title": {
          "description": "A one-line incident description.",
          "type": "string"
        }
      },
      "type": "object",
      "id": "GoogleOperations"
    }
  },
  "discoveryVersion": "v1",
  "version_module": true,
  "resources": {
    "v1beta1": {
      "methods": {
        "getSettings": {
          "id": "alertcenter.getSettings",
          "response": {
            "$ref": "Settings"
          },
          "parameters": {
            "customerId": {
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert settings are associated with. Inferred from the caller identity if not provided.",
              "type": "string",
              "location": "query"
            }
          },
          "httpMethod": "GET",
          "parameterOrder": [],
          "flatPath": "v1beta1/settings",
          "description": "Returns customer-level settings.",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "path": "v1beta1/settings"
        },
        "updateSettings": {
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "id": "alertcenter.updateSettings",
          "response": {
            "$ref": "Settings"
          },
          "httpMethod": "PATCH",
          "parameters": {
            "customerId": {
              "type": "string",
              "location": "query",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert settings are associated with. Inferred from the caller identity if not provided."
            }
          },
          "path": "v1beta1/settings",
          "flatPath": "v1beta1/settings",
          "description": "Updates the customer-level settings.",
          "parameterOrder": [],
          "request": {
            "$ref": "Settings"
          }
        }
      }
    },
    "alerts": {
      "methods": {
        "getMetadata": {
          "parameterOrder": [
            "alertId"
          ],
          "response": {
            "$ref": "AlertMetadata"
          },
          "description": "Returns the metadata of an alert. Attempting to get metadata for a non-existent alert returns `NOT_FOUND` error.",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "flatPath": "v1beta1/alerts/{alertId}/metadata",
          "parameters": {
            "alertId": {
              "required": true,
              "type": "string",
              "location": "path",
              "description": "Required. The identifier of the alert this metadata belongs to."
            },
            "customerId": {
              "type": "string",
              "location": "query",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert metadata is associated with. Inferred from the caller identity if not provided."
            }
          },
          "path": "v1beta1/alerts/{alertId}/metadata",
          "httpMethod": "GET",
          "id": "alertcenter.alerts.getMetadata"
        },
        "batchDelete": {
          "id": "alertcenter.alerts.batchDelete",
          "request": {
            "$ref": "BatchDeleteAlertsRequest"
          },
          "response": {
            "$ref": "BatchDeleteAlertsResponse"
          },
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "httpMethod": "POST",
          "description": "Performs batch delete operation on alerts.",
          "parameterOrder": [],
          "path": "v1beta1/alerts:batchDelete",
          "flatPath": "v1beta1/alerts:batchDelete"
        },
        "batchUndelete": {
          "id": "alertcenter.alerts.batchUndelete",
          "httpMethod": "POST",
          "response": {
            "$ref": "BatchUndeleteAlertsResponse"
          },
          "parameterOrder": [],
          "flatPath": "v1beta1/alerts:batchUndelete",
          "path": "v1beta1/alerts:batchUndelete",
          "parameters": {},
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "request": {
            "$ref": "BatchUndeleteAlertsRequest"
          },
          "description": "Performs batch undelete operation on alerts."
        },
        "list": {
          "parameters": {
            "pageToken": {
              "description": "Optional. A token identifying a page of results the server should return. If empty, a new iteration is started. To continue an iteration, pass in the value from the previous ListAlertsResponse's next_page_token field.",
              "location": "query",
              "type": "string"
            },
            "customerId": {
              "location": "query",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with. Inferred from the caller identity if not provided.",
              "type": "string"
            },
            "pageSize": {
              "format": "int32",
              "description": "Optional. The requested page size. Server may return fewer items than requested. If unspecified, server picks an appropriate default.",
              "type": "integer",
              "location": "query"
            },
            "filter": {
              "type": "string",
              "location": "query",
              "description": "Optional. A query string for filtering alert results. For more details, see [Query filters](/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](/admin-sdk/alertcenter/reference/filter-fields#alerts.list)."
            },
            "orderBy": {
              "description": "Optional. The sort order of the list results. If not specified results may be returned in arbitrary order. You can sort the results in descending order based on the creation timestamp using `order_by=\"create_time desc\"`. Currently, supported sorting are `create_time asc`, `create_time desc`, `update_time desc`",
              "type": "string",
              "location": "query"
            }
          },
          "response": {
            "$ref": "ListAlertsResponse"
          },
          "parameterOrder": [],
          "flatPath": "v1beta1/alerts",
          "path": "v1beta1/alerts",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "httpMethod": "GET",
          "id": "alertcenter.alerts.list",
          "description": "Lists the alerts."
        },
        "get": {
          "id": "alertcenter.alerts.get",
          "httpMethod": "GET",
          "flatPath": "v1beta1/alerts/{alertId}",
          "parameters": {
            "alertId": {
              "type": "string",
              "description": "Required. The identifier of the alert to retrieve.",
              "location": "path",
              "required": true
            },
            "customerId": {
              "location": "query",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
              "type": "string"
            }
          },
          "path": "v1beta1/alerts/{alertId}",
          "parameterOrder": [
            "alertId"
          ],
          "description": "Gets the specified alert. Attempting to get a nonexistent alert returns `NOT_FOUND` error.",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "response": {
            "$ref": "Alert"
          }
        },
        "delete": {
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "path": "v1beta1/alerts/{alertId}",
          "parameterOrder": [
            "alertId"
          ],
          "httpMethod": "DELETE",
          "flatPath": "v1beta1/alerts/{alertId}",
          "parameters": {
            "customerId": {
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
              "location": "query"
            },
            "alertId": {
              "location": "path",
              "description": "Required. The identifier of the alert to delete.",
              "type": "string",
              "required": true
            }
          },
          "response": {
            "$ref": "Empty"
          },
          "id": "alertcenter.alerts.delete",
          "description": "Marks the specified alert for deletion. An alert that has been marked for deletion is removed from Alert Center after 30 days. Marking an alert for deletion has no effect on an alert which has already been marked for deletion. Attempting to mark a nonexistent alert for deletion results in a `NOT_FOUND` error."
        },
        "undelete": {
          "parameterOrder": [
            "alertId"
          ],
          "parameters": {
            "alertId": {
              "type": "string",
              "required": true,
              "description": "Required. The identifier of the alert to undelete.",
              "location": "path"
            }
          },
          "httpMethod": "POST",
          "description": "Restores, or \"undeletes\", an alert that was marked for deletion within the past 30 days. Attempting to undelete an alert which was marked for deletion over 30 days ago (which has been removed from the Alert Center database) or a nonexistent alert returns a `NOT_FOUND` error. Attempting to undelete an alert which has not been marked for deletion has no effect.",
          "id": "alertcenter.alerts.undelete",
          "path": "v1beta1/alerts/{alertId}:undelete",
          "response": {
            "$ref": "Alert"
          },
          "flatPath": "v1beta1/alerts/{alertId}:undelete",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "request": {
            "$ref": "UndeleteAlertRequest"
          }
        }
      },
      "resources": {
        "feedback": {
          "methods": {
            "create": {
              "httpMethod": "POST",
              "parameterOrder": [
                "alertId"
              ],
              "response": {
                "$ref": "AlertFeedback"
              },
              "parameters": {
                "customerId": {
                  "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
                  "location": "query",
                  "type": "string"
                },
                "alertId": {
                  "required": true,
                  "location": "path",
                  "description": "Required. The identifier of the alert this feedback belongs to.",
                  "type": "string"
                }
              },
              "scopes": [
                "https://www.googleapis.com/auth/apps.alerts"
              ],
              "request": {
                "$ref": "AlertFeedback"
              },
              "id": "alertcenter.alerts.feedback.create",
              "path": "v1beta1/alerts/{alertId}/feedback",
              "description": "Creates new feedback for an alert. Attempting to create a feedback for a non-existent alert returns `NOT_FOUND` error. Attempting to create a feedback for an alert that is marked for deletion returns `FAILED_PRECONDITION' error.",
              "flatPath": "v1beta1/alerts/{alertId}/feedback"
            },
            "list": {
              "parameters": {
                "filter": {
                  "type": "string",
                  "description": "Optional. A query string for filtering alert feedback results. For more details, see [Query filters](/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](/admin-sdk/alertcenter/reference/filter-fields#alerts.feedback.list).",
                  "location": "query"
                },
                "alertId": {
                  "location": "path",
                  "description": "Required. The alert identifier. The \"-\" wildcard could be used to represent all alerts.",
                  "required": true,
                  "type": "string"
                },
                "customerId": {
                  "type": "string",
                  "location": "query",
                  "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert feedback are associated with. Inferred from the caller identity if not provided."
                }
              },
              "id": "alertcenter.alerts.feedback.list",
              "httpMethod": "GET",
              "description": "Lists all the feedback for an alert. Attempting to list feedbacks for a non-existent alert returns `NOT_FOUND` error.",
              "flatPath": "v1beta1/alerts/{alertId}/feedback",
              "scopes": [
                "https://www.googleapis.com/auth/apps.alerts"
              ],
              "path": "v1beta1/alerts/{alertId}/feedback",
              "response": {
                "$ref": "ListAlertFeedbackResponse"
              },
              "parameterOrder": [
                "alertId"
              ]
            }
          }
        }
      }
    }
  },
  "fullyEncodeReservedExpansion": true,
  "id": "alertcenter:v1beta1",
  "documentationLink": "https://developers.google.com/admin-sdk/alertcenter/",
  "title": "Google Workspace Alert Center API",
  "baseUrl": "https://alertcenter.googleapis.com/",
  "canonicalName": "AlertCenter",
  "protocol": "rest",
  "description": "Manages alerts on issues affecting your domain.",
  "revision": "20210123"
}
