{
  "description": "Manages alerts on issues affecting your domain.",
  "schemas": {
    "UserDefinedDetectorInfo": {
      "properties": {
        "displayName": {
          "description": "Display name of the detector.",
          "type": "string"
        },
        "resourceName": {
          "type": "string",
          "description": "Resource name that uniquely identifies the detector."
        }
      },
      "type": "object",
      "description": "Detector defined by administrators.",
      "id": "UserDefinedDetectorInfo"
    },
    "BatchDeleteAlertsRequest": {
      "type": "object",
      "description": "A request to perform batch delete on alerts.",
      "properties": {
        "alertId": {
          "description": "Required. list of alert IDs.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "customerId": {
          "type": "string",
          "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with."
        }
      },
      "id": "BatchDeleteAlertsRequest"
    },
    "GoogleOperations": {
      "id": "GoogleOperations",
      "properties": {
        "attachmentData": {
          "$ref": "Attachment",
          "description": "Optional. Application-specific data for an incident, provided when the G Suite application which reported the incident cannot be completely restored to a valid state."
        },
        "description": {
          "type": "string",
          "description": "A detailed, freeform incident description."
        },
        "title": {
          "type": "string",
          "description": "A one-line incident description."
        },
        "affectedUserEmails": {
          "items": {
            "type": "string"
          },
          "description": "The list of emails which correspond to the users directly affected by the incident.",
          "type": "array"
        }
      },
      "type": "object",
      "description": "An incident reported by Google Operations for a G Suite application."
    },
    "DomainWideTakeoutInitiated": {
      "type": "object",
      "id": "DomainWideTakeoutInitiated",
      "properties": {
        "takeoutRequestId": {
          "type": "string",
          "description": "The takeout request ID."
        },
        "email": {
          "description": "The email of the admin who initiated the takeout.",
          "type": "string"
        }
      },
      "description": "A takeout operation for the entire domain was initiated by an admin. Derived from audit logs."
    },
    "RuleViolationInfo": {
      "properties": {
        "ruleInfo": {
          "$ref": "RuleInfo",
          "description": "Details of the violated rule."
        },
        "suppressedActionTypes": {
          "description": "Actions suppressed due to other actions with higher priority.",
          "type": "array",
          "items": {
            "type": "string",
            "enumDescriptions": [
              "Action type is unspecified.",
              "Block sharing a file externally.",
              "Show a warning message when sharing a file externally.",
              "Send alert.",
              "Activate Rule Action",
              "Deactivate Rule Action"
            ],
            "enum": [
              "ACTION_TYPE_UNSPECIFIED",
              "DRIVE_BLOCK_EXTERNAL_SHARING",
              "DRIVE_WARN_ON_EXTERNAL_SHARING",
              "ALERT",
              "RULE_ACTIVATE",
              "RULE_DEACTIVATE"
            ]
          }
        },
        "resourceInfo": {
          "description": "Details of the resource which violated the rule.",
          "$ref": "ResourceInfo"
        },
        "triggeringUserEmail": {
          "type": "string",
          "description": "Email of the user who caused the violation. Value could be empty if not applicable, for example, a violation found by drive continuous scan."
        },
        "dataSource": {
          "description": "Source of the data.",
          "type": "string",
          "enumDescriptions": [
            "Data source is unspecified.",
            "Drive data source."
          ],
          "enum": [
            "DATA_SOURCE_UNSPECIFIED",
            "DRIVE"
          ]
        },
        "recipients": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "Resource recipients. For Drive, they are grantees that the Drive file was shared with at the time of rule triggering. Valid values include user emails, group emails, domains, or 'anyone' if the file was publicly accessible. If the file was private the recipients list will be empty. For Gmail, they are emails of the users or groups that the Gmail message was sent to."
        },
        "trigger": {
          "enum": [
            "TRIGGER_UNSPECIFIED",
            "DRIVE_SHARE"
          ],
          "description": "Trigger of the rule.",
          "enumDescriptions": [
            "Trigger is unspecified.",
            "A Drive file is shared."
          ],
          "type": "string"
        },
        "triggeredActionTypes": {
          "items": {
            "enumDescriptions": [
              "Action type is unspecified.",
              "Block sharing a file externally.",
              "Show a warning message when sharing a file externally.",
              "Send alert.",
              "Activate Rule Action",
              "Deactivate Rule Action"
            ],
            "type": "string",
            "enum": [
              "ACTION_TYPE_UNSPECIFIED",
              "DRIVE_BLOCK_EXTERNAL_SHARING",
              "DRIVE_WARN_ON_EXTERNAL_SHARING",
              "ALERT",
              "RULE_ACTIVATE",
              "RULE_DEACTIVATE"
            ]
          },
          "description": "Actions applied as a consequence of the rule being triggered.",
          "type": "array"
        },
        "matchInfo": {
          "description": "List of matches that were found in the resource content.",
          "type": "array",
          "items": {
            "$ref": "MatchInfo"
          }
        }
      },
      "description": "Common alert information about violated rules that are configured by G Suite administrators.",
      "type": "object",
      "id": "RuleViolationInfo"
    },
    "Notification": {
      "properties": {
        "cloudPubsubTopic": {
          "$ref": "CloudPubsubTopic",
          "description": "A Google Cloud Pub/sub topic destination."
        }
      },
      "id": "Notification",
      "type": "object",
      "description": "Settings for callback notifications. For more details see [Google Workspace Alert Notification](/admin-sdk/alertcenter/guides/notifications)."
    },
    "Alert": {
      "type": "object",
      "properties": {
        "securityInvestigationToolLink": {
          "type": "string",
          "description": "Output only. An optional [Security Investigation Tool](https://support.google.com/a/answer/7575955) query for this alert."
        },
        "customerId": {
          "type": "string",
          "description": "Output only. The unique identifier of the Google account of the customer."
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time this alert was created."
        },
        "alertId": {
          "type": "string",
          "description": "Output only. The unique identifier for the alert."
        },
        "source": {
          "type": "string",
          "description": "Required. A unique identifier for the system that reported the alert. This is output only after alert is created. Supported sources are any of the following: * Google Operations * Mobile device management * Gmail phishing * Domain wide takeout * State sponsored attack * Google identity"
        },
        "startTime": {
          "format": "google-datetime",
          "type": "string",
          "description": "Required. The time the event that caused this alert was started or detected."
        },
        "data": {
          "description": "Optional. The data associated with this alert, for example google.apps.alertcenter.type.DeviceCompromised.",
          "additionalProperties": {
            "description": "Properties of the object. Contains field @type with type URL.",
            "type": "any"
          },
          "type": "object"
        },
        "metadata": {
          "description": "Output only. The metadata associated with this alert.",
          "$ref": "AlertMetadata"
        },
        "deleted": {
          "type": "boolean",
          "description": "Output only. `True` if this alert is marked for deletion."
        },
        "updateTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time this alert was last updated."
        },
        "type": {
          "description": "Required. The type of the alert. This is output only after alert is created. For a list of available alert types see [Google Workspace Alert types](/admin-sdk/alertcenter/reference/alert-types).",
          "type": "string"
        },
        "etag": {
          "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform alert updates in order to avoid race conditions: An `etag` is returned in the response which contains alerts, and systems are expected to put that etag in the request to update alert to ensure that their change will be applied to the same version of the alert. If no `etag` is provided in the call to update alert, then the existing alert is overwritten blindly.",
          "type": "string"
        },
        "endTime": {
          "description": "Optional. The time the event that caused this alert ceased being active. If provided, the end time must not be earlier than the start time. If not provided, it indicates an ongoing alert.",
          "type": "string",
          "format": "google-datetime"
        }
      },
      "id": "Alert",
      "description": "An alert affecting a customer."
    },
    "DomainId": {
      "id": "DomainId",
      "description": "Domain ID of Gmail phishing alerts.",
      "properties": {
        "customerPrimaryDomain": {
          "description": "The primary domain for the customer.",
          "type": "string"
        }
      },
      "type": "object"
    },
    "SuspiciousActivitySecurityDetail": {
      "description": "Detailed information of a single MDM suspicious activity event.",
      "id": "SuspiciousActivitySecurityDetail",
      "type": "object",
      "properties": {
        "serialNumber": {
          "type": "string",
          "description": "The serial number of the device."
        },
        "newValue": {
          "type": "string",
          "description": "The new value of the device property after the change."
        },
        "deviceId": {
          "type": "string",
          "description": "Required. The device ID."
        },
        "deviceType": {
          "type": "string",
          "description": "The type of the device."
        },
        "deviceProperty": {
          "type": "string",
          "description": "The device property which was changed."
        },
        "iosVendorId": {
          "type": "string",
          "description": "Required for iOS, empty for others."
        },
        "resourceId": {
          "type": "string",
          "description": "The device resource ID."
        },
        "deviceModel": {
          "description": "The model of the device.",
          "type": "string"
        },
        "oldValue": {
          "description": "The old value of the device property before the change.",
          "type": "string"
        }
      }
    },
    "AlertFeedback": {
      "type": "object",
      "properties": {
        "email": {
          "description": "Output only. The email of the user that provided the feedback.",
          "type": "string"
        },
        "alertId": {
          "description": "Output only. The alert identifier.",
          "type": "string"
        },
        "type": {
          "type": "string",
          "enumDescriptions": [
            "The feedback type is not specified.",
            "The alert report is not useful.",
            "The alert report is somewhat useful.",
            "The alert report is very useful."
          ],
          "enum": [
            "ALERT_FEEDBACK_TYPE_UNSPECIFIED",
            "NOT_USEFUL",
            "SOMEWHAT_USEFUL",
            "VERY_USEFUL"
          ],
          "description": "Required. The type of the feedback."
        },
        "customerId": {
          "type": "string",
          "description": "Output only. The unique identifier of the Google account of the customer."
        },
        "feedbackId": {
          "description": "Output only. The unique identifier for the feedback.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Output only. The time this feedback was created."
        }
      },
      "description": "A customer feedback about an alert.",
      "id": "AlertFeedback"
    },
    "DlpRuleViolation": {
      "properties": {
        "ruleViolationInfo": {
          "$ref": "RuleViolationInfo",
          "description": "Details about the violated DLP rule. Admins can use the predefined detectors provided by Google Cloud DLP https://cloud.google.com/dlp/ when setting up a DLP rule. Matched Cloud DLP detectors in this violation if any will be captured in the MatchInfo.predefined_detector."
        }
      },
      "id": "DlpRuleViolation",
      "type": "object",
      "description": "Alerts that get triggered on violations of Data Loss Prevention (DLP) rules."
    },
    "UndeleteAlertRequest": {
      "description": "A request to undelete a specific alert that was marked for deletion.",
      "properties": {
        "customerId": {
          "type": "string",
          "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided."
        }
      },
      "type": "object",
      "id": "UndeleteAlertRequest"
    },
    "Attachment": {
      "properties": {
        "csv": {
          "$ref": "Csv",
          "description": "A CSV file attachment."
        }
      },
      "id": "Attachment",
      "description": "Attachment with application-specific information about an alert.",
      "type": "object"
    },
    "DeviceCompromised": {
      "properties": {
        "email": {
          "description": "The email of the user this alert was created for.",
          "type": "string"
        },
        "events": {
          "items": {
            "$ref": "DeviceCompromisedSecurityDetail"
          },
          "type": "array",
          "description": "Required. The list of security events."
        }
      },
      "description": "A mobile device compromised alert. Derived from audit logs.",
      "type": "object",
      "id": "DeviceCompromised"
    },
    "RequestInfo": {
      "type": "object",
      "description": "Requests for one application that needs default SQL setup.",
      "properties": {
        "appKey": {
          "type": "string",
          "description": "Required. The application that requires the SQL setup."
        },
        "appDeveloperEmail": {
          "description": "List of app developers who triggered notifications for above application.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "numberOfRequests": {
          "type": "string",
          "description": "Required. Number of requests sent for this application to set up default SQL instance.",
          "format": "int64"
        }
      },
      "id": "RequestInfo"
    },
    "ListAlertFeedbackResponse": {
      "description": "Response message for an alert feedback listing request.",
      "type": "object",
      "properties": {
        "feedback": {
          "items": {
            "$ref": "AlertFeedback"
          },
          "type": "array",
          "description": "The list of alert feedback. Feedback entries for each alert are ordered by creation time descending."
        }
      },
      "id": "ListAlertFeedbackResponse"
    },
    "Csv": {
      "properties": {
        "dataRows": {
          "description": "The list of data rows in a CSV file, as string arrays rather than as a single comma-separated string.",
          "items": {
            "$ref": "CsvRow"
          },
          "type": "array"
        },
        "headers": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "The list of headers for data columns in a CSV file."
        }
      },
      "id": "Csv",
      "type": "object",
      "description": "A representation of a CSV file attachment, as a list of column headers and a list of data rows."
    },
    "AppMakerSqlSetupNotification": {
      "type": "object",
      "properties": {
        "requestInfo": {
          "items": {
            "$ref": "RequestInfo"
          },
          "type": "array",
          "description": "List of applications with requests for default SQL set up."
        }
      },
      "description": "Alerts from App Maker to notify admins to set up default SQL instance.",
      "id": "AppMakerSqlSetupNotification"
    },
    "Settings": {
      "description": "Customer-level settings.",
      "properties": {
        "notifications": {
          "type": "array",
          "description": "The list of notifications.",
          "items": {
            "$ref": "Notification"
          }
        }
      },
      "type": "object",
      "id": "Settings"
    },
    "AlertMetadata": {
      "properties": {
        "etag": {
          "type": "string",
          "description": "Optional. `etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of an alert metadata from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform metatdata updates in order to avoid race conditions: An `etag` is returned in the response which contains alert metadata, and systems are expected to put that etag in the request to update alert metadata to ensure that their change will be applied to the same version of the alert metadata. If no `etag` is provided in the call to update alert metadata, then the existing alert metadata is overwritten blindly."
        },
        "customerId": {
          "type": "string",
          "description": "Output only. The unique identifier of the Google account of the customer."
        },
        "severity": {
          "type": "string",
          "description": "The severity value of the alert. Alert Center will set this field at alert creation time, default's to an empty string when it could not be determined. The supported values for update actions on this field are the following: * HIGH * MEDIUM * LOW"
        },
        "status": {
          "description": "The current status of the alert. The supported values are the following: * NOT_STARTED * IN_PROGRESS * CLOSED",
          "type": "string"
        },
        "updateTime": {
          "type": "string",
          "description": "Output only. The time this metadata was last updated.",
          "format": "google-datetime"
        },
        "assignee": {
          "type": "string",
          "description": "The email address of the user assigned to the alert."
        },
        "alertId": {
          "description": "Output only. The alert identifier.",
          "type": "string"
        }
      },
      "description": "An alert metadata.",
      "id": "AlertMetadata",
      "type": "object"
    },
    "GmailMessageInfo": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "description": "The date the malicious email was sent.",
          "format": "google-datetime"
        },
        "messageId": {
          "type": "string",
          "description": "The message ID."
        },
        "attachmentsSha256Hash": {
          "description": "The `SHA256` hash of email's attachment and all MIME parts.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "md5HashMessageBody": {
          "description": "The hash of the message body text.",
          "type": "string"
        },
        "recipient": {
          "description": "The recipient of this email.",
          "type": "string"
        },
        "md5HashSubject": {
          "type": "string",
          "description": "The MD5 Hash of email's subject (only available for reported emails)."
        },
        "subjectText": {
          "type": "string",
          "description": "The email subject text (only available for reported emails)."
        },
        "messageBodySnippet": {
          "type": "string",
          "description": "The snippet of the message body text (only available for reported emails)."
        }
      },
      "id": "GmailMessageInfo",
      "description": "Details of a message in phishing spike alert."
    },
    "AccountWarning": {
      "type": "object",
      "id": "AccountWarning",
      "properties": {
        "email": {
          "description": "Required. The email of the user that this event belongs to.",
          "type": "string"
        },
        "loginDetails": {
          "description": "Optional. Details of the login action associated with the warning event. This is only available for: * Suspicious login * Suspicious login (less secure app) * Suspicious programmatic login * User suspended (suspicious activity)",
          "$ref": "LoginDetails"
        }
      },
      "description": "Alerts for user account warning events."
    },
    "Empty": {
      "type": "object",
      "id": "Empty",
      "properties": {},
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "CsvRow": {
      "properties": {
        "entries": {
          "type": "array",
          "description": "The data entries in a CSV file row, as a string array rather than a single comma-separated string.",
          "items": {
            "type": "string"
          }
        }
      },
      "description": "A representation of a single data row in a CSV file.",
      "type": "object",
      "id": "CsvRow"
    },
    "BatchUndeleteAlertsRequest": {
      "description": "A request to perform batch undelete on alerts.",
      "properties": {
        "alertId": {
          "items": {
            "type": "string"
          },
          "description": "Required. list of alert IDs.",
          "type": "array"
        },
        "customerId": {
          "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with.",
          "type": "string"
        }
      },
      "id": "BatchUndeleteAlertsRequest",
      "type": "object"
    },
    "BatchUndeleteAlertsResponse": {
      "type": "object",
      "description": "Response to batch undelete operation on alerts.",
      "id": "BatchUndeleteAlertsResponse",
      "properties": {
        "failedAlertStatus": {
          "description": "The status details for each failed alert_id.",
          "type": "object",
          "additionalProperties": {
            "$ref": "Status"
          }
        },
        "successAlertIds": {
          "description": "The successful list of alert IDs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      }
    },
    "StateSponsoredAttack": {
      "id": "StateSponsoredAttack",
      "description": "A state-sponsored attack alert. Derived from audit logs.",
      "properties": {
        "email": {
          "type": "string",
          "description": "The email of the user this incident was created for."
        }
      },
      "type": "object"
    },
    "BatchDeleteAlertsResponse": {
      "properties": {
        "successAlertIds": {
          "description": "The successful list of alert IDs.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "failedAlertStatus": {
          "description": "The status details for each failed alert_id.",
          "type": "object",
          "additionalProperties": {
            "$ref": "Status"
          }
        }
      },
      "type": "object",
      "id": "BatchDeleteAlertsResponse",
      "description": "Response to batch delete operation on alerts."
    },
    "BadWhitelist": {
      "description": "Alert for setting the domain or IP that malicious email comes from as whitelisted domain or IP in Gmail advanced settings.",
      "type": "object",
      "id": "BadWhitelist",
      "properties": {
        "maliciousEntity": {
          "description": "The entity whose actions triggered a Gmail phishing alert.",
          "$ref": "MaliciousEntity"
        },
        "domainId": {
          "description": "The domain ID.",
          "$ref": "DomainId"
        },
        "sourceIp": {
          "description": "The source IP address of the malicious email, for example, `127.0.0.1`.",
          "type": "string"
        },
        "messages": {
          "items": {
            "$ref": "GmailMessageInfo"
          },
          "description": "The list of messages contained by this alert.",
          "type": "array"
        }
      }
    },
    "MaliciousEntity": {
      "type": "object",
      "properties": {
        "fromHeader": {
          "description": "The sender email address.",
          "type": "string"
        },
        "displayName": {
          "description": "The header from display name.",
          "type": "string"
        },
        "entity": {
          "description": "The actor who triggered a gmail phishing alert.",
          "$ref": "User"
        }
      },
      "id": "MaliciousEntity",
      "description": "Entity whose actions triggered a Gmail phishing alert."
    },
    "DeviceCompromisedSecurityDetail": {
      "type": "object",
      "description": "Detailed information of a single MDM device compromised event.",
      "properties": {
        "deviceModel": {
          "description": "The model of the device.",
          "type": "string"
        },
        "resourceId": {
          "description": "The device resource ID.",
          "type": "string"
        },
        "deviceId": {
          "type": "string",
          "description": "Required. The device ID."
        },
        "serialNumber": {
          "type": "string",
          "description": "The serial number of the device."
        },
        "deviceType": {
          "type": "string",
          "description": "The type of the device."
        },
        "iosVendorId": {
          "description": "Required for iOS, empty for others.",
          "type": "string"
        },
        "deviceCompromisedState": {
          "type": "string",
          "description": "The device compromised state. Possible values are \"`Compromised`\" or \"`Not Compromised`\"."
        }
      },
      "id": "DeviceCompromisedSecurityDetail"
    },
    "PhishingSpike": {
      "type": "object",
      "description": "Alert for a spike in user reported phishing. *Warning*: This type has been deprecated. Use [MailPhishing](/admin-sdk/alertcenter/reference/rest/v1beta1/MailPhishing) instead.",
      "id": "PhishingSpike",
      "properties": {
        "messages": {
          "items": {
            "$ref": "GmailMessageInfo"
          },
          "description": "The list of messages contained by this alert.",
          "type": "array"
        },
        "maliciousEntity": {
          "description": "The entity whose actions triggered a Gmail phishing alert.",
          "$ref": "MaliciousEntity"
        },
        "domainId": {
          "$ref": "DomainId",
          "description": "The domain ID."
        },
        "isInternal": {
          "description": "If `true`, the email originated from within the organization.",
          "type": "boolean"
        }
      }
    },
    "RuleInfo": {
      "properties": {
        "resourceName": {
          "type": "string",
          "description": "Resource name that uniquely identifies the rule."
        },
        "displayName": {
          "description": "User provided name of the rule.",
          "type": "string"
        }
      },
      "description": "Proto that contains rule information.",
      "id": "RuleInfo",
      "type": "object"
    },
    "Status": {
      "description": "The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).",
      "type": "object",
      "properties": {
        "message": {
          "description": "A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the google.rpc.Status.details field, or localized by the client.",
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32",
          "description": "The status code, which should be an enum value of google.rpc.Code."
        },
        "details": {
          "description": "A list of messages that carry the error details. There is a common set of message types for APIs to use.",
          "type": "array",
          "items": {
            "additionalProperties": {
              "description": "Properties of the object. Contains field @type with type URL.",
              "type": "any"
            },
            "type": "object"
          }
        }
      },
      "id": "Status"
    },
    "ActivityRule": {
      "properties": {
        "triggerSource": {
          "description": "The trigger sources for this rule. * GMAIL_EVENTS * DEVICE_EVENTS * USER_EVENTS",
          "type": "string"
        },
        "threshold": {
          "type": "string",
          "description": "Alert threshold is for example “COUNT \u003e 5”."
        },
        "displayName": {
          "description": "Alert display name.",
          "type": "string"
        },
        "actionNames": {
          "items": {
            "type": "string"
          },
          "description": "List of action names associated with the rule threshold.",
          "type": "array"
        },
        "description": {
          "description": "Description of the rule.",
          "type": "string"
        },
        "query": {
          "description": "Query that is used to get the data from the associated source.",
          "type": "string"
        },
        "supersedingAlert": {
          "description": "Alert ID superseding this alert. It is used to indicate that superseding alert is essentially extension of this alert and we found the relationship after creating both alerts.",
          "type": "string"
        },
        "windowSize": {
          "format": "google-duration",
          "description": "Rule window size. Possible values are 1 hour or 24 hours.",
          "type": "string"
        },
        "createTime": {
          "type": "string",
          "description": "Rule create timestamp.",
          "format": "google-datetime"
        },
        "supersededAlerts": {
          "items": {
            "type": "string"
          },
          "type": "array",
          "description": "List of alert IDs superseded by this alert. It is used to indicate that this alert is essentially extension of superseded alerts and we found the relationship after creating these alerts."
        },
        "updateTime": {
          "format": "google-datetime",
          "description": "The timestamp of the last update to the rule.",
          "type": "string"
        },
        "name": {
          "description": "Rule name.",
          "type": "string"
        }
      },
      "id": "ActivityRule",
      "type": "object",
      "description": "Alerts from G Suite Security Center rules service configured by admin."
    },
    "User": {
      "id": "User",
      "properties": {
        "displayName": {
          "type": "string",
          "description": "Display name of the user."
        },
        "emailAddress": {
          "description": "Email address of the user.",
          "type": "string"
        }
      },
      "description": "A user.",
      "type": "object"
    },
    "CloudPubsubTopic": {
      "id": "CloudPubsubTopic",
      "description": "A reference to a Cloud Pubsub topic. To register for notifications, the owner of the topic must grant `alerts-api-push-notifications@system.gserviceaccount.com` the `projects.topics.publish` permission.",
      "properties": {
        "payloadFormat": {
          "type": "string",
          "enum": [
            "PAYLOAD_FORMAT_UNSPECIFIED",
            "JSON"
          ],
          "enumDescriptions": [
            "Payload format is not specified (will use JSON as default).",
            "Use JSON."
          ],
          "description": "Optional. The format of the payload that would be sent. If not specified the format will be JSON."
        },
        "topicName": {
          "type": "string",
          "description": "The `name` field of a Cloud Pubsub [Topic] (https://cloud.google.com/pubsub/docs/reference/rest/v1/projects.topics#Topic)."
        }
      },
      "type": "object"
    },
    "PredefinedDetectorInfo": {
      "type": "object",
      "description": "Detector provided by Google.",
      "id": "PredefinedDetectorInfo",
      "properties": {
        "detectorName": {
          "description": "Name that uniquely identifies the detector.",
          "type": "string"
        }
      }
    },
    "ResourceInfo": {
      "id": "ResourceInfo",
      "properties": {
        "documentId": {
          "type": "string",
          "description": "Drive file ID."
        },
        "resourceTitle": {
          "description": "Title of the resource, for example email subject, or document title.",
          "type": "string"
        }
      },
      "type": "object",
      "description": "Proto that contains resource information."
    },
    "MatchInfo": {
      "id": "MatchInfo",
      "properties": {
        "predefinedDetector": {
          "$ref": "PredefinedDetectorInfo",
          "description": "For matched detector predefined by Google."
        },
        "userDefinedDetector": {
          "description": "For matched detector defined by administrators.",
          "$ref": "UserDefinedDetectorInfo"
        }
      },
      "type": "object",
      "description": "Proto that contains match information from the condition part of the rule."
    },
    "SuspiciousActivity": {
      "properties": {
        "events": {
          "items": {
            "$ref": "SuspiciousActivitySecurityDetail"
          },
          "description": "Required. The list of security events.",
          "type": "array"
        },
        "email": {
          "type": "string",
          "description": "The email of the user this alert was created for."
        }
      },
      "type": "object",
      "description": "A mobile suspicious activity alert. Derived from audit logs.",
      "id": "SuspiciousActivity"
    },
    "MailPhishing": {
      "description": "Proto for all phishing alerts with common payload. Supported types are any of the following: * User reported phishing * User reported spam spike * Suspicious message reported * Phishing reclassification * Malware reclassification * Gmail potential employee spoofing",
      "properties": {
        "messages": {
          "description": "The list of messages contained by this alert.",
          "type": "array",
          "items": {
            "$ref": "GmailMessageInfo"
          }
        },
        "domainId": {
          "description": "The domain ID.",
          "$ref": "DomainId"
        },
        "isInternal": {
          "description": "If `true`, the email originated from within the organization.",
          "type": "boolean"
        },
        "systemActionType": {
          "description": "System actions on the messages.",
          "type": "string",
          "enum": [
            "SYSTEM_ACTION_TYPE_UNSPECIFIED",
            "NO_OPERATION",
            "REMOVED_FROM_INBOX"
          ],
          "enumDescriptions": [
            "System action is unspecified.",
            "No operation.",
            "Messages were removed from the inbox."
          ]
        },
        "maliciousEntity": {
          "description": "The entity whose actions triggered a Gmail phishing alert.",
          "$ref": "MaliciousEntity"
        }
      },
      "id": "MailPhishing",
      "type": "object"
    },
    "ListAlertsResponse": {
      "properties": {
        "nextPageToken": {
          "type": "string",
          "description": "The token for the next page. If not empty, indicates that there may be more alerts that match the listing request; this value can be used in a subsequent ListAlertsRequest to get alerts continuing from last result of the current list call."
        },
        "alerts": {
          "type": "array",
          "description": "The list of alerts.",
          "items": {
            "$ref": "Alert"
          }
        }
      },
      "id": "ListAlertsResponse",
      "type": "object",
      "description": "Response message for an alert listing request."
    },
    "LoginDetails": {
      "properties": {
        "loginTime": {
          "type": "string",
          "format": "google-datetime",
          "description": "Optional. The successful login time that is associated with the warning event. This isn't present for blocked login attempts."
        },
        "ipAddress": {
          "description": "Optional. The human-readable IP address (for example, `11.22.33.44`) that is associated with the warning event.",
          "type": "string"
        }
      },
      "description": "The details of the login action.",
      "id": "LoginDetails",
      "type": "object"
    }
  },
  "version": "v1beta1",
  "documentationLink": "https://developers.google.com/admin-sdk/alertcenter/",
  "discoveryVersion": "v1",
  "icons": {
    "x32": "http://www.google.com/images/icons/product/search-32.gif",
    "x16": "http://www.google.com/images/icons/product/search-16.gif"
  },
  "canonicalName": "AlertCenter",
  "fullyEncodeReservedExpansion": true,
  "revision": "20201231",
  "kind": "discovery#restDescription",
  "rootUrl": "https://alertcenter.googleapis.com/",
  "basePath": "",
  "servicePath": "",
  "auth": {
    "oauth2": {
      "scopes": {
        "https://www.googleapis.com/auth/apps.alerts": {
          "description": "See and delete your domain's G Suite alerts, and send alert feedback"
        }
      }
    }
  },
  "name": "alertcenter",
  "id": "alertcenter:v1beta1",
  "ownerDomain": "google.com",
  "mtlsRootUrl": "https://alertcenter.mtls.googleapis.com/",
  "version_module": true,
  "ownerName": "Google",
  "resources": {
    "v1beta1": {
      "methods": {
        "updateSettings": {
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "response": {
            "$ref": "Settings"
          },
          "httpMethod": "PATCH",
          "id": "alertcenter.updateSettings",
          "flatPath": "v1beta1/settings",
          "path": "v1beta1/settings",
          "description": "Updates the customer-level settings.",
          "parameterOrder": [],
          "parameters": {
            "customerId": {
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert settings are associated with. Inferred from the caller identity if not provided.",
              "location": "query",
              "type": "string"
            }
          },
          "request": {
            "$ref": "Settings"
          }
        },
        "getSettings": {
          "path": "v1beta1/settings",
          "httpMethod": "GET",
          "flatPath": "v1beta1/settings",
          "response": {
            "$ref": "Settings"
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "parameters": {
            "customerId": {
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert settings are associated with. Inferred from the caller identity if not provided.",
              "type": "string",
              "location": "query"
            }
          },
          "parameterOrder": [],
          "id": "alertcenter.getSettings",
          "description": "Returns customer-level settings."
        }
      }
    },
    "alerts": {
      "resources": {
        "feedback": {
          "methods": {
            "list": {
              "scopes": [
                "https://www.googleapis.com/auth/apps.alerts"
              ],
              "flatPath": "v1beta1/alerts/{alertId}/feedback",
              "description": "Lists all the feedback for an alert. Attempting to list feedbacks for a non-existent alert returns `NOT_FOUND` error.",
              "parameters": {
                "customerId": {
                  "type": "string",
                  "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert feedback are associated with. Inferred from the caller identity if not provided.",
                  "location": "query"
                },
                "filter": {
                  "location": "query",
                  "type": "string",
                  "description": "Optional. A query string for filtering alert feedback results. For more details, see [Query filters](/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](/admin-sdk/alertcenter/reference/filter-fields#alerts.feedback.list)."
                },
                "alertId": {
                  "description": "Required. The alert identifier. The \"-\" wildcard could be used to represent all alerts.",
                  "required": true,
                  "type": "string",
                  "location": "path"
                }
              },
              "parameterOrder": [
                "alertId"
              ],
              "id": "alertcenter.alerts.feedback.list",
              "httpMethod": "GET",
              "response": {
                "$ref": "ListAlertFeedbackResponse"
              },
              "path": "v1beta1/alerts/{alertId}/feedback"
            },
            "create": {
              "request": {
                "$ref": "AlertFeedback"
              },
              "description": "Creates new feedback for an alert. Attempting to create a feedback for a non-existent alert returns `NOT_FOUND` error. Attempting to create a feedback for an alert that is marked for deletion returns `FAILED_PRECONDITION' error.",
              "flatPath": "v1beta1/alerts/{alertId}/feedback",
              "httpMethod": "POST",
              "id": "alertcenter.alerts.feedback.create",
              "parameterOrder": [
                "alertId"
              ],
              "response": {
                "$ref": "AlertFeedback"
              },
              "path": "v1beta1/alerts/{alertId}/feedback",
              "scopes": [
                "https://www.googleapis.com/auth/apps.alerts"
              ],
              "parameters": {
                "alertId": {
                  "location": "path",
                  "required": true,
                  "description": "Required. The identifier of the alert this feedback belongs to.",
                  "type": "string"
                },
                "customerId": {
                  "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided.",
                  "type": "string",
                  "location": "query"
                }
              }
            }
          }
        }
      },
      "methods": {
        "getMetadata": {
          "parameterOrder": [
            "alertId"
          ],
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "httpMethod": "GET",
          "parameters": {
            "alertId": {
              "location": "path",
              "type": "string",
              "description": "Required. The identifier of the alert this metadata belongs to.",
              "required": true
            },
            "customerId": {
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert metadata is associated with. Inferred from the caller identity if not provided.",
              "type": "string",
              "location": "query"
            }
          },
          "flatPath": "v1beta1/alerts/{alertId}/metadata",
          "id": "alertcenter.alerts.getMetadata",
          "path": "v1beta1/alerts/{alertId}/metadata",
          "response": {
            "$ref": "AlertMetadata"
          },
          "description": "Returns the metadata of an alert. Attempting to get metadata for a non-existent alert returns `NOT_FOUND` error."
        },
        "batchUndelete": {
          "parameters": {},
          "id": "alertcenter.alerts.batchUndelete",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "parameterOrder": [],
          "request": {
            "$ref": "BatchUndeleteAlertsRequest"
          },
          "response": {
            "$ref": "BatchUndeleteAlertsResponse"
          },
          "flatPath": "v1beta1/alerts:batchUndelete",
          "path": "v1beta1/alerts:batchUndelete",
          "httpMethod": "POST",
          "description": "Performs batch undelete operation on alerts."
        },
        "delete": {
          "response": {
            "$ref": "Empty"
          },
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "parameters": {
            "customerId": {
              "type": "string",
              "location": "query",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided."
            },
            "alertId": {
              "location": "path",
              "type": "string",
              "description": "Required. The identifier of the alert to delete.",
              "required": true
            }
          },
          "description": "Marks the specified alert for deletion. An alert that has been marked for deletion is removed from Alert Center after 30 days. Marking an alert for deletion has no effect on an alert which has already been marked for deletion. Attempting to mark a nonexistent alert for deletion results in a `NOT_FOUND` error.",
          "path": "v1beta1/alerts/{alertId}",
          "httpMethod": "DELETE",
          "id": "alertcenter.alerts.delete",
          "flatPath": "v1beta1/alerts/{alertId}",
          "parameterOrder": [
            "alertId"
          ]
        },
        "list": {
          "flatPath": "v1beta1/alerts",
          "parameterOrder": [],
          "response": {
            "$ref": "ListAlertsResponse"
          },
          "httpMethod": "GET",
          "path": "v1beta1/alerts",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "description": "Lists the alerts.",
          "parameters": {
            "filter": {
              "type": "string",
              "location": "query",
              "description": "Optional. A query string for filtering alert results. For more details, see [Query filters](/admin-sdk/alertcenter/guides/query-filters) and [Supported query filter fields](/admin-sdk/alertcenter/reference/filter-fields#alerts.list)."
            },
            "customerId": {
              "location": "query",
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alerts are associated with. Inferred from the caller identity if not provided."
            },
            "orderBy": {
              "type": "string",
              "location": "query",
              "description": "Optional. The sort order of the list results. If not specified results may be returned in arbitrary order. You can sort the results in descending order based on the creation timestamp using `order_by=\"create_time desc\"`. Currently, supported sorting are `create_time asc`, `create_time desc`, `update_time desc`"
            },
            "pageToken": {
              "type": "string",
              "description": "Optional. A token identifying a page of results the server should return. If empty, a new iteration is started. To continue an iteration, pass in the value from the previous ListAlertsResponse's next_page_token field.",
              "location": "query"
            },
            "pageSize": {
              "description": "Optional. The requested page size. Server may return fewer items than requested. If unspecified, server picks an appropriate default.",
              "format": "int32",
              "location": "query",
              "type": "integer"
            }
          },
          "id": "alertcenter.alerts.list"
        },
        "get": {
          "description": "Gets the specified alert. Attempting to get a nonexistent alert returns `NOT_FOUND` error.",
          "flatPath": "v1beta1/alerts/{alertId}",
          "httpMethod": "GET",
          "parameterOrder": [
            "alertId"
          ],
          "path": "v1beta1/alerts/{alertId}",
          "response": {
            "$ref": "Alert"
          },
          "parameters": {
            "customerId": {
              "location": "query",
              "type": "string",
              "description": "Optional. The unique identifier of the Google Workspace organization account of the customer the alert is associated with. Inferred from the caller identity if not provided."
            },
            "alertId": {
              "location": "path",
              "description": "Required. The identifier of the alert to retrieve.",
              "required": true,
              "type": "string"
            }
          },
          "id": "alertcenter.alerts.get",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ]
        },
        "batchDelete": {
          "response": {
            "$ref": "BatchDeleteAlertsResponse"
          },
          "path": "v1beta1/alerts:batchDelete",
          "request": {
            "$ref": "BatchDeleteAlertsRequest"
          },
          "flatPath": "v1beta1/alerts:batchDelete",
          "id": "alertcenter.alerts.batchDelete",
          "parameterOrder": [],
          "parameters": {},
          "httpMethod": "POST",
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "description": "Performs batch delete operation on alerts."
        },
        "undelete": {
          "scopes": [
            "https://www.googleapis.com/auth/apps.alerts"
          ],
          "httpMethod": "POST",
          "description": "Restores, or \"undeletes\", an alert that was marked for deletion within the past 30 days. Attempting to undelete an alert which was marked for deletion over 30 days ago (which has been removed from the Alert Center database) or a nonexistent alert returns a `NOT_FOUND` error. Attempting to undelete an alert which has not been marked for deletion has no effect.",
          "parameterOrder": [
            "alertId"
          ],
          "path": "v1beta1/alerts/{alertId}:undelete",
          "id": "alertcenter.alerts.undelete",
          "request": {
            "$ref": "UndeleteAlertRequest"
          },
          "parameters": {
            "alertId": {
              "required": true,
              "description": "Required. The identifier of the alert to undelete.",
              "type": "string",
              "location": "path"
            }
          },
          "flatPath": "v1beta1/alerts/{alertId}:undelete",
          "response": {
            "$ref": "Alert"
          }
        }
      }
    }
  },
  "protocol": "rest",
  "batchPath": "batch",
  "parameters": {
    "oauth_token": {
      "type": "string",
      "location": "query",
      "description": "OAuth 2.0 token for the current user."
    },
    "prettyPrint": {
      "type": "boolean",
      "description": "Returns response with indentations and line breaks.",
      "default": "true",
      "location": "query"
    },
    "uploadType": {
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "location": "query",
      "type": "string"
    },
    "fields": {
      "type": "string",
      "description": "Selector specifying which fields to include in a partial response.",
      "location": "query"
    },
    "callback": {
      "description": "JSONP",
      "location": "query",
      "type": "string"
    },
    "$.xgafv": {
      "enum": [
        "1",
        "2"
      ],
      "location": "query",
      "enumDescriptions": [
        "v1 error format",
        "v2 error format"
      ],
      "type": "string",
      "description": "V1 error format."
    },
    "alt": {
      "default": "json",
      "location": "query",
      "description": "Data format for response.",
      "enumDescriptions": [
        "Responses with Content-Type of application/json",
        "Media download with context-dependent Content-Type",
        "Responses with Content-Type of application/x-protobuf"
      ],
      "type": "string",
      "enum": [
        "json",
        "media",
        "proto"
      ]
    },
    "quotaUser": {
      "type": "string",
      "location": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters."
    },
    "upload_protocol": {
      "type": "string",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "location": "query"
    },
    "key": {
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "location": "query",
      "type": "string"
    },
    "access_token": {
      "description": "OAuth access token.",
      "location": "query",
      "type": "string"
    }
  },
  "baseUrl": "https://alertcenter.googleapis.com/",
  "title": "Google Workspace Alert Center API"
}
